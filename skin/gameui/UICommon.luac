--@module UICommon
local UITools=require("zeromvc.ui.UITools")
local BattleExports = require("game.battle.common.BattleExports")
local UICommon = {
}

-- ImageView加载外部图片
function UICommon.loadExternalTexture(img,filename)
    if( not cc.FileUtils:getInstance():isFileExist(filename) )then
      print("Texture file " .. filename .. " does not exist")
      -- print(img:isVisible(),"img:isVisible()___")
      if img:isVisible() then
        img._isVisible=false
        img:setVisible(false)
      end
      return
    end
    if img._isVisible==false then
      img:setVisible(true)
      img._isVisible=nil
    end 
    img:loadTexture(filename)
    --img:ignoreContentAdaptWithSize(true)
end

-- 分割首字符(如: 俄语1个字符占2个字节)
function UICommon.mSplitFirstChar(str)
    local function Bytes4Character(theByte)
        local seperate = {0, 0xc0, 0xe0, 0xf0}
        for i = #seperate, 1, -1 do
            if theByte >= seperate[i] then return i end
        end
        return 1
    end
    local len = Bytes4Character(string.byte(str, 1))
    local s1 = string.sub(str, 1, len)
    local s2 = string.sub(str, len+1, #str)
    return s1,s2
end

-- 计算自定义尺寸的文本行数(内容可能包含换行符)
-- mTxt ==> 自定义尺寸的文本
-- str ==> 内容
-- rw ==> 行宽
function UICommon.mCountTxtRowsByDec(mTxt,str,rw,debug)
    local rows = 0
    local str_s = string.split(str, "\n")
    -- if debug then
    --     print("str===",str)
    --     dump(str_s,"str_s===")
    -- end
    for i,v in ipairs(str_s) do
        -- if debug then
        --     print("startDec===######=====",v)
        -- end
        local cw = UICommon.mCountTxtRows(mTxt,v,rw,debug)
        rows = rows + cw
    end
    return rows
end

-- 计算自定义尺寸的文本行数
-- mTxt ==> 自定义尺寸的文本
-- str ==> 内容
-- rw ==> 行宽
function UICommon.mCountTxtRows(mTxt,str,rw,debug)
    local mt = mTxt:clone()
    mt:ignoreContentAdaptWithSize(true)
    mt:setTextAreaSize({width = 0, height = 0})

    local spw = nil
    local function getCharWidth(s)
        local w = 0
        if s ~= " " then
            mt:setString(s)
            w = mt:getContentSize().width
        else
            if spw then
                w = spw
            else
                local w1 = getCharWidth("1 1")
                local w2 = getCharWidth("11")
                spw = w1 - w2
                w = spw
            end
        end
        return w
    end

    local chars_1 = string.split(str, " ")
    local chars_2 = {}
    for i,s in ipairs(chars_1) do
        if s ~= "" then
            table.insert(chars_2,s)
        end
        if i < #chars_1 then
            table.insert(chars_2," ")
        end
    end
    -- if debug then
    --     dump(chars_1,"chars_1===")
    --     dump(chars_2,"chars_2===")
    -- end

    local mDo,mIdx,rows = true,1,1
    while(mDo == true) do
        local dep = rw
        -- local ms = ""
        -- if debug then
        --     print("start#####===",rows,mIdx)
        -- end
        while(true) do
            local s = chars_2[mIdx]
            mw = getCharWidth(s)

            -- ms = ms..s

            if mw <= dep then
                dep = dep - mw
                mIdx = mIdx + 1
                -- if debug then
                --     print("keep===",rows,mIdx,dep,mw,"["..s.."]","["..ms.."]")
                -- end
            else
                if mw <= rw then
                    rows = rows + 1
                    -- if debug then
                    --     print("over===",rows)
                    -- end
                    break
                else
                    local cr = math.ceil(mw/rw)
                    local ful = dep >= rw
                    dep = cr * rw - mw
                    local dr = cr - (ful and 1 or 0)
                    rows = rows + dr
                    mIdx = mIdx + 1
                    -- if debug then
                    --     print("jump===",rows,mIdx,dep,mw,cr,ful,dr,"["..s.."]","["..ms.."]")
                    -- end
                    -- ms = ""
                end
            end

            if mIdx > #chars_2 then
                mDo = false
                break
            end
        end
    end
    return rows
end

--rh参数没用
function UICommon.setCountRowTxt(txt,str,rw,rh,minH,ty)
    rw = rw or txt:getContentSize().width
    txt:setContentSize(rw, rh or 1)
    if ty == nil then
        txt:setString(str)
    else
        txt:setString(str,ty)
    end
    local th = UICommon.testHeight(txt)
    if minH then
        th = math.max(th,minH)
    end
    txt:setContentSize(rw, th)
    return th
end

function UICommon.autoScale(scale,otherScale)
    if display.height>1334 and otherScale then
      return display.height / 1334 * scale*otherScale
    end
    return display.height / 1334 * scale
end

function UICommon.actBtnSetWaiting(actBtnSender)
    local waitingCircle=UICommon.getWaitingCircle()
    waitingCircle:move(actBtnSender:getContentSize().width*0.5,actBtnSender:getContentSize().height*0.5)
    actBtnSender:addChild(waitingCircle)
    waitingCircle:show()
    actBtnSender.waitingCircle = waitingCircle;
end

function UICommon.actBtnSetWaiting2(actBtnSender)
    local waitingText = UICommon.getWaitingText()
    waitingText:move(actBtnSender:getContentSize().width*0.5,actBtnSender:getContentSize().height*0.5)
    actBtnSender:addChild(waitingText)
    waitingText:show()
    actBtnSender.waitingCircle = waitingText; -- 名字不改了，不然要改的地方很多 
end

function UICommon.setMaxWidthForText(text,long)
    local function suoziti()
       local fontsize = text:getFontSize()
       if fontsize<=1 then
          return
       end
        if text:getContentSize().width>long then
            text:setFontSize(fontsize-1)
            text:setTextVerticalAlignment(1)
            suoziti()
        end
    end
    suoziti()
end

--缩小按钮的文本大小
function UICommon.setMaxWidthForButtom(buttom)
    local function suoziti()
       local fontsize = buttom:getTitleFontSize()
       local long = buttom:getContentSize().width-10
       if fontsize<=1 then
          return
       end
       local width = buttom:getTitleRenderer():getContentSize().width
        if width>long then
            buttom:setTitleFontSize(fontsize-1)
            suoziti()
        end
    end
    suoziti()
end

--获取最小的值
function UICommon.getMinNum( ... )
    local table = {...}
    local min = table[1]
    for i=2,#table do
        if min > table[i] then
            min = table[i]
        end
    end
    return min
end

--获取最大的值
function UICommon.getMaxNum( ... )
    local table = {...}
    local max = table[1]
    for i=2,#table do
        if max < table[i] then
            max = table[i]
        end
    end
    return max
end


--缩小editBox(输入框)的默认文本的文字大小
function UICommon.setMaxWidthForTextField(editBox,long)
    local text = ccui.Text:create()
    text:setFontName(editBox:getFontName())
    text:setString(editBox:getPlaceHolder())
    local function suo()
        local fontsize = editBox:getPlaceholderFontSize()
        text:setFontSize(fontsize)
        local textWidth = text:getContentSize().width
        if textWidth>long then
            editBox:setPlaceholderFontSize(fontsize-1)
            suo()
        end
    end
    suo()
end
--不用语音文本字体大小特殊处理
function UICommon.setfontSizeAccordingToTheLanguage(language,text,fontSize)
    if LANGUAGE ==language then
        text:setFontSize(fontSize)
    end
end

function UICommon.setMaxWidthForTextDouble(text1,text2,long)
    local function suoziti()
       local fontsize = text1:getFontSize()
       if fontsize<=1 then
          return
       end
        if text1:getContentSize().width + text2:getContentSize().width>long then
            text1:setFontSize(fontsize-1)
            text1:setTextVerticalAlignment(1)
            text2:setFontSize(fontsize-1)
            text2:setTextVerticalAlignment(1)
            suoziti()
        end
    end
    suoziti()
end

--文本自适应，多个文本，最后一个参数是长度
function UICommon.setMaxWidthForTextAll( ... )
    local t = {...}
    if #t <= 1 then
        return
    end
    local function suoziti()
        local width = 0
        for i=1,#t-1 do
            width = width + t[i]:getContentSize().width
        end
        local text1 = t[1]
        local fontSize = text1:getFontSize()
        if width > t[#t] then
            for i=1,#t-1 do
                t[i]:setFontSize(fontSize-1)
                t[i]:setTextVerticalAlignment(1)
            end
            suoziti()
        end
    end
    suoziti()
end
--文本换行加自适应
function UICommon.setMaxFontSizeForText(field,width,height)
    local text = field:getString()
    local fontSize = field:getFontSize()
    local index = 0 
    local indexTable = {}--确定空格的位置
    --拿到空格位置
    while true do
        if index~=nil then
           index = string.find(text," ",index+1)
           if index ~= nil then
              table.insert(indexTable,index)
           end
        else
            break
        end
    end
    local begin = 1
    local stringTable={}--分解出来的每一个单词
    --分解单词
    for i=1,#indexTable do
        local indexEnd = indexTable[i]
        table.insert(stringTable,string.sub(text,begin,indexEnd-1))
        begin = indexEnd+1
    end
    table.insert(stringTable,string.sub(text,begin,-1))
    local superWideIndex = 1
    function suoziti()
        if fontSize <= 1 then
            return
        end
        while superWideIndex <= #stringTable do
            field:setFontSize(fontSize)
            field:setString(stringTable[superWideIndex])
            -- 判断文本是否超宽，超宽缩字体
            if field:getContentSize().width > width then
                fontSize = fontSize-1
                suoziti()
                break
            else
                superWideIndex = superWideIndex + 1
            end
        end

        begin = 1
        local stringEnd = stringTable[1]
        local stringOneRow = stringTable[1]
        while begin<#stringTable do
            field:setFontSize(fontSize)
            field:setString(stringOneRow.." "..stringTable[(begin+1)])
            if field:getContentSize().width < width then
                stringEnd = stringEnd.." "..stringTable[(begin+1)]
                stringOneRow = stringOneRow.." "..stringTable[(begin+1)]
            else
                stringEnd = stringEnd.."\n"..stringTable[(begin+1)]
                stringOneRow = stringTable[(begin+1)]
            end
            begin=begin+1
        end
        field:setFontSize(fontSize)
        field:setString(stringEnd)        
        --判断文本是否超高，超高缩字体
        if field:getContentSize().height > height then
            fontSize=fontSize-1
            suoziti()
        end
    end
    suoziti()
end

function UICommon.setMaxWidthForText2(text,long,sc)
    if sc then
        text:setScale(sc)
    end
    local textWidth = text:getContentSize().width
    if textWidth > long then
        text:setScale(long/textWidth)
    end
end

function UICommon.checkIsGoodEamil(string)
    if not string then
        return false
    end

    if (string:match("[A-Za-z0-9%.%%%+%-]+@[A-Za-z0-9%.%%%+%-]+%.%w%w%w?%w?")) then
        return true
    else
        return false
    end
end
function UICommon.checkIsGoodPWD(str)
   if #str>=6 and #str<=20 then
        return true
   end
   return false
end
-- function UICommon.formatRichText(str)
--     local m_pString = str
--     local m_nIdx = 1
--     local m_nLen = string.len(m_pString)
--     local newString = {}
--     local defaultColor = "def"
--     local m_curString = ""
--     local colorMap = {
--         A = "#D9CBAF", B = "#785842", C = "#FFFFFF", D = "#2C2C2C", E = "#205030", F = "#2FB835",
--         G = "#5E0808", H = "#FF3535", I = "#F3D272", J = "#5A2F16", K = "#109EBC", L = "#818181",
--         M = "#95B6C4", N = "#F69E2D", b = "#000000", r = "#ff0000", g = "#f1be74", x = "#e91414", n = "def"
--     }
--     local function setColorText(color)
--         color = colorMap[color]
--         if m_curString == "" then
--             defaultColor = color
--             return
--         end
--         local temp = {
--             text = m_curString,
--             color = defaultColor
--         }
--         defaultColor = color
--         table.insert(newString,temp)
--         m_curString = ""
--     end
--     while(m_nIdx <= m_nLen) do
--         local char = string.sub(m_pString, m_nIdx, m_nIdx)
--         if ("\r" == char) or ("\n" == char) then
--             m_nIdx = m_nIdx + 1
--             m_curString = m_curString.."\n"
--         elseif ("\\" == char and 'n' == string.sub(m_pString, m_nIdx+1, m_nIdx+1)) then
--             m_nIdx = m_nIdx + 2
--             m_curString = m_curString.."\n"
--         elseif ('#' == char) then
--             m_nIdx = m_nIdx + 1
--             char = string.sub(m_pString, m_nIdx, m_nIdx)
--             if colorMap[char] ~= nil then
--                 m_nIdx = m_nIdx + 1
--                 setColorText(char)
--             else
--                 m_nIdx = m_nIdx + 1
--                 m_curString = m_curString .. "#" ..char
--             end
--         else
--             m_curString = m_curString .. char
--             m_nIdx = m_nIdx + 1
--         end
--     end
--     setColorText("n")
--     return UICommon.txts2html(newString)
-- end

-- Button加载外部图片
function UICommon.loadExternalTextureNormal(img,filename)
    if( not cc.FileUtils:getInstance():isFileExist(filename) )then
        print("Texture file " .. filename .. " does not exist")
        return
    end
    img:loadTextureNormal(filename)
end

function UICommon.setZisiMinorHua(img,val,scale)
  local isSpine = string.match(val,"zisi")
  if isSpine==nil then
    local he = ccui.ImageView:create()
    he:setAnchorPoint(0.5,0)
    img:removeAllChildren();
    he:setName("tupian")
    img:addChild(he)
    he:loadTexture("assetsRes/res/child/whole/"..val..".png")
    he:setScale(scale)
    he:setPositionX(img:getContentSize().width/2)
    he.pic = "assetsRes/res/child/whole/"..val..".png"
    return he
  else
    local npc3JsonPath = "assetsRes/res/animation/spine/zisi/"..val..".json"
    local npc3AtlasPath = "assetsRes/res/animation/spine/zisi/"..val..".atlas"
    local npc3Actor = sp.SkeletonAnimation:create(npc3JsonPath, npc3AtlasPath, scale or 1)
    npc3Actor:setAnimation(0,"standby",true)
    npc3Actor:setAnchorPoint(0.5,0)
    npc3Actor:setPositionX(img:getContentSize().width/2)
    img:removeAllChildren();
    img:addChild(npc3Actor);
    return npc3Actor
  end
end

function UICommon.getWaitingText()
    local text = ccui.Text:create()
    text:setFontName("assetsRes/ttf/Cardo-Bold.ttf")
    text:setFontSize(24)
    text:enableOutline({r = 0, g = 0, b = 0, a = 255}, 2)
    text:ignoreContentAdaptWithSize(false)
    text:setTextAreaSize({width = 120, height = 55})
    text:setTextHorizontalAlignment(1)
    text:setTextVerticalAlignment(1)
    text:setAnchorPoint(0.5, 0.5)
    text:setString(lang("activity.loading"))
    UICommon.shrinkFontSize(text)
    local msg = text:getString()
    local index = 1;
    local p = {"", ".", "..", "..."}
    local function schedule(node, callback, delay)
        local delay = cc.DelayTime:create(delay)
        local sequence = cc.Sequence:create(delay, cc.CallFunc:create(callback))
        local action = cc.RepeatForever:create(sequence)
        node:runAction(action)
        return action
    end
    local function setTxt( ... )
        text:setString(msg..p[index])
        index = index + 1
        if index > 4 then
            index = 1
        end
    end
    function text:show( ... )
        nodeDelayCall(text, function()
            text:setVisible(true)
            schedule(text, setTxt, 0.2)
        end, 0.2)
        text:setVisible(false)
    end
    function text:hide( ... )
        text:removeSelf()
    end
    return text
end

function UICommon.getWaitingCircle() --改一个好一点的
   local node =cc.Node:create()
   local bg2=cc.Sprite:create("assetsRes/res/extra/extra68.png")
   node:addChild(bg2)
   bg2:setScale(0.8)
   local time
   local rota=0
   local function upFrame( ... )
      time=time+1
      if time>10 then
         bg2:setVisible(true)
      end
      if time%3==0 then
         rota=(rota+36+360)%360
         bg2:setRotation(rota)
      end
   end
   function  node:show( ... )
      time=0
      node:scheduleUpdateWithPriorityLua(upFrame, 0)
      bg2:setVisible(false)
   end
   function  node:hide( ... )
      if node:getParent()~=nil then
         node:getParent():removeChild(node)
      end
   end
   return node
end

function UICommon.getWaitingCircle2()
    local node =cc.Node:create()
    local bg2=cc.Sprite:create("assetsRes/res/extra/extra68.png")
    node:addChild(bg2)
    bg2:setScale(0.8)
    bg2:setVisible(false)
    local function upFrame( ... )
        bg2:setRotation(bg2:getRotation() + 5)
    end
    local function runRotation( ... )
        local d_3 = cc.DelayTime:create(0.015);
        local call_3 = cc.CallFunc:create(function( ... )
            upFrame();
        end);
        local seq_3 = cc.Sequence:create(d_3,call_3);
        local rep_3 = cc.RepeatForever:create(seq_3)
        bg2:runAction(rep_3)
    end
    local d = cc.DelayTime:create(0.1);
    local call_1 = cc.CallFunc:create(function( ... )
        bg2:setVisible(true);
        runRotation();
    end);
   local seq = cc.Sequence:create(d,call_1)
   bg2:runAction(seq)
   return node
end

function UICommon.getWaitingCircle3(node,time,angle)
    local function upFrame( ... )
        node:setRotation(node:getRotation() + angle or 5)
    end
    local function runRotation( ... )
        local d_3 = cc.DelayTime:create(time);
        local call_3 = cc.CallFunc:create(function( ... )
            upFrame();
        end);
        local seq_3 = cc.Sequence:create(d_3,call_3);
        local rep_3 = cc.RepeatForever:create(seq_3)
        node:runAction(rep_3)
    end
    runRotation()
end
function UICommon.getWaitingCircle4(node)
    node:runAction(cc.RepeatForever:create(cc.RotateBy:create(2,360)))
end

--检测骨骼点击透明区域
function UICommon.checkSpClick(sender,eventType)
    local senderParent = sender:getParent()
    local oldPos = cc.p(senderParent:getPosition())
    local oldPoint = senderParent:getAnchorPoint()
    local size = senderParent:getContentSize()
    local clickPos = nil
    if eventType then
        if eventType == ccui.TouchEventType.began then
            clickPos = sender:getTouchBeganPosition()
        elseif eventType == ccui.TouchEventType.ended then
            clickPos = sender:getTouchEndPosition()
        end
    else
        clickPos = sender:getTouchEndPosition()
    end
    local render = cc.RenderTexture:create(size.width,size.height);
    render:setAnchorPoint(0,0)
    render:setPosition(0,0)
    senderParent:setAnchorPoint(0,0)
    senderParent:setPosition(0,0)
    render:begin()
    sender:visit()
    render:endToLua();
    senderParent:setAnchorPoint(oldPoint)
    senderParent:setPosition(oldPos)
    cc.Director:getInstance():flushScene();
    local image = render:newImage()
    local pos = sender:convertToNodeSpace(cc.p(clickPos.x, clickPos.y))
    pos.y = image:getHeight() - pos.y
    local rgba = image:getPixelColor(pos)
    image:release()
    return (rgba.a ~= 0)
end

--创建空白按钮
function UICommon.createrBtn(size,pos,opacity)
    local btn1 = ccui.Button:create("assetsRes/res/btn/btn_tongyong_lan.png")
    btn1:setAnchorPoint(0.5,0.5)
    btn1:ignoreContentAdaptWithSize(false)
    btn1:setContentSize(size)
    btn1:setPosition(pos)
    btn1:setOpacity(opacity or 0)
    return btn1;
end
function UICommon.createrLayout(size,point,pos,isEnabled)
    local Panel_1 = ccui.Layout:create()
    Panel_1:setAnchorPoint(point or cc.p(0,0))
    Panel_1:ignoreContentAdaptWithSize(false)
    Panel_1:setClippingEnabled(true)
    Panel_1:setBackGroundColorOpacity(0)
    Panel_1:setTouchEnabled(isEnabled or true);
    Panel_1:setPosition(pos or cc.p(0,0))
    Panel_1:setContentSize(size)
    return Panel_1
end
--第三个参数设置透明度方便调试，不填为0
--创建骨骼容器
function UICommon.createrSpFrame(pos,size,opacity)
    local Panel_1 = ccui.Layout:create()
    Panel_1:setAnchorPoint(0,0)
    Panel_1:ignoreContentAdaptWithSize(false)
    Panel_1:setClippingEnabled(true)
    Panel_1:setBackGroundColorOpacity(0)
    Panel_1:setTouchEnabled(true);
    Panel_1:setPosition(pos)
    Panel_1:setContentSize(size)

    local btn1 = ccui.Button:create("assetsRes/res/btn/btn_tongyong_lan.png")
    btn1:setAnchorPoint(0,0)
    btn1:ignoreContentAdaptWithSize(false)
    btn1:setContentSize(size)
    btn1:setPosition(cc.p(0,0))
    btn1:setOpacity(opacity or 0)
    Panel_1:addChild(btn1);
    Panel_1.btn = btn1;
    return Panel_1
end

function UICommon.addSpineTouchEvent(node,dong,scale,callback)
    local Panel_1 = ccui.Layout:create()
    Panel_1:setAnchorPoint(0,0)
    Panel_1:ignoreContentAdaptWithSize(false)
    Panel_1:setClippingEnabled(true)
    Panel_1:setBackGroundColorOpacity(0)
    Panel_1:setColor(cc.c3b(148,102,68))
    Panel_1:setOpacity(0)
    Panel_1:setTouchEnabled(true);
    Panel_1:setContentSize(cc.size(700,750*scale))
    node:removeAllChildren()
    node:addChild(Panel_1)
    Panel_1:setPositionX(-Panel_1:getContentSize().width/2)
    local btn1 = ccui.Button:create("assetsRes/res/btn/btn_tongyong_lan.png")
    btn1:setAnchorPoint(0,0)
    btn1:setOpacity(0)
    btn1:ignoreContentAdaptWithSize(false)
    btn1:setContentSize(cc.size(700,750*scale))
    Panel_1:addChild(btn1);
    btn1:addChild(dong)
    dong:setPositionX(btn1:getContentSize().width/2)
    local function onClick(sender, eventType)
        if eventType == ccui.TouchEventType.ended then
            local pos = sender:getTouchEndPosition()
            local isAlpha = nil
            if dong.pic then
                isAlpha = UICommon.checkImage(sender,pos,dong.pic)
            else
                isAlpha = UICommon.checkSpClick(sender,eventType)
            end
            if isAlpha == true then
                callback()
            end
        end
    end
    btn1:addTouchEventListener(onClick)
end

function UICommon.checkIfTouch(node,x,y)
    local nsp = node:convertToNodeSpace(cc.p(x, y))
    local contentSize = node:getContentSize()
    local rect = cc.rect(0, 0, contentSize.width, contentSize.height)
    return cc.rectContainsPoint(rect, nsp)
end

--检测图片点击透明区域
function UICommon.checkImage(clickBtn,clickPos,pic)
    local pos = clickBtn:convertToNodeSpace(cc.p(clickPos.x, clickPos.y))
    local function createrRender(width,height)
        return cc.RenderTexture:create(width,height)
    end
    local picxx = ccui.ImageView:create(pic)
    local picSize = picxx:getContentSize()
    local status,render = pcall(createrRender,picSize.width,picSize.height)
    if status == false then
        return true;
    end
    if render ~= nil and render.getReferenceCount ~= nil and render:getReferenceCount() == 0 then
        return true;
    end
    if render == nil then
        return true;
    end
    if tolua.isnull(render) == true  then
        return true
    end
    picxx:setAnchorPoint(0,0)
    picxx:setPosition(0,0)

    local function test111( ... )
        render:begin()
        picxx:visit()
        render:endToLua()
        cc.Director:getInstance():flushScene();
        local image = render:newImage()
        pos.y = image:getHeight() - pos.y
        local rgba = image:getPixelColor(pos)
        image:release()
        return rgba
    end
    local status2,rgba = pcall(test111)
    if status2 == false then
        return true;
    end
    return (rgba.a ~= 0)
end

--检测粒子
function UICommon.addLizi(box)
    local function createrLi()
        return cc.ParticleSystemQuad:create("assetsRes/particle/zjm_lizidiandian.plist")
    end
    local status,render = pcall(createrLi)
    if status == false then
        return true;
    end
    render:setAutoRemoveOnFinish(false)
    render:setPosition(75,75)
    box:addChild(render)
end


--创建富文本
function UICommon.addRichLabel(pos,fontSize,fontColor,maxWidth,lineSpace,charSpace,isLayout)
    local color = nil
    local RichLabel=require "game.friend.richlabel.RichLabel"
    local rlabel = RichLabel.new {
        fontName = "assetsRes/xtzt.ttf",
        fontSize = fontSize or 24,
        fontColor = fontColor,
        maxWidth = maxWidth,
        lineSpace = lineSpace or 5,
        charSpace = charSpace or 0,
    }
    if isLayout then
        rlabel:layout()
    end
    rlabel:setPosition(pos)
    return rlabel
end

function UICommon.createReplaceReRichLabel(parentNode,replaceNode)
    local txt = replaceNode
    local pos = cc.p(txt:getPosition());
    local point = txt:getAnchorPoint();
    local fontSize = txt:getFontSize();
    local size = txt:getContentSize();
    local color = txt:getTextColor();
    txt:setVisible(false)
    txt:removeSelf()
    local text = UICommon.addRichLabel(pos,fontSize,color,size.width,5,0)
    text:setAnchorPoint(point)
    parentNode:addChild(text,1,1)
    return text
end

--添加骨骼动画和粒子动画
function UICommon.addEff(node,info)
    node:removeAllChildren()
    if info and type(info.eff) == "table" then
        for i,val in pairs(info.eff) do
            --1是骨骼 2是粒子
            local hand = nil
            if val.nType == 1 then
                hand = ccs.Armature:create(val.name)
                if val.playName and val.playName ~= "" then
                    hand:getAnimation():play(val.playName)
                else
                    if val.loop ~= nil and val.loop == false then
                        hand:getAnimation():playWithIndex(0,-1,0)
                    else
                        hand:getAnimation():playWithIndex(0)
                    end
                end
            else
                hand = cc.ParticleSystemQuad:create("assetsRes/res/animation/particle/" .. val.name .. ".plist" )
                hand:setAutoRemoveOnFinish(false)
                --这个是粒子的滤镜效果,怎么调具体问美术，然后把相应的值填入
                if val.glew then
                    if val.glew[1] == "GL_SRC_ALPHA" and val.glew[2] == "GL_ONE" then
                        hand:setBlendFunc({src = 770,dst = 1})
                    else
                        hand:setBlendFunc({src = val.glew[1],dst = val.glew[2]})
                    end
                end
            end
            if val.color then
                hand:setColor(cc.c3b(val.rgb[1],val.rgb[2],val.rgb[3]));
            end
            hand:setPosition(cc.p(val.x,val.y))
            hand:setRotation(val.rotate or 0);
            hand:setScaleX(val.scaleX or 1);
            hand:setScaleY(val.scaleY or 1);
            if val.Opacity then
                hand:setOpacity(255 * (val.Opacity / 100))
            else
                hand:setOpacity(255)
            end
            node:addChild(hand)
        end
    end
end

function UICommon.changeBtn(node,callback,listTable,textTable,clickIndex)
    local call = callback
    local text = textTable or {}
    local lists = listTable or {}
    local Gray = UITools.getChild(node,"btnGray")
    local Blue1 = UITools.getChild(node,"btnBlue")
    local btnTable = {}
    local curClickIndex = nil
    local function setVisibleData(id)
        for i=1,3 do
            UITools.getChild(Blue1,"Blue" .. i):setVisible(false)
            UITools.getChild(Gray,"Gray" .. i):setVisible(true)
            if lists[i] then
                lists[i]:setVisible(false)
            end
        end
        UITools.getChild(Blue1,"Blue" .. id):setVisible(true)
        UITools.getChild(Gray,"Gray" .. id):setVisible(false)
        if lists[id] then
            lists[id]:setVisible(true)
        end
    end
    local function onClickEvent(sender)
        if curClickIndex and curClickIndex == sender.clickId then
            return
        end
        curClickIndex = sender.clickId
        setVisibleData(sender.clickId)
        return call(sender.clickId);
    end
    for i=1,3 do
        UITools.getChild(Gray,"Gray" .. i):setVisible(true)
        UITools.getChild(Blue1,"Blue" .. i):setVisible(false)
        UITools.getChild(Blue1,"Blue" .. i,"Text"):setString(text[i] or "")
        UITools.getChild(Gray,"Gray" .. i,"Text"):setString(text[i] or "")
        local btn = UITools.getChild(node,"btn","btn" .. i)
        btn.clickId = i
        btn:addClickEventListener(onClickEvent)
        table.insert(btnTable,btn)
    end
    if clickIndex then
        onClickEvent(btnTable[clickIndex])
    else
        onClickEvent(btnTable[1])
    end
end

function UICommon.changeBtn2(leftItem,rightItem,leftText,rightText,callback,dir)
    local left_o_text = UITools.getChild(leftItem,"open","txt")
    local left_c_text = UITools.getChild(leftItem,"close","txt")
    local right_o_text = UITools.getChild(rightItem,"open","txt")
    local right_c_text = UITools.getChild(rightItem,"close","txt")

    left_o_text:setString(leftText)
    left_c_text:setString(leftText)
    right_o_text:setString(rightText)
    right_c_text:setString(rightText)

    UICommon.setMaxWidthForText(left_o_text,260)
    UICommon.setMaxWidthForText(left_c_text,260)
    UICommon.setMaxWidthForText(right_o_text,260)
    UICommon.setMaxWidthForText(right_c_text,260)

    local left_o = UITools.getChild(leftItem,"open")
    local left_c = UITools.getChild(leftItem,"close")
    local right_o = UITools.getChild(rightItem,"open")
    local right_c = UITools.getChild(rightItem,"close")
    local curDir = dir or "left"

    local function leftState( ... )
        left_o:hide()
        left_c:show()
        right_o:show()
        right_c:hide()
        leftItem:setLocalZOrder(1)
        rightItem:setLocalZOrder(0)
        UICommon.EnabledBtn(UITools.getChild(leftItem,"btn"),false)
        UICommon.EnabledBtn(UITools.getChild(rightItem,"btn"),true)
    end
    local function rightState( ... )
        left_o:show()
        left_c:hide()
        right_o:hide()
        right_c:show()
        leftItem:setLocalZOrder(0)
        rightItem:setLocalZOrder(1)
        UICommon.EnabledBtn(UITools.getChild(leftItem,"btn"),true)
        UICommon.EnabledBtn(UITools.getChild(rightItem,"btn"),false)
    end
    local function setData( ... )
        if curDir == "left" then
            leftState()
        else
            rightState()
        end
        if callback ~= nil then
            callback(curDir)
        end
    end
    setData()
    local function clickHd(sender)
        if sender.curTag == "right" then
            curDir = "right"
        elseif sender.curTag == "left" then
            curDir = "left"
        end
        setData()
    end
    UITools.getChild(leftItem,"btn"):addClickEventListener(clickHd)
    UITools.getChild(rightItem,"btn"):addClickEventListener(clickHd)
    UITools.getChild(leftItem,"btn").curTag = "left"
    UITools.getChild(rightItem,"btn").curTag = "right"
end
function UICommon.changeBtn3(node,strPool,tagPool)
    if strPool == nil or next(strPool) == nil or #strPool == 0 then
        return
    end
    local btnPool = {}
    local function setCommand(cut)
        local Text = nil
        local color = nil
        local enableColor = nil
        local fontSize = nil
        local data = tonumber(cut) ~= nil and strPool or tagPool
        for i = 1, #data do
            Text = UITools.getChild(btnPool[i],"btn1","Text")
            if (tonumber(cut) ~= nil and i == cut) or data[i] == cut then
                color = {r = 255,g = 241,b = 207}
                fontSize = 28
                enableColor = {r = 103,g = 82,b = 51,a = 255}
                UITools.getChild(btnPool[i],"btn1_no"):setVisible(false)
                UITools.getChild(btnPool[i],"btn1_se"):setVisible(true)
            else
                color = {r = 175,g = 161,b = 141}
                fontSize =28
                enableColor = {r = 83,g = 46,b = 0,a = 255}

                UITools.getChild(btnPool[i],"btn1_no"):setVisible(true)
                UITools.getChild(btnPool[i],"btn1_se"):setVisible(false)
            end
            Text:setTextColor(color)
            Text:setFontSize(fontSize)
            Text:enableOutline(enableColor, 2)
        end
    end
    
    local item,txt
    local num = 1
    for i,val in pairs(strPool) do
        item = require("union.unionPrepaidBtnItem").create().box
        item:removeSelf()
        txt = UITools.getChild(item,"btn1","Text")
        txt:setString(val)
        UICommon.shrinkFontSize(txt)
        node:pushBackCustomItem(item)
        btnPool[num] = item
        num = num + 1
    end
    node.__setCommand = setCommand
end
function UICommon.changeRankBtn(node,callback,listTable,textTable,clickIndex)
    local call = callback
    local text = textTable or {}
    local lists = listTable or {}
    local Gray = UITools.getChild(node,"btnGray")
    local Blue1 = UITools.getChild(node,"btnBlue")
    local btnTable = {}
    local curClickIndex = nil
    local function setVisibleData(id)
        for i=1,3 do
            UITools.getChild(Blue1,"Blue" .. i):setVisible(false)
            UITools.getChild(Gray,"Gray" .. i):setVisible(true)
            if lists[i] then
                lists[i]:setVisible(false)
            end
        end
        UITools.getChild(Blue1,"Blue" .. id):setVisible(true)
        UITools.getChild(Gray,"Gray" .. id):setVisible(false)
        if lists[id] then
            lists[id]:setVisible(true)
        end
    end
    local function onClickEvent(sender)
        if curClickIndex and curClickIndex == sender.clickId then
            return
        end
        curClickIndex = sender.clickId
        setVisibleData(sender.clickId)
        return call(sender.clickId);
    end
    for i=1,3 do
        UITools.getChild(Gray,"Gray" .. i):setVisible(true)
        UITools.getChild(Blue1,"Blue" .. i):setVisible(false)
        UITools.getChild(Blue1,"Blue" .. i,"Text"):setString(text[i] or "")
        UITools.getChild(Gray,"Gray" .. i,"Text"):setString(text[i] or "")
        local btn = UITools.getChild(node,"btn","btn" .. i)
        btn.clickId = i
        btn:addClickEventListener(onClickEvent)
        table.insert(btnTable,btn)
    end
    UICommon.shrinkFontSize(UITools.getChild(Gray,"Gray" .. 3,"Text"))
    if clickIndex then
        onClickEvent(btnTable[clickIndex])
    else
        onClickEvent(btnTable[1])
    end
end

function UICommon.subKong(str,num,tab)
    local lenghts = string.len(str);
    local m = ""
    local t = ""
    local nums = num
    while nums <= lenghts do
        t = string.sub(str,nums,nums)
        if t and t == " " then
            m = m .. t;
        elseif t and t ~= " " then
            table.insert(tab,m)
            break;
        else
            break
        end
        nums = nums + 1
    end
    return nums
end

function UICommon.subStr(str)
    local isSubKong = false;
    local isSubKongNum = 0;
    local t = ""
    local push = ""
    local num = 1;
    local lenght = string.len(str)
    local tab = {}
    while num <= lenght do
        t = string.sub(str,num,num)
        if t and t ~= " " then
            push = push .. t;
        elseif t and t == " " then
            table.insert(tab,push)
            push = ""
            isSubKong = true
            isSubKongNum = UICommon.subKong(str,num,tab);
        else
            break;
        end
        if num == lenght then
            table.insert(tab,push)
            break
        end
        if isSubKong == false then
            num = num + 1
        else
            isSubKong = false
            num = isSubKongNum
        end
    end 
    return tab
end

-- local str = "Yes, Albert. But all the facts point otherwise. We we will need to further investigate, and we will need your help."
-- local tableStr = {}
-- subStr(tableStr,str)

function UICommon.getTTfWidth(fontSize,fontName)
    local fontSizeTable = {}
    local Text_1 = ccui.Text:create()
    Text_1:setFontName(fontName or "assetsRes/xtzt.ttf")
    Text_1:setFontSize(fontSize)
    Text_1:setString("a")
    fontSizeTable.xWidth = Text_1:getContentSize().width
    Text_1:setString("A")
    fontSizeTable.dWidth = Text_1:getContentSize().width
    Text_1:setString(" a")
    fontSizeTable.tWidth = Text_1:getContentSize().width - fontSizeTable.xWidth
    fontSizeTable.Text_1 = Text_1
    Text_1:retain()
    return fontSizeTable
end

-- string.byte("a") print(97)
-- string.char(97) print("[")
function UICommon.getCharType(str)
    local nType = nil;
    local i = string.byte(str)
    if i >= 97 and i <= 122 then --小写
        nType = 1
    elseif i >= 65 and i <= 90 then --大写
        nType = 2
    else
        nType = 3
    end
    return nType
end

function UICommon.getCurStrWidth(str,fontSizeTable)
    local num = 1;
    local s = ""
    local totalWidth = 0
    local index = nil;

    local function tWidth(s)
        fontSizeTable.Text_1:setString(s .. "a")
        return fontSizeTable.Text_1:getContentSize().width
    end
    while true do
        s = string.sub(str,num,num)
        if s and #s > 0 then
            index = UICommon.getCharType(s)
            if index ~= nil then
                if index == 1 then
                    totalWidth = totalWidth + fontSizeTable.xWidth
                elseif index == 2 then
                    totalWidth = totalWidth + fontSizeTable.dWidth
                elseif index == 3 then
                    totalWidth = totalWidth + tWidth(s) - fontSizeTable.xWidth
                end
            end
        else
            break;
        end
        num = num + 1
    end
    return totalWidth
end

function UICommon.getAutoStr(tableStr,fontSize,textWidth,fontName)
    local fontSizeTable = UICommon.getTTfWidth(fontSize,fontName)
    local curWidth = 0;
    local totalWidth = textWidth
    local outStr = ""
    local outStrBy = ""
    local index = 1
    local t = {}
    local val = ""
    local curWidthBy = -1;
    while true do
        val = tableStr[index]
        if val == nil then
            break
        end
        outStrBy = outStr
        outStr = outStr .. val
        curWidth = curWidth + UICommon.getCurStrWidth(val,fontSizeTable);
        
        if curWidthBy == curWidth then
            print("Error: This textbox won't hold a single word")
            return nil;
        end
        curWidthBy = curWidth
        if curWidth > totalWidth then
            outStr = outStrBy
            if string.sub(val,1,1) == " " then
                index = index + 1
            end
            -- outStr = outStr .. "\n"
            outStr = outStr
            table.insert(t,outStr)
            outStr = ""
            curWidth = 0
        else
            index = index + 1
            if index > #tableStr then
                table.insert(t,outStr)
                break
            end
        end
    end
    local tt = {}
    tt.strTable = {}
    tt.str = ""
    tt.fontSize = fontSize
    tt.fontName = fontName or UICommon.getTTFName()
    tt.textWidth = textWidth
    for i,val in pairs(t) do
        table.insert(tt.strTable,val)
        tt.str = tt.str .. val
    end
    return tt;
end

function UICommon.createText(node,tables,jumpNum,callback,color)
    local t = {}
    local Text_1 = nil
    local str = ""
    local height = node:getContentSize().height
    local timeId = nil
    local function getText(str)
        local Text_1 = ccui.Text:create()
        Text_1:setFontName(tables.fontName or "assetsRes/xtzt.ttf")
        Text_1:setFontSize(tables.fontSize)
        Text_1:setColor(color or cc.c3b(255,255,255))
        Text_1:setAnchorPoint(0,0)
        return Text_1
    end
    local curX = 0
    local x = 0
    for i,val in pairs(tables.strTable) do
        for j = 1,string.len(val) do
            str = string.sub(val,j,j)
            if str and str ~= "\n" and str ~= " " then
                Text_1 = getText(str)
                Text_1:setString(str)
                Text_1:setPosition(curX,height - tables.fontSize - (i - 1) * tables.fontSize)
                curX = curX + Text_1:getContentSize().width
                table.insert(t,Text_1)
                Text_1:setOpacity(0)
                node:addChild(Text_1)
            end
            if str == " " then
                curX = curX + tables.fontSize / 2
            end
        end
        curX = 0;
    end

    if jumpNum then
        local junpIndex = 1
        local function timeFunc()
            if junpIndex > #t or t[junpIndex] == nil then
                cc.Director:getInstance():getScheduler():unscheduleScriptEntry(timeId)
                timeId = nil
                return;
            end
            local item = t[junpIndex]
            item:runAction(cc.FadeIn:create(0.2))
            junpIndex = junpIndex + 1
        end
        timeId = cc.Director:getInstance():getScheduler():scheduleScriptFunc(timeFunc,1/jumpNum,false)
        local function closeJump( ... )
            if timeId == nil then return end
            cc.Director:getInstance():getScheduler():unscheduleScriptEntry(timeId)
            timeId = nil
            -- for i,val in pairs(t) do
                -- val:stopAllActions()
                -- val:setOpacity(255)
            -- end
        end
        node.closeJump = closeJump
        node:addClickEventListener(closeJump)
    end
end
function UICommon.loadAnimation(name,pos)
    local armature = ccs.Armature:create()
    armature:init(name)
    armature:setAnchorPoint(0, 0)
    armature:setPosition(pos or cc.p(0,0))
    armature:getAnimation():playWithIndex(0,-1,1)
    return armature;
end
function UICommon.setMain(_self,closeFunc,help,title,isShowDi)
    local item = _self.stu:getChild("main")
    UITools.getChild(item,"title","title"):setString(title)
    if isShowDi ~= nil then
        if isShowDi == true then
            UITools.getChild(item,"di"):setVisible(true)
            UITools.getChild(item,"di"):setPositionY(0)
        else
            UITools.getChild(item,"di"):setVisible(false)
        end
    end
    UITools.getChild(item,"title","btnBack"):addClickEventListener(function()
        if closeFunc then
            closeFunc()
        end
    end)
    UITools.getChild(item,"help"):addClickEventListener(function()
        if help then
            _self.zero:command("game.help.HelpCommand.showHelp",help)
        end
    end)
    _self.zero:show("game.player.ResTopView",_self.stu,UITools.getChild(item,"res"))
end

function UICommon.addMain(_self,helpCall)
    local res = require("common.topCom").create().root
    local title = require("common.publicBar").create().root
    _self.stu:addChild(title)
    _self.stu:addChild(res)
    _self.addTitle = title
    _self.addRes = res
    if helpCall ~= nil then
        local btn = ccui.Button:create("assetsRes/res/common/btn_guizhe.png")
        local viewSize = cc.Director:getInstance():getWinSize()
        btn:setPosition(750 - 46,1334 * (viewSize.height / 1334) - 86 - (Config.LIUHAI or 0))
        btn:addClickEventListener(helpCall)
        _self.addHelpBtn = btn
        _self.stu:addChild(btn)
    end
end


local playerProxyBy = nil
function UICommon.initPlayerProxyBy( ... )
    if playerProxyBy ~= nil then
        playerProxyBy.resTable = {}
        playerProxyBy = nil
    end
    if playerProxyBy == nil then
        playerProxyBy = king:getProxy("game.player.PlayerProxy")
    end
end
--重置主界面资源栏位置
function UICommon.resMainPos(res,title,help,new)
    local viewSize = cc.Director:getInstance():getWinSize()
    if res then
        res:setPosition(375,1334 * (viewSize.height / 1334) - Config.LIUHAI or 0)
    end
    if title then
        title:setPosition(427,1328 * (viewSize.height / 1334) - Config.LIUHAI or 0)
    end
    if title then
        local left,right,text,posX,width = nil
        left = UITools.getChild(title,"left")
        left:setVisible(true)
        right = UITools.getChild(title,"right")
        right:setVisible(true)
        text = UITools.getChild(title,"title")
        text:setPositionX(-52)
        UICommon.setMaxWidthForText(text,400)
        text:setTextVerticalAlignment(1)
        width = text:getContentSize().width;
        posX = text:getPositionX()
        left:setPositionX(posX - width / 2 - 50)
        right:setPositionX(posX + width / 2 + 50)

        title.setZbFunc = function(path,pos)
            local zb = UITools.getChild(title,"zb")
            zb:loadTexture(path)
            zb:setVisible(true)
            zb:ignoreContentAdaptWithSize(true)
            if pos ~= nil then
                zb:move(pos)
            else 
                zb:move(-26,-140)
            end
        end
    end
    if help ~= nil then
        help:setPosition(750 - 46,1334 * (viewSize.height / 1334) - 86 - (Config.LIUHAI or 0))
    end
    --new就是看不见资源栏的
    if new ~= nil then
        title:setPositionY(title:getPositionY() + 46)
        res:setPositionY(res:getPositionY() + 46)
        res:setVisible(false)
        if help ~= nil then
            help:setPosition(750 - 46,1334 * (viewSize.height / 1334) - 86 - (Config.LIUHAI or 0) + 46)
        end
    end
end

function UICommon.setResData(res)
    if playerProxyBy and res then
        UITools.getChild(res,"foodVal"):setString(lang("parseNum",playerProxyBy.user.food))
        UITools.getChild(res,"armyVal"):setString(lang("parseNum",playerProxyBy.user.army))
        UITools.getChild(res,"moneyVal"):setString(lang("parseNum",playerProxyBy.user.coin))
        UITools.getChild(res,"cashVal"):setString(lang("parseNum",playerProxyBy.user.cash))
        local function onGoldBuy()
            king:command("game.player.PlayerCommand.goldBuy")
        end
        local Button_1 = UITools.getChild(res,"Button_1")
        Button_1:addClickEventListener(onGoldBuy)
        if king:isActivate("game.charge.ChargeView") == true then
            Button_1:setVisible(false)
            res:getChildByTag(4959):setVisible(false)
        end
    end
end
--显示资源数据
function UICommon.showResData(_self,res)
    UICommon.setResData(res)
    if playerProxyBy and playerProxyBy.resTable == nil then
        playerProxyBy.resTable = {}
    end
    playerProxyBy.resTable[tostring(_self) .. "resId=xxx"] = res
end
function UICommon.clearRes(_self)
    if playerProxyBy and playerProxyBy.resTable then
        if playerProxyBy.resTable[tostring(_self) .. "resId=xxx"] then
            playerProxyBy.resTable[tostring(_self) .. "resId=xxx"] = nil
        end
    end
end

--刷新资源
function UICommon.updateRes()
    local isPrintResTable = false;
    local isPrintSize = true;
    if isPrintResTable == true and playerProxyBy ~= nil and playerProxyBy.resTable ~= nil then
        for i,val in pairs(playerProxyBy.resTable) do
            print("===res==============",i,val)
        end
    end
    local function getLength( ... )
        local num = 0;
        for i,res in pairs(playerProxyBy.resTable) do
            num = num + 1
        end
        return num;
    end
    if playerProxyBy ~= nil and playerProxyBy.resTable ~= nil then
        if isPrintSize == true then
            print("==resSize===",getLength(playerProxyBy.resTable))
        end
        for i,val in pairs(playerProxyBy.resTable) do
            if tolua.isnull(val) == false then
                UICommon.setResData(val)
            end
        end
    end
end

function UICommon.getAngleByPos(p1,p2)
    local p = {}
    p.x = p2.x - p1.x
    p.y = p2.y - p1.y
    local r = math.atan2(p.y,p.x)*180/math.pi
    return r
end
function UICommon.runDirMove(node_,startPos_,angle_,moveSpeed_)
    local node = node_
    local startPos = startPos_
    local angle = angle_
    local moveSpeed = moveSpeed_
    local dir = cc.p(math.cos(math.angle2radian(angle)),math.sin(math.angle2radian(angle)))
    local posBy = nil
    local function test( ... )
        startPos.x = startPos.x + (1 / 60 * 1) * dir.x * moveSpeed * 100;
        startPos.y = startPos.y + (1 / 60 * 1) * dir.y * moveSpeed * 100;
        posBy = startPos
        if node ~= nil then
            node:setPosition(startPos)
        end
    end
    test()
    if node ~= nil then
        local t = cc.DelayTime:create((1 / 60 * 1))
        local call = cc.CallFunc:create(test111)
        local seq = cc.Sequence:create(t,call)
        node:runAction(cc.RepeatForever:create(seq))
    end
    return posBy
end

--引导箭头
function UICommon.showArrowFromHereToThere(node,startPos,endPos)
    node:unscheduleUpdate()
    local sPos = {x = startPos.x,y = startPos.y}
    local ePos = {x = endPos.x + endPos.width / 2,y = endPos.y + endPos.height / 2};
    -- local vec = {x = ePos.x - sPos.x,y = ePos.y - sPos.y}
    local num = 0;
    local func = nil
    local image = nil
    local imageBy = nil
    local r = UICommon.getAngleByPos(sPos,ePos);
    local dis = cc.pGetDistance(sPos,ePos)
    local initPos = UICommon.runDirMove(image,{x = sPos.x,y = sPos.y},r,40)
    local function removeImage( ... )
        node.quan:setVisible(false)
        for i,val in pairs(node:getChildren()) do
            if val ~= node.quan then
                node:removeChild(val);
            end
        end
    end
    removeImage();
    local function onSetMovementEvent(armature,movementType,movementID)
        if movementType == 1 then
           -- armature:setVisible(false)
        end
    end
    node.quan:setVisible(true)
    node.quan:getAnimation():setMovementEventCallFunc(onSetMovementEvent)
    node.quan:getAnimation():playWithIndex(0, -1, 1)
    node.quan:setVisible(true)
    node.quan:setPosition(sPos)

    local creater = function(n)
        image = ccui.ImageView:create("assetsRes/res/user/icon_jiantou.png")
        image:setPosition(initPos)
        node:addChild(image)
        imageBy = image
        image:setRotation(-r)
        num = n + 1;
        local mt = cc.MoveTo:create(dis / 380 ,ePos)
        local f = cc.CallFunc:create(function(sender)
            if sender:getName() == "end" then
                node:unscheduleUpdate()
                node.quan:setVisible(false)
            end
            sender:removeSelf()
        end);
        if num == 1 then
            image:setName("end")
        end
        image:runAction(cc.Sequence:create(mt,f))
    end
    func = creater
    creater(num);
    local function check( ... )
        if num >= 100 then
            node:unscheduleUpdate()
        end
        if imageBy then
            local ePosBy = {x = imageBy:getPositionX(),y = imageBy:getPositionY()}
            if cc.pGetDistance(initPos,ePosBy) >= 40 then
                imageBy = nil
                func(num);
            end
        end
    end
    node:scheduleUpdateWithPriorityLua(check,0.02)
end


function UICommon.getHeadImgNew(roleImg,imagePath)
    local clipNode = cc.ClippingNode:create()
    clipNode:setAnchorPoint(cc.p(0,0))
    local mask = cc.Sprite:create(imagePath or "assetsRes/res/other/head_bg_7.png")
    clipNode:setInverted(false)
    clipNode:setAlphaThreshold(0)
    clipNode:setStencil(mask)
    clipNode:addChild(roleImg)
    roleImg:setAnchorPoint(cc.p(0,0))
    return clipNode
end
function UICommon.maskTouXiang(roleImg)
    local clipNode = cc.ClippingNode:create()
    clipNode:setAnchorPoint(cc.p(0,0))
    local mask = cc.Sprite:create("plist/tou/mask.png")
    clipNode:setInverted(false)
    clipNode:setAlphaThreshold(0)
    clipNode:setStencil(mask)
    clipNode:addChild(roleImg)
    roleImg:setAnchorPoint(cc.p(0,0))
    return clipNode
end
--聊天窗口圆头
function UICommon.comUserHand(node,vo,pos)
    local icon = UICommon.getRoleImg(vo.user,false)
    icon.miter:setPositionY(-120)
    local head = UICommon.getHeadImgNew(icon)
    head:setScale(0.8,0.9)
    local size = node:getContentSize()
    head:setPosition(pos or cc.p(size.width*0.5,size.height*0.5))
    node:addChild(head)
end
--获取圆弧头像
function UICommon.getUserHand(node,user)
    local icon = UICommon.getRoleImg(user,false)
    icon.miter:setPositionY(-120)
    local head = UICommon.getHeadImgNew(icon)
    head:setScale(0.8,0.9)
    local size = node:getContentSize()
    head:setPosition(pos or cc.p(size.width*0.5,size.height*0.5))
    node:addChild(head)
end

--按钮不可用false == 灰,  true = 可用
function UICommon.EnabledBtn(mineVo, isCanTouch)
    if not mineVo then
        return
    end
    mineVo:setTouchEnabled(isCanTouch)
    local stateType = isCanTouch == false and 1 or 0
    if mineVo.getVirtualRenderer and mineVo:getVirtualRenderer().setState then
        mineVo:getVirtualRenderer():setState(stateType)
    end
end
--创建圆弧文本
function UICommon.createAcrLabel(node,_str,_width,_fontSize,_fontName,_color,_outlineColor,_outlineSize,nSpaceY,_controlHeight)
    node:removeAllChildren()
    if tools.checkZhLang and tools.checkZhLang() == true then
        local label = ccui.Text:create()
        if _fontName then
            label:setFontName(_fontName)
        end
        label:setFontSize(_fontSize or 50)
        label:setColor(_color or cc.c3b(255,255,255))
        label:setString(_str)
        label:setAnchorPoint(0.5,0.5)
        label:setPosition(0,0)
        if _outlineColor then
            label:enableOutline(_outlineColor,_outlineSize or 1)
        end
        node:addChild(label)
        return
    end
    local function stringToChars(str)
        local list = {}
        local len = string.len(str)
        local i = 1 
        while i <= len do
            local c = string.byte(str, i)
            local shift = 1
            if c > 0 and c <= 127 then
                shift = 1
            elseif (c >= 192 and c <= 223) then
                shift = 2
            elseif (c >= 224 and c <= 239) then
                shift = 3
            elseif (c >= 240 and c <= 247) then
                shift = 4
            end
            local char = string.sub(str, i, i+shift-1)
            i = i + shift
            table.insert(list, char)
        end
        return list, len
    end
    local strPool,totalLen = stringToChars(_str)
    local fontSize = _fontSize or 50
    local str = _str;
    local width = _width or 32

    local totalLen = #strPool
    local controlHeight = _controlHeight or 200
    local origin = {x = -210,y = 100};
    local destination = {x = 210,y = 100};
    local control ={x = 0,y = controlHeight};
    local t = 0;
    local pos = {}
    local powf = math.pow
    local segments = #strPool
    for i = 0,segments - 1 do
        local ccp = {}
        ccp.x = powf(1 - t, 2) * origin.x + 2 * (1 - t) * t * control.x + t * t * destination.x;
        ccp.y = powf(1 - t, 2) * origin.y + 2 * (1 - t) * t * control.y + t * t * destination.y;
        t = t + 1 / segments
        table.insert(pos,ccp)
    end
    table.insert(pos,{x = destination.x,y = destination.y})
    local posBy = {}
    local start = math.floor(#pos / 2 + 1) - math.floor(totalLen / 2)
    for i = start,start + totalLen - 1 do
        table.insert(posBy,pos[i])
    end
    start = math.floor(#posBy / 2)
    if totalLen > 1 then
        if #posBy % 2 == 1 then
            local ind = start + 1
            for i = start,1,-1 do
                posBy[i].x = posBy[ind].x - width
                ind = i;
            end
            for i = start + 1,#posBy do
                posBy[i].x = posBy[i - 1].x + width
            end
        else
            for i = start - 1,1,-1 do
                posBy[i].x = posBy[i + 1].x - width
            end
            for i = start + 1,#posBy do
                posBy[i].x = posBy[i - 1].x + width
            end
        end
    end
    local label_t = {}
    for i,val in ipairs(posBy) do
        local label = ccui.Text:create()
        if _fontName then
            label:setFontName(_fontName)
        end
        label:setFontSize(fontSize)
        label:setColor(_color or cc.c3b(255,255,255))
        label:setString(strPool[i])
        label:setPosition(val.x,val.y - controlHeight + fontSize)
        if _outlineColor then
            label:enableOutline(_outlineColor,_outlineSize or 1)
        end
        node:addChild(label)
        table.insert(label_t,label)
    end
    if totalLen == 1 then
        return
    end
    local b_r = 1.08
    local s_r = -(math.floor(#label_t / 2) * b_r)
    local fjx = nil
    local bLose = true;
    local right = nil
    local rotation = 0;
    local index = 1
    if #label_t % 2 == 1 then
        fjx = math.floor(#label_t / 2)
    end
    for i,val in pairs(label_t) do
        if right ~= nil and right == true then
            rotation = index * b_r;
            index = index + 1
        end
        if right == nil then
            if fjx and i == fjx then
                bLose = false;
            end
            if bLose ==  true then
                rotation = (s_r + (i - 1) * b_r)
            else
                rotation = 0
            end
        end
        val:setRotation(rotation)
        if bLose == false then
            right = true;
        end
    end
    if nSpaceY ~= nil then
        node:setPositionY(node:getPositionY() + nSpaceY)
    end
    if #strPool % 2 == 0 then
        node:setPositionX(node:getPositionX() + width)
        node:setRotation(node:getRotation() + 5)
    end
end
function UICommon.toNumberStr(num)
    local str = {"一","二","三","四","五","六","七","八","九","十"}
    local s = nil
    local g = num
    if num / 10 > 1 then
        s = math.floor(num / 10)
        g = num - (math.floor(num / 10) * 10)
        return s > 1 and g > 0 and str[s] .. str[10] .. str[g] or s > 1 and g == 0 and str[s] .. str[10] or s == 1 and g > 0 and str[10] .. str[g]
    else
        return str[g] or 0
    end
end
--设置控件透明度
function UICommon.setItemOpacity(node,num)
    if node and num then
        node:setOpacity(num)
    end
end
function UICommon.setSpriteContour(sprite,color,radius,threshold)
    local function createrState()
        local glProgram = cc.GLProgram:createWithFilenames("gameui/outline.vsh","gameui/outline.fsh")
        local glProgramState = cc.GLProgramState:getOrCreateWithGLProgram(glProgram)
        if glProgram ~= nil and glProgramState ~= nil then
            local x,y,z
            if color ~= nil then
                x = color.x
                y = color.y
                z = color.z
            end
            glProgramState:setUniformFloat("outlineColor_x", x or 255);
            glProgramState:setUniformFloat("outlineColor_y", y or 255);
            glProgramState:setUniformFloat("outlineColor_z", z or 0);
            glProgramState:setUniformFloat("u_radius", radius or 0.01);
            glProgramState:setUniformFloat("u_threshold", threshold or 1.75);
        end
        return glProgram,glProgramState
    end
    local status,program,programState = pcall(createrState)
    if status == false then
        return
    end
    sprite:setGLProgramState(programState)
end
function UICommon.setSpineColor(spine,ratio_r,ratio_g,ratio_b)
    local function createrState()
        local glProgram = cc.GLProgram:createWithFilenames("gameui/spineColor.vsh","gameui/spineColor.fsh")
        local glProgramState = cc.GLProgramState:getOrCreateWithGLProgram(glProgram)
        if glProgram ~= nil and glProgramState ~= nil then
            glProgramState:setUniformFloat("ratio_r", ratio_r or 1);
            glProgramState:setUniformFloat("ratio_g", ratio_g or 1);
            glProgramState:setUniformFloat("ratio_b", ratio_b or 1);
        end
        return glProgramState
    end
    local status,programState = pcall(createrState)
    if status == false then
        return
    end
    spine:setGLProgramState(programState)
end
--图片置灰 和 UICommon.EnabledBtn(btn,false) 感觉很像
function UICommon.setSpriteGray(sp,flag)
    -- 默认vert
    local vertShaderByteArray = "\n"..  
        "attribute vec4 a_position; \n" ..  
        "attribute vec2 a_texCoord; \n" ..  
        "attribute vec4 a_color; \n"..  
        "#ifdef GL_ES  \n"..  
        "varying lowp vec4 v_fragmentColor;\n"..  
        "varying mediump vec2 v_texCoord;\n"..  
        "#else                      \n" ..  
        "varying vec4 v_fragmentColor; \n" ..  
        "varying vec2 v_texCoord;  \n"..  
        "#endif    \n"..  
        "void main() \n"..  
        "{\n" ..  
        "gl_Position = CC_PMatrix * a_position; \n"..  
        "v_fragmentColor = a_color;\n"..  
        "v_texCoord = a_texCoord;\n"..  
        "}"  

    -- 置灰frag
    local flagShaderByteArray = "#ifdef GL_ES \n" ..  
        "precision mediump float; \n" ..  
        "#endif \n" ..  
        "varying vec4 v_fragmentColor; \n" ..  
        "varying vec2 v_texCoord; \n" ..  
        "void main(void) \n" ..  
        "{ \n" ..  
        "vec4 c = texture2D(CC_Texture0, v_texCoord); \n" ..  
        "gl_FragColor.xyz = vec3(0.4*c.r + 0.4*c.g +0.4*c.b); \n"..  
        "gl_FragColor.w = c.w; \n"..  
        "}"  

    -- 移除置灰frag  
    local pszRemoveGrayShader = "#ifdef GL_ES \n" ..  
        "precision mediump float; \n" ..  
        "#endif \n" ..  
        "varying vec4 v_fragmentColor; \n" ..  
        "varying vec2 v_texCoord; \n" ..  
        "void main(void) \n" ..  
        "{ \n" ..  
        "gl_FragColor = texture2D(CC_Texture0, v_texCoord); \n" ..  
        "}" 
    if flag then 
        local glProgram = cc.GLProgram:createWithByteArrays(vertShaderByteArray,flagShaderByteArray)  
        glProgram:bindAttribLocation(cc.ATTRIBUTE_NAME_POSITION,cc.VERTEX_ATTRIB_POSITION)  
        glProgram:bindAttribLocation(cc.ATTRIBUTE_NAME_COLOR,cc.VERTEX_ATTRIB_COLOR)  
        glProgram:bindAttribLocation(cc.ATTRIBUTE_NAME_TEX_COORD,cc.VERTEX_ATTRIB_FLAG_TEX_COORDS)  
        glProgram:link()  
        glProgram:updateUniforms()  
        sp:getVirtualRenderer():getSprite():setGLProgram(glProgram)  
    else 
        local glProgram = cc.GLProgram:createWithByteArrays(vertShaderByteArray,pszRemoveGrayShader)  
        glProgram:bindAttribLocation(cc.ATTRIBUTE_NAME_POSITION,cc.VERTEX_ATTRIB_POSITION)  
        glProgram:bindAttribLocation(cc.ATTRIBUTE_NAME_COLOR,cc.VERTEX_ATTRIB_COLOR)  
        glProgram:bindAttribLocation(cc.ATTRIBUTE_NAME_TEX_COORD,cc.VERTEX_ATTRIB_FLAG_TEX_COORDS)  
        glProgram:link()  
        glProgram:updateUniforms()  
        sp:getVirtualRenderer():getSprite():setGLProgram(glProgram) 
    end 
end

--判断INF
function  UICommon.isINF(value)
    return value ==  math.huge or value == -math.huge
end
--判断NAN
function UICommon.isNAN(value)
    return value ~= value
end

--获取滚动容器进度条位置 --垂直
function UICommon.getScrollToPercentVertical(node,y)
    local minY = node:getContentSize().height - node:getInnerContainerSize().height
    local pro = (1 - (y or node:getInnerContainerPosition().y) / minY) * 100
    if UICommon.isNAN(pro) == true or UICommon.isINF(pro) == true then
        pro = 0
    end
    return pro
end
--获取滚动容器进度条位置 --水平
function UICommon.getScrollToPercentHorizontal(node,x)
    local minX = node:getContentSize().width - node:getInnerContainerSize().width
    local pro = (1 - (x or node:getInnerContainerPosition().x) / minX) * 100
    if UICommon.isNAN(pro) == true or UICommon.isINF(pro) == true then
        pro = 0
    end
    return pro
end

function UICommon.addStart(node,star,width,height,offX,scale)
    local starNode = node
    starNode:setContentSize(star * width,height)
    starNode:setBackGroundColorOpacity(0)
    local num = 0
    local item = nil
    for i=1, star do
        item = ccui.ImageView:create()
        item:setAnchorPoint(0,0)
        item:loadTexture("assetsRes/res/extra/extra116.png")
        item:setPosition(i * width - width - offX or 0,0)
        item:setScale(1)
        starNode:addChild(item)
        num = num + 1
    end
    starNode:setScale(scale or 1)
end

function UICommon.addStart2(node,star,spaceX,bottomAlignment)
    node:removeAllChildren()
    local item = require("servant.startItem").create().box
    local imageWidth = UITools.getChild(item,"start1","item","Image_1"):getContentSize().width
    item:removeSelf(false)
    for i = 1,6 do
        UITools.getChild(item,"start" .. i):setVisible(false)
    end
    local t = {}
    local start = nil
    if star then
        for i = 1,star do
            start = UITools.getChild(item,"start" .. i)
            start:setVisible(true)
            UITools.getChild(start,"item"):getChildByTag(490):getAnimation():setSpeedScale(0.4)
            table.insert(t,start)
        end
    end
    if star and star > 1 then
        local total = spaceX * (star - 1) + 2 * (imageWidth / 2)
        local startX = -(total / 2)
        for i,val in pairs(t) do
            val:setPositionX(startX + (i - 1) * spaceX + imageWidth / 2)
            if bottomAlignment ~= nil and bottomAlignment == true then
                val:setPositionY(1)
            end
        end
    end
    if star then
        local moveY = 0
        if star == 1 then
            moveY = 4.6
        elseif star == 2 then
            moveY = 3.6
        elseif star == 3 then
            moveY = 2.6
        end
        for i,val in pairs(t) do
            val:setPositionY(val:getPositionY() + moveY)
        end
    end
    node:addChild(item)
end
function UICommon.addStart3(node,star,spaceX,bottomAlignment)
    node:removeAllChildren()
    local item = require("servant.startItem2").create().box
    local imageWidth = UITools.getChild(item,"start1","item","Image_1"):getContentSize().width
    item:removeSelf(false)
    for i = 1,6 do
        UITools.getChild(item,"start" .. i):setVisible(false)
    end
    local t = {}
    local start = nil
    if star then
        for i = 1,star do
            start = UITools.getChild(item,"start" .. i)
            start:setVisible(true)
            table.insert(t,start)
        end
    end
    if star and star > 1 then
        local total = spaceX * (star - 1) + 2 * (imageWidth / 2)
        local startX = -(total / 2)
        for i,val in pairs(t) do
            val:setPositionX(startX + (i - 1) * spaceX + imageWidth / 2)
            if bottomAlignment ~= nil and bottomAlignment == true then
                val:setPositionY(1)
            end
        end
    end
    if star then
        local moveY = 0
        if star == 1 then
            moveY = 4.6
        elseif star == 2 then
            moveY = 3.6
        elseif star == 3 then
            moveY = 2.6
        end
        for i,val in pairs(t) do
            val:setPositionY(val:getPositionY() + moveY)
        end
    end
    node:addChild(item)
end
function UICommon.runActionNodeOpacity(node,delayTime,continueTime,opacity,callback)
    local num = 60 * continueTime
    local index = 0;
    local initOpacity = 255 / num
    local total = nil
    if opacity == 0 then
        total = 255
        node:setOpacity(255)
    elseif opacity == 255 then
        total = 0
        node:setOpacity(0)
    end
    local function call(dt)
        index = index + 1
        if index > num then
            node:unscheduleUpdate()
            if callback then
                callback()
            end
            return
        end
        if opacity == 0 then 
            node:setOpacity(total - initOpacity)
            total = total - initOpacity
        elseif opacity == 255 then
            node:setOpacity(total + initOpacity)
            total = total + initOpacity
        end
    end
    local delayTime = cc.DelayTime:create(delayTime)
    local c = cc.CallFunc:create(function( ... )
        node:scheduleUpdateWithPriorityLua(call,0)
    end)
    node:setCascadeOpacityEnabled(true)
    node:runAction(cc.Sequence:create(delayTime,c))
end


function UICommon.setScaleScrollView(_scroll,_itemWidth,_scale_max,_scale_min,_callFunc,_selectIndex,_time)
    local scale_max = _scale_max
    local scale_min = _scale_min
    local scale_add = scale_max - scale_min
    local itemWidth = _itemWidth
    local selectIndex = _selectIndex or 1
    local callFunc = _callFunc or function(index)
        
    end
    local time = _time or 1
    local scroll = _scroll
    local child = scroll:getChildren()
    local isRun = false
    local isCheck = true
    local isTouchEnd = false;
    scroll:setInnerContainerSize(cc.size(#child * itemWidth,scroll:getContentSize().height))
    for i,val in ipairs(child) do
        val:setTag(i)
    end
    for i,val in ipairs(child) do
        if val:getTag() == selectIndex then
            val:setScale(scale_max)
        else
            val:setScale(scale_min)
        end
    end
    local pro = UICommon.getScrollToPercentHorizontal(scroll,scroll:getChildByTag(selectIndex):getPositionX() - itemWidth / 2)
    scroll:scrollToPercentHorizontal(pro - 100,time,true)
    callFunc(selectIndex)
    -- local scrollViewInnerPosX = scroll:getInnerContainerPosition().x - itemWidth / 2
    -- local lenght = #child
    -- local maxMoveX = itemWidth * lenght - scroll:getContentSize().width
    -- local maxMoveX = itemWidth * lenght
    local function local_setScale(item,scale)
        if scale > scale_max or scale < scale_min then
            return
        end
        if item ~= nil then
            item:setScale(scale)
        end
    end
    local curMoveIndex,curMoveX,curMoveX_By,callFuncIndex,callFuncIndex_By
    callFuncIndex = selectIndex
    callFuncIndex_By = selectIndex
    local function scrollViewEvent(sender, evenType)
        curMoveIndex = math.floor((math.ceil(math.abs(sender:getInnerContainerPosition().x)) + _itemWidth) / _itemWidth)
        curMoveX = math.abs(scroll:getInnerContainerPosition().x)
        if curMoveX_By ~= nil then
            if curMoveX_By > curMoveX then--往右移动
                local_setScale(sender:getChildByTag(curMoveIndex),scale_min + (math.abs(curMoveIndex * itemWidth - curMoveX)) * (scale_add / itemWidth))
                local_setScale(sender:getChildByTag(curMoveIndex + 1),scale_max - (math.abs(curMoveIndex * itemWidth - curMoveX)) * (scale_add / itemWidth))
            elseif curMoveX_By < curMoveX then--往左移动
                local_setScale(sender:getChildByTag(curMoveIndex),scale_max - (itemWidth - math.abs(curMoveIndex * itemWidth - curMoveX)) * (scale_add / itemWidth))
                local_setScale(sender:getChildByTag(curMoveIndex + 1),scale_min + (itemWidth - math.abs(curMoveIndex * itemWidth - curMoveX)) * (scale_add / itemWidth))
            end
            curMoveX_By = curMoveX
        end
        if curMoveIndex == selectIndex and curMoveX_By == nil then
            curMoveX_By = math.ceil(math.abs(scroll:getInnerContainerPosition().x))
        end
        if curMoveX_By ~= nil and isRun == false then
            if math.abs(curMoveX_By - curMoveX) < 0.1666 and isCheck == true and isTouchEnd == true then
                isCheck = false;
                scroll:stopAllActions()
                return scrollViewEvent(scroll,12)
            end 
        end
        if evenType ~= nil and (evenType == 12 or evenType == 11)  then
            local curMax = scale_min
            for i,val in ipairs(child) do
                if val:getScale() > curMax then
                    curMax = val:getScale()
                    callFuncIndex_By = val:getTag()
                end
            end
            if callFuncIndex_By ~= callFuncIndex then
                callFunc(callFuncIndex_By)
                callFuncIndex = callFuncIndex_By
            end
            if isRun == true then
                return
            end
            isRun = true;
            curMax = scale_min
            local curMoveItem = nil
            for i,val in ipairs(child) do
                if val:getScale() > curMax then
                    curMax = val:getScale()
                    curMoveItem = val
                    callFuncIndex = val:getTag()
                end
            end
            local pro = UICommon.getScrollToPercentHorizontal(scroll,curMoveItem:getPositionX() - itemWidth / 2)
            scroll:scrollToPercentHorizontal(pro - 100,time,true)
            if callFuncIndex_By ~= callFuncIndex then
                callFunc(callFuncIndex)
                callFuncIndex_By = callFuncIndex
            end
            local c = cc.CallFunc:create(function( ... )
                isRun = false;
                isCheck = true;
            end)
            local d = cc.DelayTime:create(1.1)
            local s = cc.Sequence:create(d,c)
            scroll:runAction(s)
        end
    end
    local c = cc.CallFunc:create(function( ... )
        scrollViewEvent(scroll)
        scroll:addEventListener(scrollViewEvent)
        scroll:addTouchEventListener(function(sender,evenType)
            if evenType ~= 2 then
                isTouchEnd = false
            else
                isTouchEnd = true
            end
        end)
    end)
    local d = cc.DelayTime:create(time + 0.1)
    local s = cc.Sequence:create(d,c)
    scroll:runAction(s)
end

function UICommon.showHideList(node,openPool,showCallBack,maxH,minH,showId)
    local hideItem = nil
    local hideItemSize = nil
    local stretchItem = nil
    local isShow = showId or false
    local listMax = nil
    local hideItemPos = nil
    local openSize = nil
    local curInner = node:getInnerContainerSize()
    local children = node:getChildren()
    local scrollPos = cc.p(node:getPosition())
    local scrollSize = node:getContentSize()
    local viewSize = cc.Director:getInstance():getWinSize()
    local function isNodeVisible(target)
        local hPos = target:convertToWorldSpaceAR(target:getAnchorPoint())
        local sPos = target.last:convertToWorldSpaceAR(target.last:getAnchorPoint())
        local innerPos = cc.p(node:getInnerContainerPosition())
        local offY = 0
        if sPos.y + target.last:getContentSize().height > maxH then
            offY = sPos.y + target.last:getContentSize().height - maxH
            node:setInnerContainerPosition(cc.p(innerPos.x,innerPos.y + (-offY)))
        elseif hPos.y < minH then
            offY = hPos.y - minH
            node:setInnerContainerPosition(cc.p(innerPos.x,innerPos.y + (-offY)))
        end
    end
    local function resetList(pos)
        node:setInnerContainerSize(curInner)
        local down = nil
        for i = 1,pos do
            down = children[i]
            down:setPositionY(down:getPositionY() - hideItemSize.height)
        end
        if hideItem ~= nil then
            hideItem:setVisible(false)
        end
        isShow = false;
    end

    local function stretchList(pos)
        if isShow == true then
            resetList(pos)
            return;
        end
        if hideItem ~= nil then
            if hideItemSize == nil then
                hideItemSize = hideItem:getContentSize()
            end
            node:setInnerContainerSize(cc.size(curInner.width,curInner.height + hideItemSize.height))
            local up = nil
            for i = 1,#children do
                up = children[i]
                up:setPositionY(up:getPositionY() + hideItemSize.height)
                if i > pos then
                    up:setPositionY(up:getPositionY() - hideItemSize.height)
                end
            end
            local posBy = cc.p(children[pos]:getPosition())
            hideItem:setPosition(posBy.x,posBy.y - hideItemSize.height)
            hideItem:setVisible(true)
            hideItem.last = children[pos]
            if (openSize.height * (#children - 1)) + hideItemSize.height < node:getContentSize().height then
                node:setTouchEnabled(false);
            else
                node:setTouchEnabled(true);
            end
            isNodeVisible(hideItem)
            isShow = true

        end
    end
    local lastIndex = nil
    local function openFunc(sender)
        if tolua.isnull(node) == true or tolua.isnull(sender) == true then return end
        if node.term ~= nil and node.term() == false then
            return
        end
        if lastIndex ~= nil and isShow == true and lastIndex == sender.__index then
            return resetList(lastIndex)
        end

        if isShow == true then
            resetList(lastIndex)
        end
        stretchList(sender.__index)
        lastIndex = sender.__index
        showCallBack(sender.data,sender,sender.__index,sender:getName(),sender:getTag())
    end
    local child = nil
    local function addEvent(target,pool,func,index)
        for i,val in pairs(pool) do
            if #val == 1 and val[1] == "box" then
                target:addClickEventListener(func)
                target.__index = index
            else
                child = UITools.getChild(target,unpack(val))
                if child ~= nil then
                    child:addClickEventListener(func)
                    child.__index = index
                end
            end
        end
    end
    for index,v in pairs(children) do
        if v.state == "open" then
            addEvent(v,openPool,openFunc,index)
            if openSize == nil then
                openSize = v:getContentSize()
            end
        elseif v.state == "hide" then
            hideItem = v
        end
    end
    if type(isShow) == "number" then
        node:setInnerContainerPosition(cc.p(children[isShow]:getPosition()))
        openFunc(children[isShow])
    end
end

function UICommon.test111111(node)
    if node == nil then
        return
    end
    local t = {}
    local function search(node_)
        for i,val in pairs(node_:getChildren()) do
            if val:getChildrenCount() > 0 then
                table.insert(t,val)
                search(val)
            else
                if val:getTag() > 0 then
                    table.insert(t,val)
                end
            end
        end
    end
    if node:getChildrenCount() == 0 then
        return {node}
    else
        for i,val in pairs(node:getChildren()) do
            if val:getChildrenCount() > 0 then
                table.insert(t,val)
                search(val)
            else
                if val:getTag() > 0 then
                    table.insert(t,val)
                end
            end
        end
    end
    for i,val in pairs(t) do
        if val:getDescription() == "Label" then
            val:setFontName("")
            val:setFontSize(val:getFontSize() * 1.2)
        end
    end
end

function UICommon.addRichElement(node,vo,size)
    if type(vo) ~= "table" then return end
    node:removeAllChildren()
    local h = node:getContentSize().height
    node:setString("")
    local info = ccui.RichText:create()
    info:setHorizontalAlignment(node:getTextHorizontalAlignment())
    if size ~= nil then
        info:ignoreContentAdaptWithSize(false)
        info:setContentSize(size)
    end
    info:setAnchorPoint(node:getAnchorPoint())
    info.str = ""
    for i,val in pairs(vo) do
        info:pushBackElement(ccui.RichElementText:create(1,val.color,255,val.str,node:getFontName(),val.size))
        info.str = info.str .. val.str
    end
    info:formatText()
    if size == nil then
        info:move(0,0)
    else
        info:move(0,size.height)
    end
    node:addChild(info)
    node.Rich = info
end

function UICommon.delayedLoadList(node_,dataPool_,posPool_,itemName_,setItem_,initMax_,loadNum_)
    local scheduleId = nil
    local index = 0
    local node = node_
    local val = nil
    local dataPool = dataPool_
    local posPool = posPool_
    local itemName = itemName_
    local setItem = setItem_
    local initMax = initMax_
    local max = #dataPool
    if max == 0 then
        return;
    end
    local loadNum = loadNum_
    local initStart = 1
    local initEnd = initMax
    local isLoad = true;
    local time = 0
    local val = nil
    local function addItem(dt)
        if dt ~= nil then
            time = time + dt
            if time >= (1 / 60 * 3) then
                isLoad = true;
                time = 0
                initStart = initMax + 1;
                if initEnd + loadNum >= max or initStart >= max then
                    initEnd = max
                    cc.Director:getInstance():getScheduler():unscheduleScriptEntry(scheduleId)
                    scheduleId = nil
                else
                    initEnd = initEnd + loadNum;
                    initMax = initEnd
                end
            end
        end
        if isLoad == true then
            for i = initStart,initEnd do
                index = index + 1
                val = dataPool[index]
                if tolua.isnull(node) == true or val == nil or index > #dataPool then
                    if scheduleId then
                        cc.Director:getInstance():getScheduler():unscheduleScriptEntry(scheduleId)
                        scheduleId = nil
                    end
                    return
                end
                local item = require(itemName).create().box
                item:removeSelf(false)
                node:addChild(item)
                setItem(item,val)
                item:move(posPool[index])
            end
            isLoad = false;
        end
    end
    if node.scheduleId ~= nil then
        cc.Director:getInstance():getScheduler():unscheduleScriptEntry(node.scheduleId)
        node.scheduleId = nil
    end
    node:removeAllChildren(true)
    addItem()
    scheduleId = cc.Director:getInstance():getScheduler():scheduleScriptFunc(addItem,0, false)
    node.scheduleId = scheduleId
end
function UICommon.getTemplateData(item)
    local t = {}
    t.point = item:getAnchorPoint()
    t.size = item:getContentSize()
    t.pos = cc.p(item:getPosition())
    return t
end
function UICommon.createLayout(templateData,sign,value)
    -- local Panel_2 = ccui.Layout:create()
    -- Panel_2:ignoreContentAdaptWithSize(false)
    -- Panel_2:setClippingEnabled(false)
    -- Panel_2:setCascadeColorEnabled(true)
    -- Panel_2:setCascadeOpacityEnabled(true)
    local Panel_2 = ccui.Widget:create()
    Panel_2:setAnchorPoint(templateData.point or cc.p(0.5,0.5))
    if templateData.size ~= nil then
        Panel_2:setContentSize(cc.size(templateData.size.x,templateData.size.y))
    else
        Panel_2:setContentSize(cc.size(100,100))
    end
    Panel_2:setPosition(templateData.pos or cc.p(0,0))
    -- Panel_2:setBackGroundColorType(1)
    -- Panel_2:setBackGroundColor({r = 150, g = 200, b = 255})
    if sign ~= nil then
        if sign == 1 then
            Panel_2:setName(value)
        else
            Panel_2:setTag(value)
        end
    end
    return Panel_2
end
function UICommon.checkScrollGroup(stu,scroll,isThingIcon,isDelayed,max,showCallBack,manualLoad)
    local c = cc.CallFunc:create(function( ... )
        UICommon.addCheckScrollGroup(stu,scroll,isThingIcon,isDelayed,max,showCallBack,manualLoad)
    end)
    local d = cc.DelayTime:create(0.5)
    local s = cc.Sequence:create(d,c)
    -- if tolua.isnull(stu) == true then
    --     return
    -- end
    stu:runAction(s)
end

function UICommon.addCheckScrollGroup(stu,scroll,isThingIcon,isDelayed,max,showCallBack,manualLoad,canChange)
    if #scroll:getChildren() == 0 then return end
    if stu.isOpenCheck ~= nil and stu.isOpenCheck == true then
        return;
    end
    local pos = cc.p(scroll:convertToWorldSpace(scroll:getAnchorPoint()))
    local scrollSize = scroll:getContentSize()
    local rect = cc.rect(pos.x,pos.y,scrollSize.width,scrollSize.height)
    local time = 0
    local isMax = nil;
    local max_ = max or 0
    local t = nil
    local statePool = {}
    local statePool2 = {}
    local state = nil
    local isThingUI = isThingIcon or nil
    local disposable = true;
    local isDelayedBy = isDelayed or nil
    local times = 0.05;
    local function setCurCheckTime(time_)
        times = time_
    end
    scroll.setCurCheckTime = setCurCheckTime
    local function isClose(pool)
        local closeSchedule = true;
        for i,val in pairs(pool) do
            if val == false then
                closeSchedule = false;
                break
            end
        end
        return closeSchedule
    end
    local isLock = nil;
    local checkItem = nil
    local item = nil
    local function setCheckItem( ... )
        checkItem = {...}
    end
    scroll.setCheckItem = setCheckItem
    local function check(dt)
        time = time + dt
        if time > times then
            if scroll:isVisible() == false then return end
            if isLock ~= nil and isLock == true then
                time = 0
                return;
            end
            isLock = true;
            time = 0
            statePool = {}
            statePool2 = {}
            t = scroll:getChildren()
            if #t == 0 then return end
            if isDelayedBy ~= nil and isDelayedBy == true and max_ == #t and isMax == nil then
                isMax = true;
            end
            if canChange == true then
                -- scrollView的尺寸、坐标会改变 
                pos = cc.p(scroll:convertToWorldSpace(scroll:getAnchorPoint()))
                scrollSize = scroll:getContentSize()
                rect = cc.rect(pos.x,pos.y,scrollSize.width,scrollSize.height)
            end
            for i,val in pairs(t) do
                if checkItem == nil then
                    item = val
                    pos = cc.p(item:convertToWorldSpace(item:getAnchorPoint()))
                else
                    item = UITools.getChild(val,unpack(checkItem))
                    pos = cc.p(item:convertToWorldSpace(item:getAnchorPoint()))
                end
                scrollSize = item:getContentSize()
                if isThingUI ~= nil and isThingUI == true then
                    scrollSize = val:getIconSize()
                    pos = cc.p(pos.x - scrollSize.width / 2,pos.y - scrollSize.height / 2)
                end
                if cc.rectIntersectsRect(rect,cc.rect(pos.x,pos.y,scrollSize.width,scrollSize.height)) == false then
                    if val:isVisible() == true then
                        val:setVisible(false)
                    end
                    state = false;
                else
                    if val:isVisible() == false then
                        val:setVisible(true)
                    end
                    if showCallBack ~= nil then
                        if val.isLoad == nil or val.isLoad == false then
                            showCallBack(val)
                            if manualLoad == nil then
                                val.isLoad = true;
                            end
                        end
                    end
                    state = true;
                end
                if manualLoad == nil then
                    if disposable == true and isDelayedBy == nil then
                        table.insert(statePool,state)
                    end
                    if isMax ~= nil and isMax == true then
                        table.insert(statePool2,state)
                    end
                end
            end
            if manualLoad == nil then
                if disposable == true and isDelayedBy == nil and #statePool > 0 then
                    disposable = false;
                    if isClose(statePool) == true then
                        stu:unscheduleUpdate()
                        stu.isOpenCheck = false;
                    end
                end
                if isMax ~= nil and isMax == true and #statePool2 > 0 then
                    isMax = false;
                    if isClose(statePool2) == true then
                        stu:unscheduleUpdate()
                        stu.isOpenCheck = false;
                    end
                end
            end
            isLock = false;
        end
    end
    stu.isOpenCheck = true
    stu:scheduleUpdateWithPriorityLua(check,0)
end

function UICommon.addTestBtn(stu,opacity_)
    local opacity = opacity_ or 255
    local upBtn = UICommon.createrBtn(cc.size(80,40),cc.p(135,425),opacity)
    local downBtn = UICommon.createrBtn(cc.size(80,40),cc.p(135,325),opacity)
    local leftBtn = UICommon.createrBtn(cc.size(80,40),cc.p(60,385),opacity)
    local rightBtn = UICommon.createrBtn(cc.size(80,40),cc.p(180,385),opacity)
    upBtn:addClickEventListener(stu.up)
    downBtn:addClickEventListener(stu.down)
    leftBtn:addClickEventListener(stu.left)
    rightBtn:addClickEventListener(stu.right)

    stu:addChild(upBtn)
    stu:addChild(downBtn)
    stu:addChild(leftBtn)
    stu:addChild(rightBtn)
end

function UICommon.getScrollNodePos(node,num,width,height,scrollType,col,spaceX,spaceY,isCenter)
    if node == nil then
        print("error: node = nil")
        return;
    end
    if num == 0 then
        print("error: node getChildren = 0")
        return;
    end
    local x = width
    local y = height
    local scrollHeight = nil;
    local srolllWidth = nil;
    local nSpaceX = spaceX or 0;
    local nSpaceY = spaceY or 0;
    local nCol = col or 1
    local row = nCol;
    local count = num
    local size = node:getContentSize(); 
    --1垂直，2水平
    if scrollType == 1 then
        scrollHeight = math.ceil(count / nCol) * y + math.ceil(count / nCol) * nSpaceY + nSpaceY;
        if scrollHeight <= size.height then
            scrollHeight = size.height
        end
    else
        scrollHeight = size.height
    end

    --isCenter==nil,就是获取0,0的锚点位置
    --isCenter~=nil,就是获取0.5,0.5的锚点位置
    local function center(pos_x,pos_y)
        local t = {}
        t.x = pos_x + x / 2
        t.y = pos_y + y / 2
        return {x = t.x,y = t.y}
    end
    local index = 1;
    local xx = 0;
    local yy = 0;
    local _y = 0;
    local _index = 0;
    local pool = {}
    if scrollType == 1 then
        for i = 1,count do
            if index % nCol == 0 then
                xx = (nCol - 1) * x + nCol * nSpaceX
                _y = index / nCol * nSpaceY
            else
                xx = (index % nCol  - 1) * x + index % nCol * nSpaceX
                _y = math.floor(index / nCol + 1) * nSpaceY
            end
            yy = scrollHeight - y - (math.ceil(index / nCol) - 1) * y - _y
            if isCenter then
                table.insert(pool,center(xx,yy))
            else
                table.insert(pool,{x = xx,y = yy})
            end
            index = index + 1
        end
    else
        for index = 1,count do
            xx = math.ceil(index / row - 1) * nSpaceX + nSpaceX + math.ceil(index / row - 1) * x
            if index % row == 0 then
                _index = row
            else
                _index = index % row
            end
            yy = (scrollHeight - ((_index - 1) * nSpaceY + nSpaceY + (_index - 1) * y)) - y
            table.insert(pool,{x = xx,y = yy})
            index = index + 1
        end
    end
    pool.scrollHeight = scrollHeight
    return pool
end

--设置scrollView子节点的位置
function UICommon.setScrollNodePos(node,width,height,scrollType,col,spaceX,spaceY,isCenter)
    if node == nil then
        print("error: node = nil")
        return;
    end
    if node and node:getChildren() == 0 then
        print("error: node getChildren = 0")
        return;
    end
    local x = width
    local y = height
    local scrollHeight = nil;
    local srolllWidth = nil;
    local nSpaceX = spaceX or 0;
    local nSpaceY = spaceY or 0;
    local nCol = col or 1
    local row = nCol;
    local count = #node:getChildren()
    local size = node:getContentSize(); 
    --1垂直，2水平
    if scrollType == 1 then
        scrollHeight = math.ceil(count / nCol) * y + math.ceil(count / nCol) * nSpaceY + nSpaceY;
        if scrollHeight <= size.height then
            scrollHeight = size.height
        end
    else
        srolllWidth = math.ceil(count / nCol) * x + math.ceil(count / nCol) * nSpaceX + nSpaceX;
        scrollHeight = size.height
    end
    if node.setDirection then
        node:setDirection(scrollType)
    end
    -- node:setAnchorPoint(0,1)
    -- node:setPositionY(node:getPositionY() + size.height)
    if node.setInnerContainerSize then
        node:setInnerContainerSize(cc.size(srolllWidth or size.width,scrollHeight or size.height))
    end
    if node.setBackGroundColorOpacity then
        node:setBackGroundColorOpacity(0)
    end
    --isCenter==nil,就是设置0,0的锚点位置,节点的锚点也会变成0,0点
    --isCenter~=nil,就是设置0.5,0.5的锚点位置
    local function center(pos_x,pos_y)
        local t = {}
        t.x = pos_x + x / 2
        t.y = pos_y + y / 2
        return {x = t.x,y = t.y}
    end
    local index = 1;
    local xx = 0;
    local yy = 0;
    local _y = 0;
    local _index = 0;
    if scrollType == 1 then
        for i,val in ipairs(node:getChildren()) do
            if isCenter == nil then
                val:setAnchorPoint(0,0)
            end
            if index % nCol == 0 then
                xx = (nCol - 1) * x + nCol * nSpaceX
                _y = index / nCol * nSpaceY
            else
                xx = (index % nCol  - 1) * x + index % nCol * nSpaceX
                _y = math.floor(index / nCol + 1) * nSpaceY
            end
            yy = scrollHeight - y - (math.ceil(index / nCol) - 1) * y - _y
            if isCenter ~= nil and isCenter == true then
                val:setPosition(center(xx,yy))
            else
                val:setPosition(xx,yy)
            end
            index = index + 1
        end
    else
        for index,val in ipairs(node:getChildren()) do
            xx = math.ceil(index / row - 1) * nSpaceX + nSpaceX + math.ceil(index / row - 1) * x
            if index % row == 0 then
                _index = row
            else
                _index = index % row
            end
            yy = (scrollHeight - ((_index - 1) * nSpaceY + nSpaceY + (_index - 1) * y)) - y
            if isCenter ~= nil and isCenter == true then
                val:setPosition(center(xx,yy))
            else
                val:setPosition(xx,yy)
            end
            index = index + 1
        end
    end
end

--适用于垂直方向
--自适应列表:node按需要添加stretchPool,upPool,downPool
function UICommon.adaptiveWidget(node,_width,_height,_col,_spaceX,_spaceY,isCenter)
    local x = _width
    local y = _height
    local nSpaceX = _spaceX or 0
    local nSpaceY = _spaceY or 0
    local count = #node:getChildren()
    local size = node:getContentSize()
    local y_height = _height + nSpaceY * 2
    local nCol = _col
    local lie = math.ceil(count / _col)
    scrollHeight = lie * y + lie * nSpaceY + nSpaceY;
    ccui.LayoutComponent:bindLayoutComponent(node):setSize({width = size.width, height = scrollHeight})
    node.addHeight = scrollHeight - y_height
    node.scrollHeight = scrollHeight
    node:setInnerContainerSize(cc.size(size.width,scrollHeight))
    node:setContentSize(cc.size(size.width,scrollHeight))
    node:setBounceEnabled(false)
    node:setScrollBarEnabled(false)
    node:setBackGroundColorOpacity(0)
    --自动拉伸的控件
    if node.stretchPool ~= nil then
        local y_stretchHeight = nil
        for i,val in pairs(node.stretchPool) do
            y_stretchHeight = val:getContentSize().height
            ccui.LayoutComponent:bindLayoutComponent(val):setSize({width = val:getContentSize().width, height = y_stretchHeight + (scrollHeight - y_height)})
        end
    end
    --向上移动的控件
    if node.upPool ~= nil then
        local y_upHeight = nil
        for i,val in pairs(node.upPool) do
            y_upHeight = val:getPositionY()
            val:setPositionY(y_upHeight + (scrollHeight - y_height))
        end
    end
    --向下移动的控件
    if node.downPool ~= nil then
        local y_downHeight = nil
        for i,val in pairs(node.downPool) do
            y_downHeight = val:getPositionY()
            val:setPositionY(y_downHeight - (scrollHeight - y_height))
        end
    end
    UICommon.setScrollNodePos(node,x,y,1,nCol,nSpaceX,nSpaceY,isCenter)
end
--获取武力政治魅力智力语言包
function UICommon.getHeroPropertyText(id)
    local t = {"servant.txtForce","servant.txtBrains","servant.txtPolitical","servant.txtCharm"}
    return lang(t[id])
end
function UICommon.getHeroPropertyText1(id)
    local t = {"servant.txtForce1","servant.txtBrains1","servant.txtPolitical1","servant.txtCharm1"}
    return lang(t[id])
end
--获取武力政治魅力智力全属性图标
function UICommon.getBellePropertyIcon(id)
    local path = "assetsRes/res/hero/"
    local t = {
            "icon_yingxiong_shuxingxiangqing_wuli.png",
            "icon_yingxiong_shuxingxiangqing_zhihui.png",
            "icon_yingxiong_shuxingxiangqing_zhengzhi.png",
            "icon_yingxiong_shuxingxiangqing_meigui.png",
            "icon_yingxiong_kapai_shuxing_quanshuxing.png",
            "icon_yingxiong_kapai_shuxing_shuangshuxing.png"}
    if t[id] then
        return path .. t[id]
    else
        return ""
    end
end
--获取英雄特长
function UICommon.getHeroSpeciality(node1,node2,spec)
    if spec == nil then
        return;
    end
    local function specialityPath(id)
        return "assetsRes/res/hero/tc/"..id..".png"
    end
    node1:setVisible(false)
    node2:setVisible(false)
    if spec[1] then
        node1:loadTexture(specialityPath(spec[1]))
        node1:setVisible(true)
    end
    if spec[2] then
        node2:loadTexture(specialityPath(spec[2]))
        node2:setVisible(true)
    end
end

--切换按钮状态图片
--btn锚点0.5,0.5
--callback点击响应的函数
function UICommon.changeBtnStateImage(nilBtn,btn,callback,min,max)
    nilBtn:unscheduleUpdate()
    local state = nil
    local stateBy = nil
    local function onChange( ... )
        state = nilBtn:isHighlighted()
        if stateBy ~= nil and stateBy == state then
            return;
        else
            stateBy = state
        end
        if state == true then
            btn:runAction(cc.ScaleTo:create(0.05,max or 1.1))
        else
            btn:runAction(cc.ScaleTo:create(0.05,min or 1))
        end
    end
    nilBtn:scheduleUpdateWithPriorityLua(onChange,0)
    local function onClick()
        if callback then
            callback(nilBtn)
        end
    end
    nilBtn:addClickEventListener(onClick)
    if btn.setTouchEnabled ~= nil then
        btn:setTouchEnabled(false)
    end
end

--按钮切换动画
function UICommon.btnChangeAnimation(nilBtn,animation,playIndex,callback,ka)
    local state = nil
    local stateBy = nil
    local isPlay = false;
    local isCall = false;
    local curIndex = playIndex or 0

    local function onClick()
        if isPlay == true then
            isCall = true;
        end
    end
    local function onSetMovementEvent(armature,movementType,movementID)
        if movementType == 1 then
            if isCall == true then
                if callback then
                    local a = cc.CallFunc:create(function( ... )
                        if ka ~= nil and ka == true then
                            king:command("ka",0)
                        end
                    end)
                    local c = cc.CallFunc:create(callback)
                    local d = cc.DelayTime:create(0.1)
                    local s = cc.Sequence:create(d,a,c)
                    nilBtn:runAction(s)
                end
            end
            if ka ~= nil and ka == true then
                king:command("ka",0.1)
            end
            isPlay = false;
        end
    end
    animation:getAnimation():setMovementEventCallFunc(onSetMovementEvent)
    local function onChange( ... )
        state = nilBtn:isHighlighted()
        if stateBy ~= nil and stateBy == state then
            return;
        else
            stateBy = state
        end
        if state == true and isPlay ~= true then
            isPlay = true
            if ka ~= nil and ka == true then
                king:command("ka",2)
            end
            animation:getAnimation():playWithIndex(playIndex or 0,-1,0)
        end
    end
    animation:getAnimation():playWithIndex(curIndex)
    animation:getAnimation():gotoAndPause(0)
    nilBtn:scheduleUpdateWithPriorityLua(onChange,0)
    nilBtn:addClickEventListener(onClick)
end
function UICommon.carouselAni(pool,index,callback)
    if #pool == 0 then return end
    local pool_ = pool
    local index_ = index
    local time_ = time
    local pos = 1
    local curMax = #pool_
    for i,animation in pairs(pool_) do
        animation:getAnimation():playWithIndex(index_,-1,0)
        animation:getAnimation():gotoAndPause(0)
        animation:setVisible(false)
    end
    local function addCallFunc(ani)
        local function onSetMovementEvent(armature,movementType,movementID)
            if movementType == 1 then
                pos = pos + 1
                if pos > curMax then
                    pos = 1
                end
                armature:getAnimation():playWithIndex(index_ or 0,-1,0)
                armature:getAnimation():gotoAndPause(0)
                armature:setVisible(false)
                return addCallFunc(pool_[pos])
            end
        end
        ani:runAction(cc.FadeIn:create(0))
        ani:setVisible(true)
        ani:getAnimation():playWithIndex(index_ or 0,-1,0)
        if callback == nil then
            ani:getAnimation():setMovementEventCallFunc(onSetMovementEvent)
        end
        if callback ~= nil then
            callback(ani)
            ani.endCall = function()
                onSetMovementEvent(ani,1)
            end
        end
    end
    addCallFunc(pool_[pos])
end

--屏蔽活动ID
function UICommon.subActivityId(info,_subSmall,_subBig)
    local function getLength(t)
        local num = 0;
        for i ,val in pairs(t)do
            num = num + 1;
        end
        return num
    end
    local subSmall = _subSmall
    local subBig = _subBig
    local t = clone(info)
    local lenght = nil
    for i,val in pairs(t) do
        if subBig[i] then
            t[i] = nil
        else
            lenght = getLength(val)
            for n,vv in pairs(val) do
                if subSmall[n] then
                    subSmall[n] = nil
                    if lenght == 1 then
                        t[i] = nil
                        break
                    end
                    val[n] = nil;
                    break;
                end
            end
        end
    end
    return t;
end
function UICommon.removeTimeOutActivity( ... )
    
end
function UICommon.saveHttpError()
    local playerProxy = king:getProxy("game.player.PlayerProxy")
    local popupProxy = king:getProxy("zeromvc.popup.PopupProxy")
    if playerProxy.user == nil then
        return;
    end
    
    local function getHttpPackage(vo)
        local t = {}
        local data = nil
        local listenConfig = playerProxy.listenConfig
        if listenConfig == nil then return t end
        for bigKey,val in pairs(listenConfig) do
            if vo.a ~= nil and vo.a[bigKey] ~= nil then
                for findKey,findValue in pairs(val) do
                    if vo.a[bigKey][findValue] ~= nil then
                        t[bigKey .. "." .. findValue] = vo.a[bigKey][findValue]
                    end
                end
            end
            if vo.u ~= nil and vo.u[bigKey] ~= nil then
                for findKey,findValue in pairs(val) do
                    if vo.u[bigKey][findValue] ~= nil then
                        t[bigKey .. "." .. findValue] = vo.u[bigKey][findValue]
                    end
                end
            end
        end
        return t;
    end
    if playerProxy.testHttpData ~= nil then
        popupProxy:update("closeBreakLineDialog")
        local t = getHttpPackage(playerProxy.testHttpData)
        Config.HTTP_ERROR = UICommon.newTableToStr(t)
    end
end

function UICommon.newTableToStr(t)
    if t == nil or type(t) ~= "table" then
        return "table parse error"
    end
    local result = "{"
    local lastState = 0 --1是表，2是字符串，3是空表
    local function comp(vo)
        for i,val in pairs(vo) do
           if type(val) == "function" then
                val = tostring(val)
            end
            if type(val) == "table" and string.find(tostring(val),"table:") == nil and val.enumKey ~= nil then
                local enmu = val
                val = {}
                for e_i,e_val in pairs(enmu) do
                    if type(e_val) ~= "table" then
                        val[e_i] = e_val
                    end
                end
            end
            if type(val) == "table" and string.find(tostring(val),"table:") == nil then
                val = {}
            end
            if type(val) == "table" then
                if next(val) == nil then
                    if lastState == 2 or lastState == 3 then
                        result = result .. ",\"" .. i .. "\":" .. "{}"
                    else
                        result = result .. "\"" .. i .. "\":" .. "{}"
                    end
                    lastState = 3
                else
                    if lastState == 2 or lastState == 3 then
                        result = result .. ",\"" .. i .. "\":" .. "{"
                    else
                        result = result .. "\"" .. i .. "\":" .. "{"
                    end
                    lastState = 1
                    comp(val)
                end
            elseif type(val) == "string" or type(val) == "number" then
                if type(val) == "string" then
                    val = "\"" .. val .. "\""
                end
                if lastState == 1 or lastState == 0 then
                    result = result .. "\"" .. tostring(i) .. "\":" .. val
                elseif lastState == 3 or lastState == 2 then
                    result = result .. "," .. "\"" .. tostring(i) .. "\":" .. val
                end
                lastState = 2
            end
        end
        result = result .. "}"
        lastState = 3
    end
    comp(t)
    return result
end
--一个boss图层共用的缩放
function UICommon.runBossWinTextScale(node)
    local act1 = cc.ScaleTo:create(0,0)
    local act2 = cc.ScaleTo:create(0.7,1)
    local seq  = cc.Sequence:create(act1, act2)
    node:runAction(seq)
end
function UICommon.addScheduler(_self,key,startCall,endCall,time)
    if _self[key] ~= nil then
        cc.Director:getInstance():getScheduler():unscheduleScriptEntry(_self[key])
        _self[key] = nil
    end
    _self[key] = cc.Director:getInstance():getScheduler():scheduleScriptFunc(function ( ... )
        if endCall then
            if endCall() == true then
                cc.Director:getInstance():getScheduler():unscheduleScriptEntry(_self[key])
                _self[key] = nil
                return;
            end
        end
        if startCall then
            startCall()
        end
    end, time or 1, false)
end

function UICommon.ControlAlign(start,pool,nSpaceX_)
    local nSpaceX = nSpaceX_ or 0
    local startX = start:getPositionX() + start:getContentSize().width * start:getScaleX() + nSpaceX
    for i,val in pairs(pool) do
        val:setPositionX(startX)
        startX = val:getPositionX() + val:getContentSize().width * val:getScaleX()  + nSpaceX
    end
end

function UICommon.setChangeBtn2Text(item_,text1,text2)
    UITools.getChild(item_,"btnOpen","Open1","Text"):setString(lang(text1))
    UITools.getChild(item_,"btnOpen","Open2","Text"):setString(lang(text2))
    UITools.getChild(item_,"btnClose","Close1","Text"):setString(lang(text1))
    UITools.getChild(item_,"btnClose","Close2","Text"):setString(lang(text2))
end
function UICommon.setChangeBtn2(item_,id)
    local item = item_
    local function changeBtn(id)
        local open1 = UITools.getChild(item,"btnOpen","Open1")
        local open2 = UITools.getChild(item,"btnOpen","Open2")
        local close1 = UITools.getChild(item,"btnClose","Close1")
        local close2 = UITools.getChild(item,"btnClose","Close2")
        open1:setVisible(false)
        open2:setVisible(false)
        close1:setVisible(false)
        close2:setVisible(false)
        if id == 1 then
            open1:setVisible(true)
            close2:setVisible(true)
        elseif id == 2 then
            open2:setVisible(true)
            close1:setVisible(true)
        end
    end
    changeBtn(id)
end

function UICommon.setCommandRwd(self_,vo,btnCall)
    local function btnHd( ... )
        if btnCall ~= nil then
            btnCall()
        end
    end
    self_.stu:getChild("btn"):addClickEventListener(btnHd)
    local scrollView = self_.stu:getChild("ScrollView_3")
    scrollView:setAnchorPoint(0,0)
    scrollView:removeAllChildren()
    scrollView:setScrollBarEnabled(false)
    local prop,thingUI
    local scale = 0.9
    local px = 14
    local py = 12
    local ppp = scrollView:getContentSize().width / 2

    local universeProxy = king:getProxy("game.universe.UniverseProxy")
    local ThingIconUI = require("gameui.ThingIcon")
    if #vo < 6 then
        local function moveChild(x)
            for i,val in pairs(scrollView:getChildren()) do
                val:setPositionX(val:getPositionX() + x)
            end
        end
        for i,val in pairs(vo) do
            prop = universeProxy:getSomeByKindAndId(val.kind,val.id)
            prop.count = val.count
            local thingUI = ThingIconUI:new(prop,true)
            thingUI:setScale(scale)
            scrollView:addChild(thingUI)
            thingUI:pickShow(self_.zero)
        end
        UICommon.setScrollNodePos(scrollView,120 * scale,120 * scale,2,1,px,0,true)
        if #vo < 5 then
            local x = 120 * scale / 2
            if #vo == 1 then
                moveChild(ppp - x - px)
            elseif #vo == 2 then
                moveChild(ppp - x - px - x * 1 - px * 0.5)
            elseif #vo == 3 then
                moveChild(ppp - x - px - x * 2 - px)
            elseif #vo == 4 then
                moveChild(ppp - x - px - x * 3 - px * 1.5)
            end
        end
    else
        scrollView:setDirection(2)
        for i,val in ipairs(vo) do
            prop = universeProxy:getSomeByKindAndId(val.kind,val.id)
            prop.count = val.count
            thingUI = ThingIconUI:new(prop,true)
            thingUI:pickShow(self_.zero)
            thingUI:setScale(scale)
            scrollView:addChild(thingUI)
        end
        scrollView.stretchPool = {}
        table.insert(scrollView.stretchPool,self_.stu:getChild("imgBg"))
        
        scrollView.upPool = {}
        table.insert(scrollView.upPool,self_.stu:getChild("title"))
        table.insert(scrollView.upPool,self_.stu:getChild("close"))
        UICommon.adaptiveWidget(scrollView,120 * scale,120 * scale,5,px,py + 5,true)
        -- self_.stu:offset(display.cx,display.cy - scrollView.addHeight / 2)
    end
end

function UICommon.shrinkFontSize(item)
    local shrinkLabel = nil
    local function create()
        local fontName = item:getFontName()
        local fontSize = item:getFontSize()
        local textColor = item:getTextColor()
        local effectColor = item:getEffectColor()
        local outlineSize = item:getOutlineSize()
        local shadowColor = item:getShadowColor()
        local shadowOffset = item:getShadowOffset()
        local horizontalAlignment = item:getTextHorizontalAlignment()
        local verticalAlignment = item:getTextVerticalAlignment()
        -- trace("===s===",fontName,fontSize,textColor,outlineSize,shadowColor,shadowOffset,horizontalAlignment,verticalAlignment)
        local size = item:getContentSize()
        local str = item:getString()
        local point = item:getAnchorPoint()
        shrinkLabel = cc.Label:createWithTTF("",fontName,fontSize,cc.size(size.width,0),horizontalAlignment,verticalAlignment)
        if shrinkLabel == nil then return end
        shrinkLabel:setAnchorPoint(point)
        shrinkLabel:setTextColor(textColor)
        if outlineSize ~= 0 then
            shrinkLabel:enableOutline(effectColor,outlineSize)
        end
        if shadowOffset.width ~= 0 or shadowOffset.height ~= 0 then
            shrinkLabel:enableShadow(shadowColor,shadowOffset)
        end
        shrinkLabel:setString(str)
        local parent = item:getParent()
        if parent ~= nil and tolua.isnull(parent) == false then
            shrinkLabel:move(cc.p(item:getPosition()))
            -- parent:addChild(shrinkLabel)
        end
    end
    local function comp( ... )
        local newSize = shrinkLabel:getContentSize()
        local oldSize = item:getContentSize()
        return newSize.height > oldSize.height
    end
    local function shrinkFontSize( ... )
        local config = shrinkLabel:getTTFConfig()
        config.fontSize = config.fontSize - 1
        local curFontSize = shrinkLabel:setTTFConfig(config)
        shrinkLabel:setString(item:getString())
        if comp() == true then
            shrinkFontSize()
        else
            if config.fontSize < 12  then
                item:setFontSize(12)
            else
                item:setFontSize(config.fontSize)
            end
        end
    end
    create()
    if shrinkLabel == nil then return end
    if comp() == true then
        shrinkFontSize()
    end
end
function UICommon.createLableLineHeight(item,height)
    local shrinkLabel = nil
    local function create()
        local fontName = item:getFontName()
        local fontSize = item:getFontSize()
        local textColor = item:getTextColor()
        local effectColor = item:getEffectColor()
        local outlineSize = item:getOutlineSize()
        local shadowColor = item:getShadowColor()
        local shadowOffset = item:getShadowOffset()
        local horizontalAlignment = item:getTextHorizontalAlignment()
        local verticalAlignment = item:getTextVerticalAlignment()
        -- trace("===s===",fontName,fontSize,textColor,outlineSize,shadowColor,shadowOffset,horizontalAlignment,verticalAlignment)
        local size = item:getContentSize()
        local str = item:getString()
        local point = item:getAnchorPoint()
        shrinkLabel = cc.Label:createWithTTF("",fontName,fontSize,cc.size(size.width,size.height),horizontalAlignment,verticalAlignment)
        if shrinkLabel == nil then return end
        shrinkLabel:setAnchorPoint(point)
        shrinkLabel:setTextColor(textColor)
        if outlineSize ~= 0 then
            shrinkLabel:enableOutline(effectColor,outlineSize)
        end
        if shadowOffset.width ~= 0 or shadowOffset.height ~= 0 then
            shrinkLabel:enableShadow(shadowColor,shadowOffset)
        end
        shrinkLabel:setString(str)
        local parent = item:getParent()
        if parent ~= nil and tolua.isnull(parent) == false then
            item:setString("")
            shrinkLabel:setLineHeight(height)
            shrinkLabel:move(cc.p(item:getPosition()))
            shrinkLabel:setName("shrinkLabel")
            parent:addChild(shrinkLabel)
        end
    end
    create()
end
function UICommon.testChangeColor(item,lang,defColor,color,...)
    local n = {...}
    local pool = {}
    local mPool = {}
    local lang_ = lang
    local color_ = color
    local defColor_ = defColor or nil
    for i,val in pairs(n) do
        table.insert(pool,{key = #pool + 1 ,value = "zsr" .. #pool + 1 .. "zsr" .. tostring(val)})
        table.insert(mPool,pool[#pool].value)
    end
    lang_ = string.gsub(lang_,"%%d","%%s")
    for i = 1,10 do
        lang_ = string.gsub(lang_,"<" .. i .. ">","%%s")
    end
    local str = string.format(lang_,unpack(mPool))
    local lenght = 0
    local a,b
    local posPool = {}
    function charsize(ch)
        if not ch then return 0
        elseif ch >=252 then return 6
        elseif ch >= 248 and ch < 252 then return 5
        elseif ch >= 240 and ch < 248 then return 4
        elseif ch >= 224 and ch < 240 then return 3
        elseif ch >= 192 and ch < 224 then return 2
        elseif ch < 192 then return 1
        end
    end
    function utf8len(str)
        local len = 0
        local aNum = 0 --字母个数
        local hNum = 0 --汉字个数
        local currentIndex = 1
        while currentIndex <= #str do
            local char = string.byte(str, currentIndex)
            local cs = charsize(char)
            currentIndex = currentIndex + cs
            len = len +1
            if cs == 1 then 
                aNum = aNum + 1
            elseif cs >= 2 then 
                hNum = hNum + 1
            end
        end
        return len, aNum, hNum
    end

    for i,val in pairs(pool) do
        lenght = #tostring(val.key)
        a,b = string.find(str,val.value,1,true)
        if a ~= nil and b ~= nil then
            local findStr = string.sub(str,1,a - 1)
            local len, aNum, hNum = utf8len(findStr)
            a = a - (#findStr - len)
            b = b - (#findStr - len)
        end
        if a ~= nil and b ~= nil then
            table.insert(posPool,{s = a,e = b - (6 + lenght)})
            str = string.gsub(str,"zsr" .. val.key .. "zsr","")
        end
    end
    local index = 0
    local letterPool = {}
    local itemLetterPool = {}

    for i,val in pairs(posPool) do
        index = index + 1
        for s = val.s - 1,val.e - 1 do
            letter = item:getLetter(s)
            if letter ~= nil then
                table.insert(letterPool,letter)
                letter:setColor(color_[index])

                if item.getLetterFunc ~= nil then
                    if itemLetterPool[index] == nil then
                        itemLetterPool[index] = {}
                    end
                    table.insert(itemLetterPool[index],letter)
                end
            end
        end
    end
    if item.getLetterFunc ~= nil then
        item.getLetterFunc(itemLetterPool)
    end
    if defColor_ == nil then
        return
    end
    local isFind = false
    for i = 0,item:getStringLength() do
        letter = item:getLetter(i)
        if letter ~= nil then
            isFind = false;
            for n,k in pairs(letterPool) do
                if letter == k then
                    isFind = true
                    break
                end
            end
            if isFind == false then
                letter:setColor(defColor_)
            end
        end
    end
end

--分离逗号字符串--战国复制过来的
function UICommon.split(input, delimiter)
  local inputStr = tostring(input)
  local delimiterBy = tostring(delimiter)
  if (delimiterBy=='') then return false end
  local pos,arr = 0, {}
  -- for each divider found
  for st,sp in function() return string.find(inputStr, delimiterBy, pos, true) end do
      table.insert(arr, string.sub(inputStr, pos, st - 1))
      pos = sp + 1
  end
  table.insert(arr, string.sub(inputStr, pos))
  return arr
end

function UICommon.groupingList(pool,num)
    local t = {}
    local zuPool = {}
    local index = nil
    local numBy = 0
    for key,val in pairs(pool) do
        numBy = numBy + 1
        if numBy <= num then
            index = #zuPool + 1
            zuPool[index] = {}
            zuPool[index].curKey = key
            zuPool[index].curVal = clone(val)
        end
        if index >= num then
            index = nil
            numBy = 0
            table.insert(t,zuPool)
            zuPool = {}
        end
    end
    if #zuPool > 0 then
        table.insert(t,zuPool)
    end
    return t
end
--重置对话框关闭按钮
--bg是背景
--btn关闭按钮
--sizeType 0是小,1是大 不填默认0
--在返回stu之前调用
function UICommon.resetDialogClosePos(stu,bg,btn,sizeType)
    local gobalSwitchProxy = king:getProxy("game.switch.GobalSwitchProxy")
    if gobalSwitchProxy:getSwitch("resetDialogClosePos") == false  then
        return
    end
    if not bg  or not btn then
        return
    end
    local size = bg:getContentSize()
    xx = size.width - (73 / 2) - 6
    yy = size.height - (94 / 2) + 2
    btn:removeSelf()
    btn:setAnchorPoint(0.5,0.5)
    btn:ignoreContentAdaptWithSize(false)
    btn:loadTextures("assetsRes/res/common/tyztc-gb-1.png","assetsRes/res/btn/btnJia.png","")
    btn:loadTextures("assetsRes/res/common/tyztc-gb-1.png","","")
    btn:move(xx,yy)
    bg:addChild(btn)
    bg:ignoreContentAdaptWithSize(false)
    if sizeType ~= nil and sizeType == 1 then
        bg:loadTexture("assetsRes/res/sudoku/sudoku115.png",0)
    else
        bg:loadTexture("assetsRes/res/sudoku/bj_xiaotanchuang2.png",0)
    end
    bg:setContentSize(size.width,size.height)
    bg:setTouchEnabled(true)
    bg:setScale9Enabled(true)
    if sizeType ~= nil and sizeType == 1 then
        bg:setCapInsets({x = 215, y = 226, width = 222, height = 234})
    else
        bg:setCapInsets({x = 235, y = 143, width = 243, height = 150})
    end
    return bg,btn
end
function UICommon.openDialogActionNew(item,_scale,_dur)
    if item == nil or tolua.isnull(item) == true then return end
    local viewSize = cc.Director:getInstance():getWinSize()
    if item._body ~= nil and item._body:getName() == "Layer" then
        item = item._body
        item:setAnchorPoint(0.5,0.5)
        item:move(item:getPositionX() + viewSize.width / 2,item:getPositionY() + viewSize.height / 2)
    end
    local scale =_scale or 0.9
    local dur =_dur or 0.2
    item:setScale(scale)
    king:command("ka",dur)
    local act1 = cc.EaseBackOut:create(cc.ScaleTo:create(dur, 1))
    item:runAction(act1)
end
function UICommon.closeDialogActionNew(item,callback)
    if item == nil or tolua.isnull(item) == true then return end
    item = item._body ~= nil and item._body or item
    king:command("ka",0.2)
    local act1 = cc.EaseBackIn:create(cc.ScaleTo:create(0.2, 0.9))
    local act2 = cc.CallFunc:create(callback)
    local seq = cc.Sequence:create(act1, act2)
    item:runAction(seq)
end
function UICommon.transformBagNum(numStr)
    if numStr ~= nil and tonumber(numStr) ~= nil then
        numStr = tonumber(numStr)
        if numStr > 10000 then
            numStr = lang("parseNum",numStr)
        end
    end
    return numStr
end
function UICommon.closeSchedule(self_,key)
    if self_[key] ~= nil then
        cc.Director:getInstance():getScheduler():unscheduleScriptEntry(self_[key])
        self_[key] = nil
    end
    -- body
end
function UICommon.runActionNodeSkew(node,delayTime,endX,endY)
    if delayTime == 0 then
        node:setRotationSkewX(endX or 0)
        node:setRotationSkewY(endY or 0)
        return
    end
    local num = 60 * delayTime
    local index = 0
    local totalX = endX or 0
    local totalY = endY or 0
    local curX = node:getRotationSkewX()
    local curY = node:getRotationSkewY()
    local dirX = curX > totalX and 0 or 1
    local dirY = curY > totalY and 0 or 1
    local addX = math.abs(curX - totalX) / num
    local addY = math.abs(curY - totalY) / num
    local function check(dt)
        if index > num then
            node:setRotationSkewX(totalX)
            node:setRotationSkewY(totalY)
            node:unscheduleUpdate()
            return
        end
        index = index + 1
        if dirX == 0 then
            node:setRotationSkewX(node:getRotationSkewX() - addX)
        else
            node:setRotationSkewX(node:getRotationSkewX() + addX)
        end
        if dirY == 0 then
            node:setRotationSkewY(node:getRotationSkewY() - addY)
        else
            node:setRotationSkewY(node:getRotationSkewY() + addY)
        end
    end
    node:scheduleUpdateWithPriorityLua(check,0)
end
function UICommon.scheduleLoad(self_,scheduleKey,lenght,call)
    if lenght == 0 then return end
    local curIdx = 1;
    local st = 0;
    local perFrame = 1 / 60;
    UICommon.closeSchedule(self_,scheduleKey)
    self_[scheduleKey] = cc.Director:getInstance():getScheduler():scheduleScriptFunc(function ( ... )
        st = os.clock();
        for i = curIdx,lenght do
            if(math.abs(os.clock() - st) > perFrame * 0.5) then
                curIdx = i;
                return;
            end
            if i == lenght then
                UICommon.closeSchedule(self_,scheduleKey)
            end
            call(i)
        end
    end,perFrame,false)
end
local releasePool = {}
local startRelease = false
local releaseTime = {}
local releaseNum = 0
--逐帧释放，在used函数里面调用UICommon.addRelease(item)
function UICommon.addRelease(item)
    if item.isAddRelease ~= nil and item.isAddRelease == true then
        return;
    end
    item:retain()
    item:removeSelf()
    item:hide()
    table.insert(releasePool,item)
    item.isAddRelease = true;

    local function star( ... )
        if startRelease == false then
            startRelease = true
            local curItem = releasePool[1]
            local curPool = curItem:getChildren()
            local curLenght = #curPool
            local function clear( ... )
                curItem:release()
                table.remove(releasePool,1)
                startRelease = false
                if #releasePool > 0 then
                    star()
                end
            end
            if curLenght > 0 then
                local function call(releaseIndex)
                    -- releaseNum = releaseNum + 1
                    curItem:removeChild(curPool[releaseIndex])
                    if releaseIndex == curLenght then
                        clear()
                    end
                end
                UICommon.scheduleLoad(releaseTime,"releaseItem",curLenght,call)
            else
                clear()
            end
        end
    end
    star()
end
function UICommon.testRichElement(lang_,defColor_,defSize_,data_)
    if lang_ == nil then return "" end
    local s,a,b,a1,b1
    local strPool = {}
    while true do
        a,b = string.find(lang_,"<")
        a1,b1 = string.find(lang_,">")
        if a and a1 and a1 - a == 2 then
            local pos = string.sub(lang_,a + 1,a1 - 1)
            table.insert(strPool,{str = string.sub(lang_,1,a - 1),color = defColor_,size = defSize_})
            table.insert(strPool,{str = data_[tonumber(pos)].str,color = data_[tonumber(pos)].color,size = data_[tonumber(pos)].size})
            lang_ = string.sub(lang_,a1 + 1,string.len(lang_))
        else
            if string.len(lang_) > 0 then
                table.insert(strPool,{str = string.sub(lang_,1,string.len(lang_)),color = defColor_,size = defSize_})
            end
            break
        end
        return strPool
    end
    --举个栗子
    -- local vo = test222(getLang("expedition.pmdStr"),cc.c3b(30,144,255),30,
    -- {
    --     [1] = {str = "a7aa",color = cc.c3b(255,0,0),size = 30},
    --     [2] = {str = "a9aa",color = cc.c3b(0,128,0),size = 40},
    --     [3] = {str = "a8aa",color = cc.c3b(255,255,0),size = 50},
    -- })
    --UICommon.addRichElement(self.stu:getChild("Text_2"),vo,self.stu:getChild("Text_2"):getContentSize())
end

--返回东八区的时差 --老爷拷贝过来的
function UICommon.setTimeOffset( ... )
    local offsetTime = os.date("*t", 0)
    return 8 - (offsetTime.hour + offsetTime.min/60)
end
function UICommon.randomx( m,n,cnt ) --产生不相同的从m到n，一共cnt个随机数表--老爷拷贝过来的
    if cnt>n-m+1 then
        return {}
    end
    local t = {}
    local tmp = {}
    while cnt>0 do
        local x =math.random(m,n)
        if not tmp[x] then
            t[#t+1]=x
            tmp[x]=1
            cnt=cnt-1
        end
    end
    return t
end
-- Button加载外部图片
function UICommon.loadExternalTexturePressed(img,filename)
    if( not cc.FileUtils:getInstance():isFileExist(filename) )then
        trace("Texture file " .. filename .. " does not exist")
        return
    end
    img:loadTexturePressed(filename)
end

function UICommon.getDefaultIconUrl()
     return "assetsRes/res/material/material63.png"
end
function UICommon.getIconUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/package/itemicon/"..val..".png"
    end
end
--道具排序汇总
function UICommon.sortItemIconCheck(a,b)
    if a.meBigType ~= b.meBigType then
        if not a.meBigType then
            return false
        end
        if not b.meBigType then
            return true
        end
        return a.meBigType < b.meBigType
    end

    if a.meType ~= b.meType then
        if not a.meType then
            return false
        end
        if not b.meType then
            return true
        end
        return a.meType < b.meType
    end
    
    -- local a_meVal = UICommon.countIconMeVal(a.meVal or 0)
    -- local b_meVal = UICommon.countIconMeVal(b.meVal or 0)
    -- if a_meVal ~= b_meVal then
    --     if not a_meVal then
    --         return false
    --     end
    --     if not b_meVal then
    --         return true
    --     end
    --     return a_meVal > b_meVal
    -- end
    if a.kind ~= b.kind then
        return a.kind < b.kind
    end
    return a.id < b.id
end
function UICommon.countIconMeVal(val)
    if not val then
        return
    end
    val = tonumber(val) or 0
    local id = 1
    if val >= 100 and val < 200 then
        id = 2
    elseif val >= 200 and val < 1000 then
        id = 3
    elseif val >= 1000 and val < 2000 then
        id = 4
    elseif val >= 2000 then
        id = 5
    else
        id = 1
    end
    return id
end
function UICommon.countIconMeValUrl(val)
    local id = UICommon.countIconMeVal(val)
    return UICommon.getIconMeValUrl(id)
end
function UICommon.getIconMeValUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/package/meVal/"..val..".png"
    end
end
function UICommon.getIconMeSpUrl(val)
    if val == nil then
      -- 道具小图标不要默认图片
      return nil
    else
      return "assetsRes/res/package/meSp/"..val..".png"
    end
end
function UICommon.getEquipIconUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/equip/icon/"..val..".png"
    end
end
function UICommon.getEquipRarityUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/equip/rarity/"..val..".png"
    end
end
function UICommon.getEquipBoxUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/equip/iconBox/"..val..".png"
    end
end
function UICommon.getEquipEpKeyUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/equip/ep/"..val..".png"
    end
end
function UICommon.getEquipPartUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/equip/part/"..val..".png"
    end
end
function UICommon.getEquipPartMinUrl(val)
    if val == nil then
      return "assetsRes/res/material/material63.png"
    else
      return "assetsRes/res/equip/partMin/"..val..".png"
    end
end
function UICommon.getAchieveIcon(id)
    return "assetsRes/res/achievement/achieve/"..id..".png"
end
function UICommon.getTaskIcon(id)
    return "assetsRes/res/task/icon/"..id..".png"
end

function UICommon.getWeeklyTaskIcon(id)
    return "assetsRes/res/task/weeklyIcon/"..id..".png"
end

function UICommon.getFaceUrl(val)
    return "assetsRes/res/disciple/part/"..val..".png"
end
function UICommon.getCrdBgUrl(val)
    return "assetsRes/res/disciple/statusBg/"..val..".png"
end

function UICommon.forServantFace(box,vo,isRound) --isRound圆形头像
    local face=box:getChildByName("face")
    -- face:loadTexture(UICommon.getFaceUrl(vo.id))
    UICommon.setServantIcon(face,vo,nil,isRound)
    if isRound == true then
      return
    end
    box:loadTexture(UICommon.getServantSeniorIconUrl(vo.senior))
end

--门客
function UICommon.getServantFullIconUrl(val)
     return "assetsRes/res/disciple/whole/"..val..".png"
end

function UICommon.getNewServantFullIconUrl(val)
     return "assetsRes/res/disciple/newPart/"..val..".png"
end

function UICommon.getServantHalfIconUrl(val)
     return "assetsRes/res/disciple/part/"..val..".png"
end

function UICommon.getServantHalfIconUrl2(val)
     return "assetsRes/res/disciple/part2/"..val..".png"
end

function UICommon.getServantNameIconUrl(val)
     return "assetsRes/res/disciple/compellation/"..val..".png"
end

function UICommon.getServantNameIconUrl2(val)
     return "assetsRes/res/disciple/compellation2/"..val..".png"
end

function UICommon.getServantSeniorIconUrl(val)
    return "assetsRes/res/disciple/statusBg/"..val..".png"
end

function UICommon.getServantHonorIconUrl(val)
    return "assetsRes/res/disciple/duty/"..val..".png"
end

function UICommon.getServantBookIconUrl(val)
    return "assetsRes/res/ep/"..val..".png"
end

function UICommon.getServantSkillIconUrl(val)
    return "assetsRes/res/disciple/skill/"..val..".png"
end

function UICommon.getServantAdvantageIconUrl(val)
    return "assetsRes/res/disciple/compellation/"..val..".png"
end

function UICommon.getServantSpIconUrl(val)
    return "assetsRes/res/hint/hint"..val..".png"
end

function UICommon.getServantFuSpIconUrl(val)
     -- 关注福利特长图片获取
    return "assetsRes/res/disciple/info/"..val..".png"
end

--红颜
function UICommon.getWifeNameIconUrl(val)
    return "assetsRes/res/beauty/title/"..val..".png"
end

function UICommon.getWifeIconUrl(val)
    return "assetsRes/res/beauty/dress/"..val..".png"
end

function UICommon.getWifeHalfIconUrl2(val)
    return "assetsRes/res/beauty/headIcon/"..val..".png"
end


function UICommon.isOpenNoDress() --是否开启红颜脱衣
    if Config.channelRes=="1" then
        return true
    end
    local isOpenNoDress = true;
    local switchProxy = king:getProxy("game.switch.GobalSwitchProxy")
    local playerProxy = king:getProxy("game.player.PlayerProxy")
    if playerProxy.user==nil then
      return false
    end
    local vip = playerProxy.user.vip
    --'isHideNoDress'=>1,//是否隐藏红颜脱衣 1：隐藏 0：不隐藏
    if switchProxy:getSwitch("isHideNoDress")~=nil then
      isOpenNoDress=false;
      if switchProxy:getSwitch("isHideNoDress")==0 or (switchProxy:getSwitch("isHideNoDress")>1 and vip>=switchProxy:getSwitch("isHideNoDress")) then
        isOpenNoDress=true;
      end
    end
    return isOpenNoDress
end

function UICommon.getWifeIconUrl1(val)
    local url =  "assetsRes/res/beauty/dress/"..val..".png"
    -- if UICommon.isOpenNoDress() then
    --   url = "assetsRes/res/beauty/nodress/"..val..".png"
    -- end
    return url
end

function UICommon.getWifeBgIconUrl(val)
    return "assetsRes/res/beauty/backdrop/"..val..".jpg"
end

function UICommon.getWifeHeadIconUrl(val)
    return "assetsRes/res/beauty/headIcon/"..val..".png"
end
--子嗣
function UICommon.getChildBabyIconUrl()
  return "assetsRes/res/child/baby/1.png"
end
--子嗣圆头
function UICommon.getChildCircleHandUrl(val,sex)
  local url = ""
  if sex == 1 then
    url = "assetsRes/res/child/circleHand/boy/"..val..".png"
  elseif sex == 2 then
    url = "assetsRes/res/child/circleHand/girl/"..val..".png"
  end
  return url
end

function UICommon.getChildMinorIconUrl(val,sex)
  local url = ""
  if sex == 1 then
    url = "assetsRes/res/child/weichengnian/boy/"..val..".png"
  elseif sex == 2 then
    url = "assetsRes/res/child/weichengnian/girl/"..val..".png"
  end
  return url
end

function UICommon.getChildAdultIconUrl(val,sex)
  local url = ""
  if sex == 1 then
    url = "assetsRes/res/child/chengnian/boy/"..val..".png"
  elseif sex == 2 then
    url = "assetsRes/res/child/chengnian/girl/"..val..".png"
  end
  return url
end

function UICommon.getChildUndefinedIconUrl(val,sex)
  local url = ""
  if sex == 1 then
    url = "assetsRes/res/child/chengnian/boy/"..val..".png"
  elseif sex == 2 then
    url = "assetsRes/res/child/chengnian/girl/"..val..".png"
  end
  return url
end
function UICommon.getChildHeadIconUrl(val,sex)
  local url = ""
  if sex == 1 then
    url = "assetsRes/res/imperialCollege/boy/"..val..".png"
  elseif sex == 2 then
    url = "assetsRes/res/imperialCollege/girl/"..val..".png"
  end
  return url
end
function UICommon.getChildShadowIconUrl(sex)
    return "assetsRes/res/child/childshadow/"..sex..".png"
end

function UICommon.getChildHonorNameIconUrl(val)
    return "assetsRes/res/child/rongyuName/"..val..".png"
end

function UICommon.getChildHonorTitleIconUrl(val)
    return "assetsRes/res/child/rongyuTitle/"..val..".png"
end

function UICommon.getChildTalentIconUrl(val)
    return "assetsRes/res/child/talent/"..val..".png"
end
function UICommon.getChildHonorIconUrl(val)
    return "assetsRes/res/imperialCollege/child/"..val..".png"
end
-- 国子监背景
function UICommon.getImperialBgUrl(val)
    return "assetsRes/res/imperialCollege/cb"..val..".png"
end
-- 宝箱
function UICommon.getRewardIcon1Url(val,type)
    local boxType = {"default","open","empty"}
    if val < 1 then
      val = 1
    else
      val = val - 1
    end
    return "assetsRes/res/imperialCollege/box/case"..val.."_"..boxType[type or 1]..".png"
end
-- 犯人正常形象
function UICommon.getPriImgUrl(val)
    return "assetsRes/res/extraHuman/criminal/human"..val.."c.png"
end
-- 犯人被打形象
function UICommon.getPriHitedImgUrl(val)
    return "assetsRes/res/extraHuman/criminal/human"..val.."d.png"
end
-- 犯人npc头像
function UICommon.getNpcHeadUrl(val)
    return "assetsRes/res/plat/npcpart/"..val..".png"
end
-- 犯人半身像
function UICommon.getNpcBodyUrl(val)
    return "assetsRes/res/plat/npcwhole/"..val..".png"
end
-- 犯人npc红名
function UICommon.getNpcNameImgUrl(val)
    return "assetsRes/res/plat/naccompellation1/"..val..".png"
end
-- 犯人数字
function UICommon.getNum23IconUrl(val)
    return "assetsRes/res/figure/23/"..val..".png"
end
-- 犯人绿色名字
function UICommon.getNpcName2ImgUrl(val)
    return "assetsRes/res/plat/npccompellation/"..val..".png"
end
-- 横 王的称号
function UICommon.getUserTitle1IconUrl(val)
    local gobalSwitchProxy = king:getProxy("game.switch.GobalSwitchProxy")
    if gobalSwitchProxy:getSwitch("isShowNewTitle") then
        return "assetsRes/res/package/itemicon/"..val.."_1.png"
    else
        return "assetsRes/res/package/itemicon/"..val..".png"
    end
end

--聊天皇冠
function UICommon.getChatIconUrl(val)
    local level = val
    if level >= 4 and level < 7 then
        return "assetsRes/res/chat/icon_1.png"
    elseif level >= 7 and level < 10 then
        return "assetsRes/res/chat/icon_2.png"
    elseif level >= 10 and level < 13 then
        return "assetsRes/res/chat/icon_3.png"
    else
        return "assetsRes/res/chat/icon_4.png"
    end
end


-- 竖 王的称号
function UICommon.getUserTitle2IconUrl(val)
    return "assetsRes/res/player/court/headline/"..val..".png"
end
-- 竖 王的称号 按钮
function UICommon.getUserTitle3IconUrl(val)
    return "assetsRes/res/player/court/jobbt/"..val..".png"
end
-- 竖 王的称号 按钮按下状态
function UICommon.getUserTitle4IconUrl(val)
    return "assetsRes/res/player/court/jobbt/"..val.."d.png"
end
-- 资源icon
function UICommon.getResIconUrl(val)
    return "assetsRes/res/resIcon/"..val..".png"
end
-- 衙门商店图标
function UICommon.getYamenSkillUrl(val)
    return "assetsRes/res/package/tribunalskill/"..val..".png"
end
function UICommon.getVipIconUrl(val)
  local playerProxy = king:getProxy("game.player.PlayerProxy")
  local gobalSwitchProxy = king:getProxy("game.switch.GobalSwitchProxy")
  if gobalSwitchProxy:isNewVip()==2 then
    return "assetsRes/res/vip/vip"..val..".png"
  else
    if playerProxy.banben == nil then
      return "assetsRes/res/vip/vip"..val.."_1.png"
    else
        if playerProxy.banben.vipver==nil or playerProxy.banben.vipver==1 then --旧资源
          return "assetsRes/res/vip/vip"..val.."_1.png"
        else
          return "assetsRes/res/vip/vip"..val..".png"
        end
    end
  end
end

function UICommon.getAffairsBgUrl(val)
    return "assetsRes/res/beijing/shiye/"..val..".jpg"
end
-- 官爵字icon
function UICommon.getOfficeNameIconUrl(val)
    return "assetsRes/res/government/compellation/"..val..".png"
end

function UICommon.getOfficeName1IconUrl(val)
    return "assetsRes/res/government/compellation1/"..val..".png"
end

function UICommon.getUpTitleIconUrl(val)
    return "assetsRes/res/government/risejob/"..val..".jpg"
end

function UICommon.getUpTitleIconUrl1(val)
    return "assetsRes/res/government/risejob/"..val..".png"
end

-- 寻访角色半身照
function UICommon.getFindRoleImgUrl(val)
    return "assetsRes/res/look/npc/"..val..".png"
end
-- 寻访场景图
function UICommon.getFindSceneImgUrl(val)
    return "assetsRes/res/look/for/"..val..".jpg"
end
-- 寻访建筑名
function UICommon.getFindTitleIconUrl(val)
    return "assetsRes/res/look/houseName1/"..val..".png"
end
-- 排行榜前三名图标
function UICommon.getRankIconUrl(val)
    return "assetsRes/res/extra/extra"..90 + val..".png"
end
-- 寻访角色名
function UICommon.getFindNameIconUrl(val)
    return "assetsRes/res/look/npcName/"..val..".png"
end
-- 日常任务icon
function UICommon.getDailyTaskIconUrl(val)
    return "assetsRes/res/hint/duty/"..val..".png"
end
-- 宴会头图片
function UICommon.getFeastDeskTopUrl(val)
    return "assetsRes/res/stage/backdrop/backdrop/bd"..val.."1u.png"
end
-- 宴会食物
function UICommon.getFoodImageUrl(val)
    return "assetsRes/res/stage/backdrop/table/edibles"..val..".png"
end
-- 打折图片
function UICommon.getDiscountImageUrl(val)
    return "assetsRes/res/extra/extra_zhe"..val..".png"
end
--成就
function UICommon.getAchieveIconUrl(val)
    return "assetsRes/res/extra/chengjiu"..val..".png"
end

--成就状态图
function UICommon.getAchieveTipIconUrl(val)
    return "assetsRes/res/hint/hint"..val..".png"
end

--标题图
function UICommon.getTitleIconUrl(val)
    return "assetsRes/res/headline/headline"..val..".png"
end

--按钮图
function UICommon.getBtnIconUrl(val)
    return "assetsRes/res/btn/"..val..".png"
end
-- 活动标题
function UICommon.getActTitleUrl(type, val)
    return "assetsRes/res/activity/"..type.."/title"..val..".png"
end
-- 活动标题2
function UICommon.getActTitle2Url(type, val)
    return "assetsRes/res/activity/"..type.."/title_"..val..".png"
end
-- 府衙活动图标
function UICommon.getActivityIconUrl(val)
    return "assetsRes/res/activity/act"..val..".png"
end
-- 府衙活动文字
function UICommon.getActivityTitleUrl(val)
    return "assetsRes/res/activity/type"..val..".png"
end
-- 新府衙活动图标
function UICommon.getNewActivityIconUrl(val)
    return "assetsRes/res/activityNew/act"..val..".png"
end
-- 新府衙活动文字
function UICommon.getNewActivityTitleUrl(val)
    return "assetsRes/res/activityNew/type"..val..".png"
end
-- 打包换肤活动图标
function UICommon.getCsActivityIconUrl(val)
    return "assetsRes/res/check/activity/act"..val..".png"
end
-- 打包换肤活动文字
function UICommon.getCsActivityTitleUrl(val)
    return "assetsRes/res/check/activity/type"..val..".png"
end
-- 活动背景
function UICommon.getActBgUrl(type,val)
    return "assetsRes/res/activity/"..type.."/bg"..val..".jpg"
end
-- 活动排行前3图标
function UICommon.getActRankImgUrl(val)
    return "assetsRes/res/activity/rank"..val..".png"
end
function UICommon.getfourWiseMenTitleUrl(val)
    return "assetsRes/res/activity/5/title_"..val..".png"
end
-- 关注福利背景
function UICommon.getWelTitleUrl(val)
    return "assetsRes/res/activity/guanqun/"..val..".png"
end
-- 巾帼按钮
function UICommon.getHeroinesBtnImgUrl(val)
    return "assetsRes/res/activity/12/btn"..val..".png"
end
function UICommon.getHeroinesBtnPressImgUrl(val)
    return "assetsRes/res/activity/12/btn"..val.."_p.png"
end
-- 神迹图片
function UICommon.getMiracleImgUrl(val)
    return "assetsRes/res/hint/mystical/"..val..".png"
end
-- 联盟BOSS战斗图片
function UICommon.getUnionBossFightImgUrl(val)
    return "assetsRes/res/stage/union/unionboss/boss"..val..".png"
end
-- 联盟BOSS战斗图片
function UICommon.getUnionBossImgUrl(val)
    return "assetsRes/res/stage/union/unionboss/boss"..val..".png"
end

-- 翰林院图片
function UICommon.getAcademyImgUrl(val)
    return "assetsRes/res/academy/bg/"..val..".jpg"
end
-- 翰林院技能底图
function UICommon.getAcademySkImgUrl(val)
    if val <= 5 then
       return "assetsRes/res/hero/jn/1.png"
    elseif  val <= 10 then
       return "assetsRes/res/hero/jn/2.png"
    elseif  val <= 15 then
       return "assetsRes/res/hero/jn/3.png"
    else 
       return "assetsRes/res/hero/jn/4.png"
    end
end
--
function UICommon:getServantNormalBgUrl()--
  return "assetsRes/res/disciple/statusBg/1.png"
end

function UICommon:getServantExileBgUrl()
  return "assetsRes/res/exile/1.png"
end

-- 大冒险骰子图片
function UICommon.getActDiceImgUrl(val)
    return "assetsRes/res/actnew/se"..val..".png"
end

-- 获取场景图片
function UICommon.getSkinImgUrl(val)
    if val < 10 then
        return "assetsRes/res/homeSkin/20"..val..".jpg"
    else
        return "assetsRes/res/homeSkin/2"..val..".jpg"
    end
end

--- 七天奖励 ---
function UICommon.getSevenDaysAImgUrl(val)
    return "assetsRes/res/sevenDays/a"..val..".png"
end
function UICommon.getSevenDaysBImgUrl(val)
    return "assetsRes/res/sevenDays/b"..val..".png"
end
function UICommon.getSevenDaysCImgUrl(val)
    return "assetsRes/res/sevenDays/c"..val..".png"
end
function UICommon.getSevenDaysDImgUrl(val)
    return "assetsRes/res/sevenDays/d"..val..".png"
end
function UICommon.getSevenDaysEImgUrl(val)
    return "assetsRes/res/sevenDays/e"..val..".png"
end
function UICommon.getSevenDaysFImgUrl(val)
    return "assetsRes/res/sevenDays/f"..val..".png"
end
--- 七天奖励 ---
function UICommon.getFuncPreivewSysnameUrl(val)
    return "assetsRes/res/funcPreview/f"..val..".png"
end
function UICommon.getFuncPreivewIbgUrl(val)
    return "assetsRes/res/funcPreview/ibg_"..val..".jpg"
end
--新版皇宫，建筑名，横
function UICommon.getPalaceAHengUrl(val)
    return "assetsRes/res/palaceA/hname/h"..val..".png"
end
--新版皇宫，建筑名，
function UICommon.getPalaceAShuUrl(val)
    return "assetsRes/res/palaceA/bname/"..val..".png"
end
--工部承建
function UICommon.getHouseHoldBuildBg(makeid)
    return "assetsRes/res/activity/houseHold/placebg/".. makeid .. ".jpg"
end
function UICommon.getHouseHoldBuildOverBg(makeid)
    return "assetsRes/res/activity/houseHold/placebg/".. makeid .. "_over.png"
end
function UICommon.getHouseHoldBuildTitle(makeid)
    return "assetsRes/res/activity/houseHold/place/".. makeid .. ".png"
end
function UICommon.getHouseHoldBuildTitle2(makeid)
    return "assetsRes/res/activity/houseHold/title/".. makeid .. ".png"
end
-- 门客对决
function UICommon.getServantWifeTitle(id)
    return "assetsRes/res/activity/manDuel/title"..id..".png"
end

function UICommon.getServantWifePaiQianTitle(id)
    return "assetsRes/res/activity/manDuel/PaiQian"..id..".png"
end

function UICommon.getServantWifeBest(id)
    return "assetsRes/res/activity/manDuel/best"..id..".png"
end

function UICommon.getServantWifeTotalTitle(id)
    return "assetsRes/res/activity/manDuel/s2_"..id..".png"
end

function UICommon.getServantWifebg(id)
    return "assetsRes/res/activity/manDuel/item_mask"..id..".png"
end

function UICommon.getServantWifeStarbg(id)
    return "assetsRes/res/activity/manDuel/m_bg2_"..id..".jpg"
end

function UICommon.getServantWifefightbg(id)
    return "assetsRes/res/activity/manDuel/m_bg1_"..id..".jpg"
end

function UICommon.getSkinface(arg1,arg2,img)
    if next(arg1) == nil then
      return
    end

    if next(arg2) == nil then
      return
    end

    for k,v in pairs(arg2) do
        local id = v.heroid or v.wid
        if arg1.pkID and arg1.pkID == id then
            if arg1.face and arg1.face == 1 then
                img:setRotationSkewY(180)
            end 
        end
    end  
end
-------e紫光阁s----
function UICommon.getServantfullDressImgUrl(id)
    return "assetsRes/res/dress/servantfull/".. id .. ".png"
end
function UICommon.getNewServantfullDressImgUrl(id)
    return "assetsRes/res/dress/newservantfull/".. id .. ".png"
end
function UICommon.getServantheadDressImgUrl(id)
    return "assetsRes/res/dress/servanthead/".. id .. ".png"
end
function UICommon.getServantheadDressImgUrl2(id)
    return "assetsRes/res/dress/servanthead2/".. id .. ".png"
end
function UICommon.getWifefullDressImgUrl(id)
    return "assetsRes/res/dress/wifefull/".. id .. ".png"
end
function UICommon.getNewWifefullDressImgUrl(id)
    return "assetsRes/res/dress/wifefull2/".. id .. ".png"
end
function UICommon.getWifeheadDressImgUrl(id)
    return "assetsRes/res/dress/wifehead/".. id .. ".png"
end
function UICommon.getWifenodressDressImgUrl(id)
    local url =  "assetsRes/res/dress/wifefull/".. id .. ".png"
    if UICommon.isOpenNoDress() then
      url = "assetsRes/res/dress/wifenodress/"..id..".png"
    end
    return url
end
function UICommon.getWifebackdropDressImgUrl(id)
    return "assetsRes/res/dress/wifefull/".. id .. ".png"
end
function UICommon.getDressQualityImgUrl(id)
    return "assetsRes/res/dress/ui/q".. id .. ".png"
end
-------e紫光阁e----

-- 摸金校尉

function UICommon.getFightingBoss(bossid)
    return "assetsRes/res/gravekeeper/bossicon/"..bossid..".png"
end

function UICommon.getFightingBossImg(bossid)
    return "assetsRes/res/gravekeeper/boss/"..bossid..".png"
end

function UICommon.getBoxState(id,sid)
    return "assetsRes/res/gravekeeper/box/"..id.."_"..sid..".png"
end

function UICommon.getGraveRankImg(rid)
    return "assetsRes/res/gravekeeper/rank"..rid..".png"
end

-- 天国争霸赛
function UICommon.getRebelBossImg(id)
    return "assetsRes/res/rebel/half/role"..id..".png"
end

function UICommon.getRebelBossIcon(id)
    return "assetsRes/res/rebel/icon/role"..id..".png"
end

--国庆活动
function UICommon.getNationalIcon(id)
    return "assetsRes/res/activity/nationalDay/"..id..".png"
end

function UICommon.getUnionMenuBtnUrl(id)
    id = id or 1
    id = id > 0 and id or 1
    return "assetsRes/res/newUnion/menuBtn/"..id..".png"
end

function UICommon.getUnionNumUrl(id)
    id = id or 1
    id = id > 0 and id or 1
    return "assetsRes/res/newUnion/num/"..id..".png"
end

function UICommon.getUnionIconBgUrl(id)
    id = id or 1
    id = id > 0 and id or 1
    return "assetsRes/res/newUnion/qz/"..id..".png"
end

function UICommon.getUnionIconUrl(id)
    id = id or 1
    id = id > 0 and id or 1
    return "assetsRes/res/newUnion/icon/"..id..".png"
end

function UICommon.splitList(list,num)
    local len  = list and #list or 0
    if len <= 0 then
        return nil
    end
    local slist = {}
    local idx = 1
    while(idx <= len)
    do
        local sl = UICommon.createSplit(list,idx,idx+num-1)
        table.insert(slist,sl)
        idx = idx + num
    end
    return slist
end
function UICommon.createSplit(list,sId,tId)
    local row = {}
    for i=sId,tId do
        local ting = list[i]
        if ting then
            table.insert(row,ting)
        end
    end
    return row
end

--加入角色
function UICommon.pushCommonRole(box,info,scale,isSign,isLight,noAnime)
    --info:chenghao,job,level,name,sex
    scale = scale or 1

    box:removeAllChildren()
    local img = UICommon.getRoleImg(info,true,isSign,isLight,noAnime)
    img:setCascadeColorEnabled(true)
    img:setCascadeOpacityEnabled(true)
    local size = img:getContentSize()
    if (info.chenghao and info.chenghao > 0) or img.isAnime then
        img:setPosition(size.width/2,size.height-380)
    else
        img:setPosition(size.width/2,size.height)
    end
    box:setScale(scale)
    box:addChild(img)
    return img
end

-- 创建人物动画
function UICommon.createRoleAnime(sex,job,lv,ch,pData)
    job = tonumber(job) or 1
    lv = tonumber(lv) or 1
    ch = tonumber(ch) or 0
    pData = pData or {}

    local json = nil
    local atlas = nil
    local pos = nil  -- 如果人物的脚不在坐标(0,0)时，使用pos修正
    if sex == 1 then
        if ch > 0 then
            json = "assetsRes/effect/spine/player/ch/chenghao_"..ch..".json"
            atlas = "assetsRes/effect/spine/player/ch/chenghao_"..ch..".atlas"

            local posCh = {
                -- [3]={x=-50,y=0},
            }
            if posCh[ch] then
                pos = posCh[ch]
            end
        elseif lv > 0 then
            lv = lv > 18 and 18 or lv
            json = "assetsRes/effect/spine/player/lv/guanfu_"..lv..".json"
            atlas = "assetsRes/effect/spine/player/lv/guanfu_"..lv..".atlas"

            local posLv = {
                -- [1]={x=-50,y=0},
            }
            if posLv[lv] then
                pos = posLv[lv]
            end
        end
    elseif sex == 2 then
        if ch > 0 then
            json = "assetsRes/effect/spine/wplayer/ch/chenghao_"..ch..".json"
            atlas = "assetsRes/effect/spine/wplayer/ch/chenghao_"..ch..".atlas"

            local posCh = {
                -- [3]={x=-50,y=0},
            }
            if posCh[ch] then
                pos = posCh[ch]
            end
        elseif lv > 0 then
            lv = lv > 18 and 18 or lv
            json = "assetsRes/effect/spine/wplayer/lv/guanfu_"..lv..".json"
            atlas = "assetsRes/effect/spine/wplayer/lv/guanfu_"..lv..".atlas"

            local posLv = {
                -- [1]={x=-50,y=0},
            }
            if posLv[lv] then
                pos = posLv[lv]
            end
        end
    end

    -- json = "assetsRes/effect/spine/player/lv/guanfu_258.json"
    -- atlas = "assetsRes/effect/spine/player/lv/guanfu_258.atlas"

    if not json or not atlas then
        return
    end

    if not cc.FileUtils:getInstance():isFileExist(json) or not cc.FileUtils:getInstance():isFileExist(atlas) then
        return
    end
    
    local actor = sp.SkeletonAnimation:create(json, atlas, 1)
    actor:setAnimation(0,"standby",true)
    actor:update(0)
    actor:setSkin("tou_"..job)

    if pos then
        actor:setPosition(pos.x,pos.y)
    end

    local pNode = cc.Node:create()
    pNode:setCascadeColorEnabled(true)
    pNode:setCascadeOpacityEnabled(true)
    pNode:addChild(actor)

    if pData.sc then
        pNode:setScale(pData.sc)
    end
    if pData.x then
        pNode:setPositionX(pData.x)
    end
    if pData.y then
        pNode:setPositionY(pData.y)
    end

    local mNode = cc.Node:create()
    mNode:setCascadeColorEnabled(true)
    mNode:setCascadeOpacityEnabled(true)
    mNode:addChild(pNode)
    return mNode
end

-- 创建角色，皇级称号加特效
-- isLight(是否加特效)
-- noAnime(不使用人物动画)
function UICommon.getRoleImg(obj,allImg,isSign,isLight,noAnime)
    local img = UICommon.getRoleImgOld(obj,allImg,isSign,noAnime)

    if not isLight then
        return img
    end

    local chenghao = obj.chenghao or 0
    if chenghao <= 0 then
        return img
    end

    local proxy = king:getProxy("game.player.PlayerProxy")
    local conf = proxy:getConf("fashion","id",chenghao)

    if not conf or conf.type ~= 3 then
        return img
    end

    local imgSize = img:getContentSize()
    local imgAnc = img:getAnchorPoint()

    local pNode = ccui.Layout:create()
    pNode:setContentSize(imgSize.width,imgSize.height)
    pNode:setAnchorPoint(imgAnc.x,imgAnc.y)
    local anime1 = UICommon.loadArmatureM("assetsRes/effect/guanfu_huang/guanfu_huang.ExportJson","guanfu_huang")
    anime1:getAnimation():play("guanfu_zhen",-1, 1)
    anime1:setPosition(15, -imgSize.height/2+100)
    pNode:addChild(anime1)

    img:setPosition(imgSize.width * imgAnc.x, imgSize.height * imgAnc.y)
    pNode:addChild(img)

    local anime2 = UICommon.loadArmatureM("assetsRes/effect/guanfu_huang/guanfu_huang.ExportJson","guanfu_huang")
    anime2:getAnimation():play("guanfu_xian",-1, 1)
    anime2:setPosition(15, -imgSize.height/2+200)
    pNode:addChild(anime2)
    pNode.isAnime = img.isAnime
    return pNode
end

--角色
--不是角色创建不用传第三个参数
-- noAnime(不使用人物动画)
function UICommon.getRoleImgOld(obj,allImg,isSign,noAnime)
    --obj.sex = 1 -- 因为只有男性玩家，老账号有女性会报错，暂时这样改下，方便测试

    local sex = (obj.sex ~= 1 and obj.sex ~= 2) and 1 or obj.sex

    local job = obj.job or 1
    local level = obj.level or 1
    local chenghao = obj.chenghao or 0
    local head = nil
    local clothes = nil
    local body = nil
    local miter = nil

    local frameMiter_path = nil
    local frameHead = nil
    local head_path = nil
    local frameClothes = nil
    local frameClothes_path = nil
    local headType = nil
    local frameMiter = nil
    local newBody = nil      --为了解决男女性称号中欧和黑人的脖子手的肤色问题
    local newBody_path = nil
    local roleImg = cc.Sprite:create()
    --截上身图

    if allImg ~= nil and allImg == true then
        -- 人物动画
        if not noAnime then
            local anime = UICommon.createRoleAnime(sex,job,level,chenghao,{sc=1.315})
            if anime then
                anime.isAnime = true
                return anime
            end
        end

        --未考虑女性头像。如有女性头像需重新梳理逻辑
        part_Head  = sex == 1 and "m"..job..".png" or "wm"..job..".png" -- 等级服装头像
        if sex == 1 then
            all_Head   = chenghao > 0 and "p"..job..".png" or "m"..job..".png"    -- 活动男服装头像
        else
            all_Head   = chenghao > 0 and "k"..job..".png" or "wm"..job..".png"    -- 活动女服装头像
        end
        frameHead  = chenghao > 0 and all_Head or  part_Head
        head_path = "plist/"..frameHead
        if sex == 1 then 
            frameClothes = chenghao > 0 and "c"..chenghao..".png" or "o"..level..".png"    -- 男服装
            frameMiter=level..".png"
            if job > 7 and job < 13 then    --男东欧
                newBody = chenghao > 0 and "ManEuropeansBody/"..chenghao..".png" or nil
            elseif job > 12 and job < 18 then   --男黑人
                newBody = chenghao > 0 and "ManBlackBody/new"..chenghao..".png" or nil
            end
        elseif sex == 2 then
            frameClothes = chenghao > 0 and "wc"..chenghao..".png" or "wo"..level..".png"    -- 女服装
            frameMiter="w"..level..".png"
            if job > 7 and job < 13 then    --女东欧
                newBody = chenghao > 0 and "WomanEuropeansBody/"..chenghao..".png" or nil
            elseif job > 12 and job < 18 then   --女黑人
                newBody = chenghao > 0 and "WomanBlackBody/new"..chenghao..".png" or nil
            end
        else
            return 
        end
        
        if isSign==true then
            frameClothes_path="plist/jscj.png"
        else
            frameClothes_path="plist/"..frameClothes
            frameMiter_path="plist/"..frameMiter
            newBody_path= newBody ~= nil and ("plist/"..newBody) or nil
        end
            
        --头像
        if cc.FileUtils:getInstance():isFileExist(head_path) then
            head = cc.Sprite:create(head_path)
            headType = "Sprite"
        end

        --服装
        if cc.FileUtils:getInstance():isFileExist(frameClothes_path) then
            clothes = cc.Sprite:create(frameClothes_path)
            if clothes == nil then
                display.removeImage(frameClothes_path)
                display.loadImage(frameClothes_path)
                clothes = cc.Sprite:create(frameClothes_path)
            end
        end
        --女性特殊肤色身体
        if cc.FileUtils:getInstance():isFileExist(newBody_path) then
            body = cc.Sprite:create(newBody_path)
            if body == nil then
                display.removeImage(newBody_path)
                display.loadImage(newBody_path)
                body = cc.Sprite:create(newBody_path)
            end
        end

        --头盔
        if cc.FileUtils:getInstance():isFileExist(frameMiter_path) then 
            if sex == 1 then
                miter = cc.Sprite:create("plist/kui"..chenghao..".png")
                if chenghao == 0 then
                    miter = cc.Sprite:create(frameMiter_path)
                elseif chenghao == 4 then
                    head:setOpacity(0)
                    miter = cc.Sprite:create("plist/kui4.png")
                end
            elseif sex == 2 then
                miter = cc.Sprite:create("plist/wkui"..chenghao..".png")
                if chenghao == 0 then
                    miter = cc.Sprite:create(frameMiter_path)
                end
            end
        end
    else
        level = level > 18 and 18 or level 
        if sex == 1 then
            frameHead = "t"..job..".png"
            
            frameClothes = chenghao > 0 and "c"..chenghao..".png" or "s"..level..".png"

            frameMiter=level..".png"
        else
            frameHead = "wt"..job..".png"
            frameClothes = chenghao > 0 and "wc"..chenghao..".png" or "ws"..level..".png"
            frameMiter="w"..level..".png"
        end

        head_path = "plist/tou/"..frameHead 
        if job < 8 then
            frameClothes_path= "plist/tou/"..frameClothes   
        elseif job > 7 and job < 13 then    
            frameClothes_path= sex == 1 and "plist/tou/europeansMan/"..frameClothes or "plist/tou/europeansGirl/"..frameClothes   --东欧人
        elseif job > 12 and job < 18 then
            frameClothes_path= sex == 1 and "plist/tou/blackMan/"..frameClothes or "plist/tou/blackGirl/"..frameClothes        ---黑人
        end        
        frameMiter_path="plist/tou/"..frameMiter
        head = ccui.ImageView:create(head_path)
        headType = "ImageView"
        head:setAnchorPoint(0.5,0.5)
        clothes = ccui.ImageView:create(frameClothes_path)
        clothes:setAnchorPoint(0.5,0.5)
        
        if sex == 1 then
            miter = ccui.ImageView:create("plist/tou/g"..chenghao..".png")
            if chenghao == 0 then
                miter = ccui.ImageView:create(frameMiter_path)
                miter:setAnchorPoint(0.5,0.5)
            elseif chenghao == 19 and obj.headId == 0 then
                head:setOpacity(0)
                miter = ccui.ImageView:create("plist/tou/g19.png")
            end
        else
            miter = ccui.ImageView:create("plist/tou/wg"..chenghao..".png")
            if chenghao == 0 then
                miter = ccui.ImageView:create(frameMiter_path)
                miter:setAnchorPoint(0.5,0.5)
            end
        end
    end
    if clothes == nil or head == nil then
        Config.CUR_ERROR = UICommon.newTableToStr(obj) .. ",allImg===" .. tostring(allImg) .. ",clothes==" .. tostring(clothes) .. ",head==" .. tostring(head)
    end
    if clothes ~= nil then
        roleImg:addChild(clothes)
    end
    if body ~= nil then
        roleImg:addChild(body)
    end
    if head ~= nil then
        roleImg:addChild(head)
    end
    if miter then
        roleImg:addChild(miter)
        roleImg.miter = miter
    end
    if isSign and clothes ~= nil then
        clothes:setPositionX(clothes:getPositionX()-14.5)
        clothes:setPositionY(clothes:getPositionY()-170)
    end
    roleImg.head = head
    roleImg.clothes = clothes
    roleImg.body = body
        -- ！！！同步时请注意！！官服2.0版本代码！不是这个版本注意修改代码！！！
        -- roleImg:setPositionY(-30)
    if allImg ~= nil and allImg == true and clothes ~= nil then
        roleImg:setContentSize(clothes:getContentSize().width,clothes:getContentSize().height)
        roleImg:setPositionY(-100)
    end
    if headType=="ImageView" then
        if obj.headType ~=nil then
            if obj.headType ==0 then
            else
                if obj.headType ==2 then
                    roleImg.head:loadTexture(UICommon.getWifeHalfIconUrl2(obj.headId))
                elseif obj.headType ==1 then
                    roleImg.head:loadTexture(UICommon.getServantHalfIconUrl2(obj.headId))
                end
                if miter then
                    miter:removeSelf()
                end
                if clothes then
                    clothes:removeSelf()
                end
                if body then
                    body:removeSelf()
                end
            end
        end
    end
    return roleImg,head
end

function UICommon.junJiChuSetNeedProperty(p)
  return "assetsRes/res/imperialTask/"..p..".png"
end
function UICommon.junJiChuSetNeedBgProperty(p)
  return "assetsRes/res/imperialTask/event/"..p..".png"
end

-------------------头像框----------------

function UICommon.getUserFrame(val) 
  local frame_path="assetsRes/res/user/newFrame/" .. val .. ".png"
  if cc.FileUtils:getInstance():isFileExist(frame_path) then
    return frame_path
  else
    return "assetsRes/res/user/newFrame/0.png"
  end
end

function UICommon.getUserFrameNew(val) 
  local frame_path="assetsRes/res/user/newFrame/" .. val .. ".png"
  if cc.FileUtils:getInstance():isFileExist(frame_path) then
    return frame_path
  else
    return "assetsRes/res/user/newFrame/0.png"
  end
end
------------------------气泡框---------------------

function UICommon.getUserChatFrame(val) 
  local chatFrame_path="assetsRes/res/user/chatFrame/" .. val .. ".png"
  if cc.FileUtils:getInstance():isFileExist(chatFrame_path) then
    return chatFrame_path
  else
    return "assetsRes/res/user/chatFrame/0.png"
  end
end



----------纹理释放重载--------------内存不足纹理会被释放掉
local _map = {}
function UICommon.cacheSpritePlist(plist)--记录一下plist里framename和plist的关系
    for k,v in pairs(_map) do
      if v == plist then
        -- print("Frames Already added:", plist)
        return
      end
    end
    if cc.FileUtils:getInstance():isFileExist(plist) then
        local plistFile = cc.FileUtils:getInstance():fullPathForFilename(plist)
        local dict = cc.FileUtils:getInstance():getValueMapFromFile(plistFile)
        for fname, _ in pairs(dict.frames) do
          _map[fname] = plist
        end
    end
end

local cache=cc.SpriteFrameCache:getInstance()
function UICommon.checkFrame(framename)--检查
    if not cache:getSpriteFrame(framename) then
      -- print("framename__",framename)
      UICommon.reload(framename)
    end
end

function UICommon.reload(framename)--重载
    local plist = _map[framename]
    cc.SpriteFrameCache:getInstance():addSpriteFrames(plist)
end
----------纹理释放重载--------------

--圆弧头像遮罩
function UICommon.getHeadImg(roleImg)
    local clipNode = cc.ClippingNode:create()  ----创建ClippingNode
    local mask = cc.Sprite:create("assetsRes/res/beijing/head/bgMask.png")
    clipNode:setInverted(false)   ---设置可视区为裁剪区域，还是裁剪剩余区域
    clipNode:setAlphaThreshold(0)  ---根据alpha值控制显示
    clipNode:setStencil(mask)
    clipNode:addChild(roleImg)
    roleImg:setAnchorPoint(cc.p(0,0.40))
    return clipNode
end

function UICommon.drawrect( rect, borderwidth, color4f, isfill)
    local bordercolor = color4f or cc.c4f(1,0,0,0.5)
    local fillcolor = isfill and bordercolor or cc.c4f(0,0,0,0)
    borderwidth = borderwidth or 2

    local posvec = {
        cc.p(rect.x, rect.y),
        cc.p(rect.x, rect.y + rect.height),
        cc.p(rect.x + rect.width, rect.y + rect.height),
        cc.p(rect.x + rect.width, rect.y)
    }
    local drawnode = cc.DrawNode:create()
    drawnode:drawPolygon(posvec, 4, fillcolor, borderwidth, bordercolor)
    return drawnode
end
--尖角头像遮罩
function UICommon.getHeadImg1(roleImg)
    local clipNode = cc.ClippingNode:create()  ----创建ClippingNode
    local mask = UICommon.drawrect(cc.rect(0,0,240,240),0,nil ,true)
    mask:setRotation(-45)
    mask:setPositionY(-90)
    clipNode:setInverted(false)   ---设置可视区为裁剪区域，还是裁剪剩余区域
    clipNode:setAlphaThreshold(1)  ---根据alpha值控制显示
    clipNode:setStencil(mask)
    clipNode:addChild(roleImg)
    roleImg:setAnchorPoint(cc.p(0,0.3))
    return clipNode
end


function UICommon.addHeadImg(box,user)
  box:removeAllChildren()
  local head = UICommon.getHeadImg(UICommon.getRoleImg(user))
  local size = box:getContentSize()
  head:setPosition(size.width/2,size.height+65)
  box:addChild(head)
end

function UICommon.addHeadImgCopy(box,user,type,id)
      box:removeAllChildren()
      local size = box:getContentSize()
      local head=nil
      local typeT=type or user.headType
      local idT=id or user.headId
      print(typeT,idT,"type,id")
      if (type and tonumber(type) ~= 0) or (user.headType and tonumber(user.headType) ~= 0) then
        head=ccui.ImageView:create()
        if typeT == 1 then
            head:loadTexture("assetsRes/res/disciple/part2/"..idT..".png")
        elseif typeT == 2 then
            head:loadTexture("assetsRes/res/beauty/headIcon/"..idT..".png")
        end
        head:setAnchorPoint(0.5, 0.5)
        head:setScale(0.8, 0.8)
        head:setPosition(size.width/2,size.height/2)
        
      else
		--head = UICommon.getHeadImg(UICommon.getRoleImg(user))
        head = UICommon.maskTouXiang(UICommon.getRoleImg(user))
        head:setPosition(size.width/2,size.height+65)
      end
      box:addChild(head)
      box.head=head
end


function UICommon.addLightHeadImg(box,user)
  box:removeAllChildren()
  local head = UICommon.getHeadImg(UICommon.getRoleImg(user))
  local armature = UICommon.loadArmatureM("assetsRes/effect/touxiang.ExportJson","touxiang")
  armature:setAnchorPoint(0, 0)
  armature:getAnimation():playWithIndex(0,-1, 1)

  local size = box:getContentSize()
  armature:setPosition(-125,-115)
  head:setPosition(size.width/2,size.height+65)


  box:addChild(armature)
  box:addChild(head)
  box.head=head;
  box.armature=armature;
end

function UICommon.addChildAdultIcon(box,adultChild)
  local sex= 1;
  box:removeAllChildren()
  local iconPath=UICommon.getChildAdultIconUrl(val or 1,sex)
  local icon=ccui.ImageView:create();
  icon:loadTexture(iconPath);
  local head = UICommon.getHeadImg(icon)
  local size = box:getContentSize()
  head:setPosition(size.width/2,size.height/2+43)
  box:addChild(head)
end

--富文本
-- RichText 里面可以放入   RichElement ，而 RichElement 有三个子类： RichElementText 、 RichElementImage 、 RichElementCustomNode
function UICommon.createRichText(pnl, rtes)
    pnl:removeAllChildren()
    local s = pnl:getContentSize()
    local info = ccui.RichText:create()
    info:setPosition(0,s.height)
    info:setAnchorPoint( cc.p(0,1) )
    info:ignoreContentAdaptWithSize(false)--是否忽略当前内容适应s大小，为true则 不管_richText的大小，按照默认的渲染器的大小进行渲染。
    info:setContentSize(s)
    --info:setLocalZOrder(10)
    pnl:addChild(info)

    -- info:pushBackElement(re1); //尾端插入  
    -- info:insertElement(re2, 1);//插入到指定位置 
    for _,v in pairs(rtes) do
        info:pushBackElement(v)
    end
    
    return info
end

function UICommon.createRichTextCenter(pnl, rtes)
    pnl:removeAllChildren()
    local s = pnl:getContentSize()
    local info = ccui.RichText:create()
    info:setPosition(s.width/2,s.height)
    info:setAnchorPoint(cc.p(0.5,1) )
    info:ignoreContentAdaptWithSize(true)--是否忽略当前内容适应s大小，为true则 不管_richText的大小，按照默认的渲染器的大小进行渲染。
    info:setContentSize(s)
    --info:setLocalZOrder(10)
    pnl:addChild(info)

   
    for _,v in pairs(rtes) do
        info:pushBackElement(v)
    end
    
    return info
end




---- 新，测试--
function UICommon.createRichText2(pnl, rtes, n)
    pnl:removeAllChildren()
    local s = pnl:getContentSize()
    local info = ccui.RichText:create()
    info:setAnchorPoint( cc.p(0,0.2) )
    info:setPosition(0,s.height-5)
    info:ignoreContentAdaptWithSize(false)

    for _,v in pairs(rtes) do
        info:pushBackElement(v)
    end

    if n<10 then
      local innerHeight=pnl:getContentSize().height
      pnl:setInnerContainerSize(cc.size(600,220))
      pnl:setInnerContainerPosition(cc.p(0,-innerHeight*0.8-5))
      pnl:setBounceEnabled(false)
      pnl:setTouchEnabled(false) 
    end
    
    info:setContentSize(s)
    pnl:addChild(info)
    return info
end
---- 新，测试--

-- static RichElementText* create(int tag, const Color3B& color, GLubyte opacity, const std::string& text, const std::string& fontName, float fontSize);
-- static RichElementImage* create(int tag, const Color3B& color, GLubyte opacity, const std::string& filePath);
-- static RichElementCustomNode* create(int tag, const Color3B& color, GLubyte opacity, Node* customNode);
-- RichTextElement
function UICommon.RET(text,size,color,font)
  if(size == nil) then
    size = 25
  end

  if(color == nil) then
    color = cc.c3b(0,0,0)
  end
  -- txt_moneyTitle:setFontName("assetsRes/pglh.ttf")
  return ccui.RichElementText:create(1, color, 255, text, font or UICommon.getTTFName(), size)
end

--输入框统一通用
function UICommon.createEditBox(pnl,txt,color,holder,fontSize,maxNum,typeset,holderColor,eventHandle,myState,clickBeforeText)   ---clickBeforeText点击之后显示的文本（例如密码提示）
    local inputSize = pnl:getContentSize()   
    local editMes = ccui.EditBox:create(inputSize,"assetsRes/res/beijing/beijing130.png")
    
    local function getTextNum()
        if myState == 1 then
            return editMes:getText()
        end
        local strFmt = tools.filterSpecChars(editMes:getText())
        return strFmt
    end 
    local function editBoxTextEventHandle(strEventName,pSender)
        if strEventName == "began" then
            editMes:setText(clickBeforeText)
        elseif strEventName == "ended" then
        elseif strEventName == "return" then
            editMes:setText(getTextNum())
        elseif strEventName == "changed" then
            getTextNum()
        end
    end
    editMes:setText(txt)
    editMes:registerScriptEditBoxHandler(eventHandle or editBoxTextEventHandle)    
    editMes:setPosition(cc.p(inputSize.width/2, inputSize.height/2))
    editMes:setFontName(UICommon.getTTFName())
    editMes:setFontSize(fontSize)
    editMes:setFontColor(color)
    editMes:setName("editMes")
    --editMes:setPlaceholderFontColor(cc.c3b(140,140,140))
    editMes:setPlaceholderFontSize(fontSize)
    editMes:setPlaceHolder(holder)
    if holderColor then
        editMes:setPlaceholderFontColor(holderColor)
    end
    if maxNum then
        editMes:setMaxLength(maxNum)
    end
    editMes:setReturnType(cc.KEYBOARD_RETURNTYPE_DONE)
    pnl:addChild(editMes)
end

-- -- RichTextElement
-- function UICommon.REM(text,size,color)
--   if(size == nil) then
--     size = 25
--   end

--   if(color == nil) then
--     color = cc.c3b(0,0,0)
--   end
  
--   return ccui::RichElementImage::create(6, ccWHITE, 255, "CloseNormal.png");
-- end
-- 重复上下移动
function UICommon.repeatUpAndDown(item,spd,dis)
    if item == nil then return end
    local act1 = cc.MoveBy:create(spd or 2, {y = dis or 15})
    local seq  = cc.Sequence:create(act1, act1:reverse())
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end

-- 重复放大缩小
function UICommon.repeatScale(item,min,max)
    if item == nil then return end
    local act1 = cc.ScaleTo:create(1,min or 0.9)
    local act2 = cc.ScaleTo:create(1,max or 1)
    local seq  = cc.Sequence:create(act1, act2)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end
-- 重复放大缩小
function UICommon.repeatScale2(item)
    if item == nil then return end
    local act1 = cc.ScaleTo:create(0.8, 1.1)
    local act2 = cc.ScaleTo:create(0.8, 1)
    local seq  = cc.Sequence:create(act1, act2)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end
-- 重复放大缩小
function UICommon.repeatScale3(item,max,min)
    if item == nil then return end
    local act1 = cc.ScaleTo:create(0.8, max or 1)
    local act2 = cc.ScaleTo:create(0.8, min or 0.8)
    local seq  = cc.Sequence:create(act1, act2)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end
-- 重复放大缩小
function UICommon.repeatScale4(item,min,max,t)
    if item == nil then return end

    min = min or 0.9
    max = max or 1
    t = t or 0.8

    local sx = item:getScaleX()
    local sy = item:getScaleY()

    local act1 = cc.ScaleTo:create(t, sx * min, sy * min)
    local act2 = cc.ScaleTo:create(t, sx * max, sy * max)
    local seq  = cc.Sequence:create(act1, act2)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end

-- 缩小
function UICommon.ScaleSmall(item)
    if item == nil then return end
    local act1 = cc.ScaleTo:create(0.2, 0.95)
    item:runAction(act1)
end

-- 恢复
function UICommon.ScaleRecover(item)
    if item == nil then return end
    local act1 = cc.ScaleTo:create(0.2, 1)
    item:runAction(act1)
end


-- 重复旋转
function UICommon.repeatRotateCircle(item)
    if item == nil then return end
    local repeatAction = cc.RepeatForever:create(cc.RotateBy:create(12, 360))
    item:runAction(repeatAction)
end
-- 重复变灰
function UICommon.repeatTintToGray(item)
    if item == nil then return end
    local action1 = cc.TintBy:create(1, -120, -120, -120)
    local action1Back = action1:reverse()
    local seq = cc.Sequence:create( action1, action1Back)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end
-- 停止变灰并恢复
function UICommon.stopTintAction(item)
    if item == nil then return end
    transition.stopTarget(item)
    item:runAction(cc.TintTo:create(0, 255, 255, 255))
end

-- 重复透明度变化
function UICommon.repeatFade(item)
    if item == nil then return end
    local action1 = cc.FadeIn:create(1)
    local action2 = cc.FadeOut:create(0.5)
    local seq = cc.Sequence:create(action1, action2)
    item:runAction(seq)
end

function UICommon.stopFadeAction(item)
  if item == nil then return end
    transition.stopTarget(item)
    item:setOpacity(0)
end


-- 向下移动并慢慢显示
function UICommon.moveDownAndFadeIn(item,delay)
    if item == nil then return end
    item:setOpacity(0)
    item:moveBy({time = 0.6, y = -50})
    item:fadeIn({time = 0.6})
end


-- 向下移动并慢慢显示
function UICommon.moveDownAndFadeIn(item,delay)
    if item == nil then return end
    item:setOpacity(0)
    item:moveBy({time = 0.6, y = -50})
    item:fadeIn({time = 0.6})
end

-- 盖章效果
function UICommon.stampAction(item,callback)
    if item == nil then return end
    local scaleNum = item:getScale()
    item:setScale(3 * scaleNum)
    item:setVisible(true)
    item:scaleTo({time = 0.2, scale = scaleNum})
    local delay = cc.DelayTime:create(0.3)
    local seal = cc.CallFunc:create(function()
        --音效
        king:command("game.all.sealsomething")
        if callback then
            callback()
        end
    end)
    local seq  = cc.Sequence:create(delay, seal)
    item:runAction(seq)
end

function UICommon.newStampAction(item,callback)
    if item == nil then return end
    local scaleNum = item:getScale()
    item:setScale(3 * scaleNum)
    item:setVisible(true)
    item:scaleTo({time = 0.2, scale = scaleNum,onComplete=function()
       king:command("game.all.sealsomething")
    end})
    local delay = cc.DelayTime:create(0.9)
    local seal = cc.CallFunc:create(function()
        if callback then
            callback()
        end
    end)
    local seq  = cc.Sequence:create(delay, seal)
    item:runAction(seq)
end


-- 向上移动并消失
function UICommon.moveUpAndFadeOut(item,delay)
    if item == nil then return end
    local act0 = cc.FadeIn:create(0)
    local act1 = cc.MoveBy:create(0.8, {y = 150})
    local act2 = cc.FadeOut:create(0.4)
    local act3 = cc.MoveBy:create(0, {y = -150})
    local seq  = cc.Sequence:create(act0, act1, act2, act3)
    local act  = transition.create(seq, {delay=delay or 0})
    item:runAction(act)
end
-- 渐隐消失
function UICommon.delayAndFadeOut(item,delay)
    if item == nil then return end
    local act0 = cc.FadeIn:create(0)
    local act1 = cc.DelayTime:create(delay)
    local act2 = cc.FadeOut:create(0.8)
    local act3 = cc.CallFunc:create(function()
        item:removeSelf()
    end)
    local seq  = cc.Sequence:create(act0, act1, act2, act3)
    item:runAction(seq)
end
-- 进度条动画
function UICommon.loadingTo(item,per,speedScale,reverse,callback)
    if item == nil then return end
    local perOld = item:getPercent()
    if reverse == nil then reverse = false end
    local flag = (reverse and perOld <= per) or (reverse == false and  perOld >= per)  -- 是否要再加载一遍
    local speed = (per==perOld and 100 or math.abs(per-perOld))/60 * (speedScale or 1)
    local function add()
        perOld = perOld + speed
        if flag then
            if perOld >= 100 then
                perOld = -speed
                flag = false
            end
        else
            if perOld >= per or perOld >= 100 then
                item:unscheduleUpdate()
                if callback then callback() end
                perOld = per
            end
        end
        item:setPercent(perOld)
    end
    local function sub()
        perOld = perOld - speed
        if flag then
            if perOld <= 0 then
                perOld = 100 + speed
                flag = false
            end
        else
            if perOld <= per or perOld <= 0 then
                item:unscheduleUpdate()
                if callback then callback() end
                perOld = per
            end
        end
        item:setPercent(perOld)
    end
    if reverse then     -- 反向
        item:scheduleUpdateWithPriorityLua(sub, 1)
    else
        item:scheduleUpdateWithPriorityLua(add, 1)
    end
end
function UICommon.openDialogAction(item,_scale,_dur)
    if item == nil or tolua.isnull(item) == true then return end
    local scale =_scale or 0.9
    local dur =_dur or 0.2
    item:setScale(scale)
    king:command("ka",dur)
    local act1 = cc.EaseBackOut:create(cc.ScaleTo:create(dur, 1))
    item:runAction(act1)
end
function UICommon.closeDialogAction(item,callback)
    if item == nil or tolua.isnull(item) == true then return end
    king:command("ka",0.2)
    local act1 = cc.EaseBackIn:create(cc.ScaleTo:create(0.2, 0.9))
    local act2 = cc.CallFunc:create(callback)
    local seq = cc.Sequence:create(act1, act2)
    item:runAction(seq)
end

function UICommon.openFadeAction(stu)
    local item = stu._body
    if item == nil then
        return
    end
    local act1 = cc.FadeOut:create(0)
    local act2 = cc.FadeIn:create(0.6)
    item:setOpacity(0)
    item:setCascadeOpacityEnabled(true)
    local seq = cc.Sequence:create(act1,act2)
    item:runAction(seq)
end



-- 奖励列表
-- function UICommon.showRewardItems(box,itemList,scale)
function UICommon.showRewardItems(box,itemList,isShowInfo,isEffect,scale)
  box:setScale(scale or 1)
  local num = #itemList
  local itemWidth = 115
  local interval = 20
  local posX = -(itemWidth * num + (num - 1) * interval) / 2 + itemWidth / 2 -- item居中 ：+ itemWidth / 2
  local perWidth = itemWidth + interval

  local ThingIconUI=require("gameui.ThingIcon")
  for i,v in ipairs(itemList) do
    local thingUI=ThingIconUI:new(v,true)
    thingUI:setPosition(cc.p(posX + perWidth * (i - 1),6))
    if isShowInfo then
      thingUI:setTouchEnabled(true)
      thingUI:pickShow(king)
    else
      thingUI:setTouchEnabled(false)
    end
    -- if isEffect then
    --   local armature = ccs.Armature:create()
    --   armature:setScale(1.3)
    --   armature:init("frame")
    --   armature:getAnimation():playWithIndex(0)
    --   thingUI:addChild(armature)
    -- end
    box:addChild(thingUI)
  end
end

---奖励道具列表有光无光
function UICommon.showRewardItemsCopy(box,itemList,isShowInfo,isEffect,scale)
  box:setScale(scale or 1)
  local num = #itemList
  local itemWidth = 115
  local interval = 20
  local posX = -(itemWidth * num + (num - 1) * interval) / 2 + itemWidth / 2 -- item居中 ：+ itemWidth / 2
  local perWidth = itemWidth + interval

  local ThingIconUI=require("gameui.ThingIcon")
  for i,v in ipairs(itemList) do
    local thingUI=ThingIconUI:new(v,isEffect)
    thingUI:setPosition(cc.p(posX + perWidth * (i - 1),6))
    if isShowInfo then
      thingUI:setTouchEnabled(true)
      thingUI:pickShow(king)
    else
      thingUI:setTouchEnabled(false)
    end
    box:addChild(thingUI)
  end
end

function UICommon.showRewardItemsMM(box,itemList,isShowInfo,isEffect,scale)
  box:setScale(scale or 1)
  local num = #itemList
  local itemWidth = 115
  local interval = 20
  local posX = -(itemWidth * num + (num - 1) * interval) / 2 + itemWidth / 2 -- item居中 ：+ itemWidth / 2
  local perWidth = itemWidth + interval

  local ThingIconUI=require("gameui.ThingIcon")
  for i,v in ipairs(itemList) do
    local thingUI=ThingIconUI:new(v)
    thingUI:setPosition(cc.p(posX + perWidth * (i - 1),120))
    if isShowInfo then
      thingUI:setTouchEnabled(true)
      thingUI:pickShow(king)
    else
      thingUI:setTouchEnabled(false)
    end
    if isEffect then
      local armature = ccs.Armature:create()
      armature:setScale(1.3)
      armature:init("frame")
      armature:getAnimation():playWithIndex(0)
      thingUI:addChild(armature)
    end
    box:addChild(thingUI)
  end
end

-- 超文本按钮
function UICommon.txtBtn(btn,txt)
  btn:setTitleText(txt)
end

---------------------------------------------------------------------------
function UICommon.getThingIcon(url)
    local filename=url
    if not cc.FileUtils:getInstance():isFileExist(filename) then
       filename=UICommon.getDefaultIconUrl()
    end
    return ccui.ImageView:create(filename)
end

function UICommon.getSit(node)
  local p=node:getParent():convertToWorldSpace(cc.p(node:getPositionX(),node:getPositionY()))
  return p.x, p.y
end

function UICommon.getTopParentSit(node)
  local parent=node:getParent()
  local p=node:getParent():convertToWorldSpace(cc.p(node:getPositionX(),node:getPositionY()))
  if parent~=nil then 
    p=parent:getParent():convertToWorldSpace(cc.p(parent:getPositionX(),parent:getPositionY()))
    -- parent:setPosition(p.x,p.y)
    UICommon.getTopParentSit(parent)
  else
    return p.x, p.y
  end
end

function UICommon.showWindow8(box,rtes)
    local item=require("window/window8").create()
    item.box:removeSelf(false)
    box:addChild(item.box)
    item.box:setPosition(cc.p(display.cx,-display.cy))
    UICommon.createRichText(UITools.getChild(item.box,"box1"), rtes)
    UICommon.delayAndFadeOut(item.box,3)
end

---打boss专用神器----start11
function UICommon.startHitEffect(servant,boss,hitEffect,pos,damage,callBack1,callBack2)
    local act0 = cc.ScaleTo:create(0.15,1.1)
    local act1 = cc.EaseSineInOut:create(cc.MoveBy:create(0.15, cc.p(0,-100)))
    local act2_1 = cc.EaseSineIn:create(cc.MoveTo:create(0.3, pos))
    local act2_2 = cc.ScaleTo:create(0.3, 0.7)
    local act2 = cc.Spawn:create(act2_1,act2_2)
    local act3 = cc.CallFunc:create(function()
        servant:setVisible(false)
        hitEffect:getAnimation():playWithIndex(0,-1,0)
        local act4 = cc.MoveBy:create(0.15, cc.p(0,20))
        local act5 = cc.MoveBy:create(0.15, cc.p(0,-20))
        local act6 = cc.CallFunc:create(function()
          callBack1()
          UICommon.damageUp(boss,damage,pos,callBack2)
        end)
        local seq = cc.Sequence:create(act4, act5, act6)
        boss:runAction(seq)
    end)
    local seq  = cc.Sequence:create(act0, act1, act2, act3)
    servant:runAction(seq)
end

---打boss专用神器
function UICommon.startHitEffect1(servant,boss,hitEffect,pos,damage,callBack1,callBack2)
    servant.mScale = servant.mScale or 1
    local act0 = cc.ScaleTo:create(0.15,servant.mScale * 1.1)
    local act1 = cc.DelayTime:create(0.3)
    local act2 = cc.ScaleTo:create(0.15,servant.mScale)
    local act3 = cc.CallFunc:create(function()
        hitEffect:getAnimation():playWithIndex(0,-1,0)
        local act4 = cc.MoveBy:create(0.15, cc.p(0,20))
        local act5 = cc.MoveBy:create(0.15, cc.p(0,-20))
        local act6 = cc.CallFunc:create(function()
          callBack1()
          UICommon.damageUp(boss,damage,pos,callBack2)
        end)
        local seq = cc.Sequence:create(act4, act5, act6)
        boss:runAction(seq)
    end)
    local seq  = cc.Sequence:create(act0, act3, act1, act2)
    servant:runAction(seq)
end

---新打boss专用神器----start
function UICommon.startHitEffectNew(servant,boss,pos,damage,callBack1,callBack2,bossIsDie)
    local act1Wait = cc.DelayTime:create(2)
    local act10 = cc.CallFunc:create(function()
        servant.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_MOVE, -1, -1)
    end)
    local act11 = cc.MoveBy:create(0.3, cc.p(80,80))
    local act12 = cc.CallFunc:create(function()
        servant.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_ATTACK, -1, -1)
    end)
    local act13= cc.CallFunc:create(function()
        callBack1()
        UICommon.damageUp(boss,damage,pos,callBack2)
    end)
    local act2Wait = cc.DelayTime:create(1)
    local act20 = cc.CallFunc:create(function()
        boss.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_MOVE, -1, -1)
    end)
    local act21 = cc.MoveBy:create(0.3, cc.p(-80,-80))
    local act22 = cc.CallFunc:create(function()
        boss.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_ATTACK, -1, -1)
    end)
    local actDie=cc.CallFunc:create(function()
        servant.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_DEATH,-1,0)
    end)
    local actCheer=cc.CallFunc:create(function()
        boss.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_CHEER,-1,-1)
    end)
    
    local seq1  = cc.Sequence:create(act10,act11, act12,act1Wait,actDie,cc.DelayTime:create(0.4),actCheer,cc.FadeOut:create(1.0),act13,cc.CallFunc:create(function()
        servant:removeSelf()
    end))
    local seq2 = cc.Sequence:create(act20,act21, act22)
    if bossIsDie then
        actDie=cc.CallFunc:create(function()
            boss.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_DEATH, -1, -1)
        end)
        actCheer = cc.CallFunc:create(function( ... )
            servant.cavalryAni:getAnimation():play(BattleExports.config.ANIMATION_CHEER,-1,-1)
        end)
        seq1  = cc.Sequence:create(act10,act11, act12,cc.DelayTime:create(1.6),actCheer,cc.DelayTime:create(0.4),act13)
        seq2 = cc.Sequence:create(act20,act21, act22,act2Wait,actDie)
    end
    servant:runAction(seq1)
    boss:runAction(seq2)
end

-- scrollview列表
--listView:scrollView,datas:数据,itemName:item路径,setDataFunc:渲染item的方法
--openName:需要展开的节点,mid:item之间的间距,isLandscape:是否横屏,isDynamic:展开大小不固定
function UICommon.upScrollList(listView,datas,itemName,setDataFunc,openName,mid,isLandscape,isDynamic)
    local items={}
    local isOpen=false
    local lastIdex=0;
    local lastOpenSize=0;
    local length=#datas
    local itemT = require(itemName).create()
    local itemSize=itemT.box:getContentSize().height
    local openNameS=UITools.getChild(itemT.box,openName):getContentSize().height

    local sizeW = listView:getContentSize().width
    local sizeH = math.max(listView:getContentSize().height,itemSize*length)
    if isLandscape then
        itemSize=itemT.box:getContentSize().width
        openNameS=UITools.getChild(itemT,openName):getContentSize().width
        sizeH = listView:getContentSize().height
        sizeW = math.max(listView:getContentSize().width,itemSize*length)
    end
    listView:setInnerContainerSize(cc.size(sizeW,sizeH))
    for i=1,length do
        -- local box=item.clone()
        local stu = require(itemName).create()
        local item=stu.box
        item:removeSelf(false)
        listView:addChild(item)
        if isLandscape then
          item:setPositionX(sizeW-itemSize*i)
          item:setPositionY(mid)
        else
          item:setPositionY(sizeH-itemSize*i)
          item:setPositionX(mid)
        end
        setDataFunc(item,datas[i])
        table.insert(items,item)
    end
    local function refuseListPosition(index,openS)
        
        local lastOpenS=openNameS
        local nowOpenS=openNameS
        if isDynamic then
            if lastIdex~=0 then
              lastOpenS=lastOpenSize
            else
              lastOpenS=openS
            end
            lastOpenSize=openS
            nowOpenS=openS
        end
        if index==lastIdex then
            isOpen=not isOpen
        else
            isOpen=true
            if lastIdex~=0 then
                UITools.getChild(items[lastIdex],openName):setVisible(false)
            end
        end
        if isOpen then
            if isLandscape then
                listView:setInnerContainerSize(cc.size(sizeW+nowOpenS,sizeH))
            else
                listView:setInnerContainerSize(cc.size(sizeW,sizeH+nowOpenS))
            end
        else
            listView:setInnerContainerSize(cc.size(sizeW,sizeH))
        end
        
        UITools.getChild(items[index],openName):setVisible(isOpen)

        for i,v in ipairs(items) do
            if isOpen then
                if lastIdex==0 then
                    if i<=index then
                        if isLandscape then
                            items[i]:setPositionX(items[i]:getPositionX()+nowOpenS)
                        else
                            items[i]:setPositionY(items[i]:getPositionY()+nowOpenS)
                        end
                    end
                else
                    if lastIdex<index then
                        if i<=index and i>lastIdex then
                            if isLandscape then
                                items[i]:setPositionX(items[i]:getPositionX()+nowOpenS)
                            else
                                items[i]:setPositionY(items[i]:getPositionY()+nowOpenS)
                            end
                        elseif i<=lastIdex then
                            if isLandscape then
                                items[i]:setPositionX(items[i]:getPositionX()+nowOpenS-lastOpenS)
                            else
                                items[i]:setPositionY(items[i]:getPositionY()+nowOpenS-lastOpenS)
                            end
                        end
                    else
                        if i<=lastIdex and i>index then
                            if isLandscape then
                                items[i]:setPositionX(items[i]:getPositionX()-lastOpenS)
                            else
                                items[i]:setPositionY(items[i]:getPositionY()-lastOpenS)
                            end
                        elseif i<=index then
                            if isLandscape then
                                items[i]:setPositionX(items[i]:getPositionX()+nowOpenS-lastOpenS)
                            else
                                items[i]:setPositionY(items[i]:getPositionY()+nowOpenS-lastOpenS)
                            end
                        end
                    end
                end
            else
                if i<=index then
                    if isLandscape then
                        items[i]:setPositionX(items[i]:getPositionX()-lastOpenS)
                    else
                        items[i]:setPositionY(items[i]:getPositionY()-lastOpenS)
                    end
                end
            end
        end
        lastIdex=index
        if not isOpen then
            lastIdex=0
        end
        return isOpen
    end
    
    return refuseListPosition
end

function UICommon.damageUp(box,damage,pos,callBack)
    local label = cc.LabelBMFont:create("-"..damage, "fonts/yellow.fnt")
    label:setPosition(cc.p(box:getContentSize().width/2,box:getContentSize().height/2))     
    box:addChild(label)
    local act1 = cc.MoveBy:create(1, {y = 150})
    local act2 = cc.MoveBy:create(0, {y = -150})
    local act3 = cc.CallFunc:create(function()
      box:removeChild(label)
      callBack()
    end)
    local seq  = cc.Sequence:create(act1, act2, act3)
    label:runAction(seq)
end
---打boss专用神器----end

function UICommon.getTTFName()
    return "assetsRes/xtzt.ttf"
end

function UICommon.flashTextEd(lable)
    lable.__flashText.left=0
end

function UICommon.flashText(lable,txt,t,callback)

  local len  = string.len(txt)
  local arr  = {0, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc}

  t=t or 0.2
  local info={}
  lable.__flashText=info
  info.id = 0
  info.left = len
  info.isOver = true
  info.upFu=function()
    if not info.idOver then
    info.id=info.id+1
    local ones=math.ceil(12*t)
    if info.id%ones==0 then
      if info.left ~= 0 then
      local tmp = string.byte(txt, -info.left)
      local i   = #arr
      while arr[i] do
        if tmp >= arr[i] then
          info.left = info.left - i
          break
        end
        i = i - 1
      end
        lable:setString(string.sub(txt, 0,len-info.left))
      else
        lable:setString(txt)
        if callback~=nil then
          info.idOver=true
          callback()
        end    
      end
    end
  end
  end
  lable:scheduleUpdateWithPriorityLua(info.upFu, 0)
end

function UICommon.addNumEffect(txt,old,count,callback)
  local time = 50
  local nowTime = 0
  local perNum = math.floor(count / time)

  local function func()
    old = old + perNum
    txt:setString(old)
    nowTime = nowTime + 1
    if nowTime >= time then 
      txt:unscheduleUpdate() 
      if callback then callback() end
    end
  end
  txt:scheduleUpdateWithPriorityLua(func, 0)
end

--字体文本跳动
function UICommon.textEffect(box,txt,time,height,font,size)
    local label = cc.LabelBMFont:create(txt,"fonts/yellow2.fnt")
    if size~=nil then
      label:setScale(size)
    end
    label:setPosition(cc.p(box:getContentSize().width/2,box:getContentSize().height/2))
    box:addChild(label,100)
    local act1 = cc.MoveBy:create(time, {y = height})
    local act2 = cc.FadeOut:create(time)
    local spawn = cc.Spawn:create(act1,act2)
    local callback = cc.CallFunc:create(function()
      box:removeChild(label)
    end)
    local seq  = cc.Sequence:create(spawn, callback)
    label:runAction(seq)
end

--远程兵攻击特效
function UICommon.attackEffect(root,entity)
    -- dump(entity.entity,"哈哈哈3")
    -- dump(entity.entity.position,"哈哈哈1")
    -- dump(entity.entity.targetEnemy.position,"哈哈哈2")
    local startPos=cc.p(entity.entity.position.x,entity.entity.position.y)
    local endPos=cc.p(entity.entity.targetEnemy.position.x,entity.entity.targetEnemy.position.y+50)
    local name="hero2"
    local animName="bullet"
    if entity.entity.side=="right" then
        name="npc2"
        animName="arrow"
    end
    local armature=ccs.ArmatureDataManager:getInstance()
    armature:addArmatureFileInfo("armature/battle/" .. name .. "/" .. name .. ".ExportJson")
    local node=cc.Node:create()
    local anim=ccs.Armature:create(name)
    node:addChild(anim)
    root:addChild(node)
    node:setAnchorPoint(0.5,0.0)
    anim:getAnimation():play(animName,-1,-1)
    if entity.entity.side=="right" then
        node:setPosition(startPos.x,startPos.y+50)
    else
        node:setPosition(startPos.x+70,startPos.y+100)
    end
    local controlPos = cc.p((startPos.x+endPos.x)/2,endPos.y+200)
	-- local bezier2 = {startPos, controlPos, endPos}
	-- local bezierTo2 = cc.EaseSineIn:create(cc.BezierTo:create(3, bezier2))
    -- local act1 = cc.MoveTo:create(2, cc.p(entity.entity.targetEnemy.position.x,entity.entity.targetEnemy.position.y))
    local act1 = cc.JumpTo:create(1, endPos,(startPos.y+endPos.y)/2+100,1)
    -- local act2 = cc.FadeOut:create(0.5)
    local callback = cc.CallFunc:create(function()
        node:removeSelf(true)
        -- armature:removeArmatureFileInfo("armature/battle/" .. name .. "/" .. name .. ".ExportJson")
    end)
    local sequence = cc.Sequence:create(act1,callback)
    local sequence1 = cc.Sequence:create(UICommon.roTaTion(startPos,controlPos,entity.entity.side),cc.DelayTime:create(0.3),UICommon.roTaTion(controlPos,endPos,entity.entity.side))
    node:runAction(cc.Spawn:create(sequence,sequence1))
    -- node:runAction(sequence1)
end
function UICommon.roTaTion(nowP,goP,isRight)
    local height=goP.y-nowP.y
    local weight=goP.x-nowP.x
    local rotation=180*math.atan(math.abs(height)/math.abs(weight))/ math.pi;
    -- local rotation=180*Math.asin( 4/5 )/ Math.PI 
    if height>0 then
        if isRight=="right" then
            return cc.RotateTo:create(0.2,rotation)
        end
        return cc.RotateTo:create(0.2,-rotation)
    else
        if isRight=="right" then
            return cc.RotateTo:create(0.2,-rotation)
        end
        return cc.RotateTo:create(0.2,rotation)
    end
end
function UICommon.setNodeSwallowTouches(node,closeHd)
    local function onTouchBegan(touch, event)
        return true
    end
    local function onTouchEnded(touch, event)
        if closeHd~=nil then
            closeHd();
        end
    end

    local listener = cc.EventListenerTouchOneByOne:create()
    listener:registerScriptHandler(onTouchBegan, cc.Handler.EVENT_TOUCH_BEGAN)
    listener:registerScriptHandler(onTouchEnded, cc.Handler.EVENT_TOUCH_ENDED)
    listener:registerScriptHandler(onTouchEnded, cc.Handler.EVENT_TOUCH_CANCELLED)
    listener:setSwallowTouches(true)
    local eventDispatcher = node:getEventDispatcher()
    eventDispatcher:addEventListenerWithSceneGraphPriority(listener, node)
end
--页面变暗效果；盟战使用
function UICommon.maskBlackAction(parentStu,cf)
    local mask = ccui.Layout:create()
    local function overhd()
        mask:removeFromParent();
        if cf~=nil then
            cf();
        end
    end
    local sph = display.height - Config.LIUHAI - Config.LIUDI
    mask:setContentSize(display.width,sph)
    mask:setBackGroundColorType(1)
    mask:setBackGroundColor({r = 0, g = 0, b = 0})
    mask:setBackGroundColorOpacity(255)
    mask:setAnchorPoint(0,0)
    mask:setTouchEnabled(true)
    mask:setOpacity(0)
    parentStu:addChild(mask)
    mask:runAction(cc.Sequence:create(cc.FadeIn:create(1.2),cc.CallFunc:create(overhd)))
end

-- 拆分出单个字符
function UICommon.stringToChar_(str)
    local list = {}
    local len = string.len(str)
    local i = 1 
    while i <= len do
        local c = string.byte(str, i)
        local shift = 1
        if c > 0 and c <= 127 then
            shift = 1
        elseif (c >= 192 and c <= 223) then
            shift = 2
        elseif (c >= 224 and c <= 239) then
            shift = 3
        elseif (c >= 240 and c <= 247) then
            shift = 4
        end
        local char = string.sub(str, i, i+shift-1)
        i = i + shift
        table.insert(list, char)
    end
  return list, len
end

function UICommon.formatStrForChat(str,color)
  local fontColor = "#2C2C2C"
  if type(color) == "table" and color.r and color.g and color.b then
    fontColor = "#"..string.format("%02X",color.r)..string.format("%02X",color.g)..string.format("%02X",color.b)
  elseif type(color) == "string" and string.sub(color,1,1) == "#" then
    fontColor = color
  end
  local str=str or ""
  local epath="assetsRes/res/friends/emotion/%s.png";
  local ediv="<img src=%s scale=1.0 />";
  local replaceChar={};
  for w in string.gmatch(str, "%b[]") do --搜索[xxx]迭代；
      local result = string.sub(w, 2, string.len(w)-1)
      local imgPath=string.format(epath,result);
      local isExist=cc.FileUtils:getInstance():isFileExist(imgPath)
      if isExist then --表情图片是否存在
        str=string.gsub(str,"%"..w, function(str) return string.format(ediv,imgPath) end)
      end
  end
  return "<div fontcolor="..fontColor..">"..str.."</div>"
end
function UICommon.isAutoCreateAccount()
  return false
end

-- 转换成富文本
function UICommon.txts2html(arr)
    local res = ""
    for i,v in ipairs(arr) do
        local str=v.text or ""
        local epath="assetsRes/res/friends/emotion/%s.png";
        local ediv="<img src=%s scale=1.0 />";
        local replaceChar={};
        for w in string.gmatch(str, "%b[]") do --搜索[xxx]迭代；
            local result = string.sub(w, 2, string.len(w)-1)
            local imgPath=string.format(epath,result);
            local isExist=cc.FileUtils:getInstance():isFileExist(imgPath)
            if isExist then --表情图片是否存在
              str=string.gsub(str,"%"..w, function(str) return string.format(ediv,imgPath) end)
            end
        end
        if v.color == "def" then
            res = res .. "<div>"..str.."</div>"
        else
            res = res .. "<div fontcolor="..v.color..">"..str.."</div>"
        end
    end
    return res
end
function UICommon.formatRichText(str)
    local m_pString = str
    local m_nIdx = 1
    local m_nLen = string.len(m_pString)
    local newString = {}
    local defaultColor = "def"
    local m_curString = ""
    local colorMap = {
        A = "#D9CBAF", B = "#785842", C = "#FFFFFF", D = "#2C2C2C", E = "#205030", F = "#2FB835",
        G = "#5E0808", H = "#FF3535", I = "#F3D272", J = "#5A2F16", K = "#109EBC", L = "#818181",
        M = "#95B6C4", N = "#F69E2D", b = "#000000", r = "#ff0000", g = "#f1be74", x = "#e91414", a = "#2B6E22",c = "#174A23",n = "def"
    }
    local function setColorText(color)
        color = colorMap[color]
        if m_curString == "" then
            defaultColor = color
            return
        end
        local temp = {
            text = m_curString,
            color = defaultColor
        }
        defaultColor = color
        table.insert(newString,temp)
        m_curString = ""
    end
    while(m_nIdx <= m_nLen) do
        local char = string.sub(m_pString, m_nIdx, m_nIdx)
        if ("\r" == char) or ("\n" == char) then
            m_nIdx = m_nIdx + 1
            m_curString = m_curString.."\n"
        elseif ("\\" == char and 'n' == string.sub(m_pString, m_nIdx+1, m_nIdx+1)) then
            m_nIdx = m_nIdx + 2
            m_curString = m_curString.."\n"
        elseif ('#' == char) then
            m_nIdx = m_nIdx + 1
            char = string.sub(m_pString, m_nIdx, m_nIdx)
            if colorMap[char] ~= nil then
                m_nIdx = m_nIdx + 1
                setColorText(char)
            else
                m_nIdx = m_nIdx + 1
                m_curString = m_curString .. "#" ..char
            end
        else
            m_curString = m_curString .. char
            m_nIdx = m_nIdx + 1
        end
    end
    setColorText("n")
    return UICommon.txts2html(newString)
end

function UICommon:showTime(_num)
    local num = math.ceil(_num)
    local m = math.floor(num / 60)
    local h = math.floor(m / 60)
    local d = math.floor(h / 24)
    local out = ""
    if d > 0 then
        out = d .. lang("time.tian") .. (h % 24) .. lang("time.xiaoshi")
    elseif h > 0 then
        out = (h % 24) .. lang("time.xiaoshi") .. (m % 60) .. lang("time.fen")
    elseif m > 0 then
        out = (m % 60) .. lang("time.fen") .. (num % 60) .. lang("time.miao")
    else
        out = (num % 60) .. lang("time.miao")
    end
    return out
    --    return out .. "(" .. num .. ")"
end

function UICommon:servantExileSort(servantList)
  local temp1={}; --未发配
  local temp2={}; --发配
  for k,v in pairs(servantList) do
      if v.isExiling then
        table.insert(temp2,clone(v));
      else
        table.insert(temp1,clone(v));
      end
  end
  for i,v in ipairs(temp2) do
      table.insert(temp1,v);
  end
  return temp1
end

-- box是基础容器
function UICommon.layoutBox(box,itemWidth,itemHeight,dirHor)
    local size=box:getContentSize()
    local lineNum=math.floor(size.width/itemWidth)
    local useWidth=lineNum*itemWidth
    local padding=(size.width-useWidth)/2
    local items=box:getChildren()
    local useHeight=itemHeight*math.ceil(#items/lineNum)+padding+padding
    
    for i,v in ipairs(items) do
        local x
        if dirHor then
            x=(lineNum-i)%lineNum+0.5
        else
            x=(i-1)%lineNum+0.5
        end
        local y=math.floor((i-1)/lineNum)+0.5
        v:move(x*itemWidth+padding,(size.height*0.5 + useHeight*0.5)-y*itemHeight-padding)
    end
end

-- 十以內的替换
function UICommon.getChineseNum(num)
    local table = {"一","二","三","四","五","六","七","八","九","十"}
    return table[num]
end


function UICommon.createItem(val,zero)
  local universeProxy = king:getProxy("game.universe.UniverseProxy")
  local ThingIconUI=require("gameui.ThingIcon")
  
    local item = universeProxy:getSomeByKindAndId(val.kind,val.id)
    item.count = val.count
    local thingUI=ThingIconUI:new(item)
    thingUI:pickShow(zero)

    if val.tip == nil then
        val.tip = 1
    end
    if val.tip == 1 then
        local armature = ccs.Armature:create()
        armature:setScale(1.3)
        armature:init("frame")
        armature:getAnimation():playWithIndex(0,-1, 1)
        thingUI:addChild(armature)
    end
    
    return thingUI
end

function UICommon.createLoopArmature(name,scale,tag,isLoop)
  local armature = ccs.Armature:create()
  armature:init(name)
  if isLoop then
    armature:getAnimation():playWithIndex(0,-1,1)
  else
    armature:getAnimation():playWithIndex(0,-1,-1)
  end
    
    if scale ~= nil then
      armature:setScale(scale)
    end

    if tag ~= nil then
      armature:setTag(tag)
    end
    
    return armature
end

-- 重复左右摇晃 control:控件
function UICommon.repeatShake(control)
      local act1 = cc.RotateBy:create(0.2, 15)
      local act2 = act1:reverse()
      local act3 = cc.RotateBy:create(0.2, -15)
      local act4 = act3:reverse()
      local act5 = cc.RepeatForever:create(cc.EaseBackOut:create(cc.Sequence:create(act1, act2, act3, act4)))
      control:runAction(act5)
end

function UICommon.nodeGray(node,isGray,txtcol)
    local _txtcol=txtcol or {55,55,55};
    local function loop(_node,_stateType)
      local array = _node:getChildren();
      if #array>0 then
        for i,v in ipairs(array) do
          loop(v,_stateType)
          if v.getVirtualRenderer~=nil then
            local getVirtualRenderer=v:getVirtualRenderer()
            if getVirtualRenderer.setState~=nil then
              getVirtualRenderer:setState(_stateType)
            else
              if v.real_col==nil then
                v.real_col=v:getColor();
              end
              local col=_stateType==1 and _txtcol or v.real_col
              v:setColor(col)
            end
          end
        end
      end
    end
    local stateType = isGray == true and 1 or 0;
    loop(node,stateType)
end

-- Deprecated
--- Copies a table into a new table.
-- neither sub tables nor metatables will be copied.
-- @param orig The table to copy
-- @return Returns a copy of the input table
function UICommon.shallow_copy(orig)
  local copy
  if type(orig) == "table" then
    copy = {}
    for orig_key, orig_value in pairs(orig) do
      copy[orig_key] = orig_value
    end
  else -- number, string, boolean, etc
    copy = orig
  end
  return copy
end

-- 修改Text控件的内容，适用于 不同皮肤的文本切换
function UICommon.changeTextContent(uitext,key)
  if  not key then -- nil exception
      key = ""
  end

  local text = lang(key)
  if key ~= text then -- key与内容不一致，才更新
    uitext:setString(text)
  end
end

-- 
-- 读取语言包中的颜色值，默认是绿色。优先使用玩家的颜色值
-- 语言包的颜色值格式如下：lang4["color1"] = "{['r']= 255 ,['g']= 255 ,['b']= 0 }"
-- 玩家的颜色值格式如下：  cc.c3b(255,255,255)
-- 示例代码：UICommon.toColor("color1",cc.c3b(255,255,255))【推荐】
-- or UICommon.toColor("color1")
function UICommon.toColor(key,user_default) -- 参数必须合法
  local default = {r= 0,g=255,b=0}
  if not key or type(key) ~= "string" then
      return (user_default and user_default or default)
  end

  local text = lang(key)
  if key == text then
      return (user_default and user_default or default)
  else
      return loadstring("return " .. text)()
  end
end

function UICommon.createImage(filename,tag,scale)
     local image = ccui.ImageView:create()
     image:loadTexture(filename)

     if tag ~= nil then
        image:setTag(tag)
     end
    
    if scale ~= nil then
        image:setScale(scale)
    end

    return image
end

-- 重复放大缩小
function UICommon.repeScale(item,args1,args2)
    args1 = UICommon.checkValid(args1)
    args2 = UICommon.checkValid(args2)
    -- dump(args1)
    -- dump(args2)
    local act1 = cc.ScaleTo:create(args1.time, args1.x,args1.y)
    local act2 = cc.ScaleTo:create(args2.time, args2.x,args2.y)
    local seq  = cc.Sequence:create(act1, act2)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end

function UICommon.checkValid(args)
    if not args then
        args = {}
    end
    if not args.time then
        args.time = 0.8
    end

    if not args.x then
        args.x = 1
    end

    if not args.y then
        args.y = 1
    end
    return args
end

function UICommon.toNumber(key,default_num)
    if  not key then -- nil exception
        key = ""
    end

    local text = lang(key)
    if key ~= text then -- key与内容不一致，才更新
      -- uitext:setString(text)
      return tonumber(text)
    else
      return default_num
    end
end

function UICommon:getCharNum(number_num,total_num) --数字个数，字符总数
  local keyMap={'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
  local chars={};
  number_num= math.min(number_num,total_num)
  for i=1,total_num do
    if i<=number_num then
      table.insert(chars,keyMap[math.random(1,10)])
    else
      table.insert(chars,keyMap[math.random(11,#keyMap)])
    end
  end
  local result=""
  for i,v in ipairs(UICommon.shuffle(chars)) do
    result=result..v;
  end
  return result
end

function UICommon.shuffle(t) --数组乱序
    if type(t)~="table" then
        return
    end
    local l=#t
    local tab={}
    local index=1
    while #t~=0 do
        local n=math.random(0,#t)
        if t[n]~=nil then
            tab[index]=t[n]
            table.remove(t,n)
            index=index+1
        end
    end
    return tab
end

function UICommon.imageViewClickAction(imageBtn,_scale,_scale1)
    if imageBtn==nil then
      return;
    end
    local imageView = tolua.cast(imageBtn, "ccui.ImageView")
    if imageView == nil then
        error("para1 must be ccui.ImageView")
    else
      local s=_scale or 0.95
      local s1=_scale1 or 1
      imageView:stopAllActions()
      local function touchAction(dur,scale)
        return cc.ScaleTo:create(dur or 0.1,scale)
      end
      local function touchEvtHd(sender,eventType)
        if eventType == ccui.TouchEventType.began then
        
        sender:runAction(touchAction(0.01,s))
      elseif eventType == ccui.TouchEventType.moved then
      elseif eventType == ccui.TouchEventType.ended then
        sender:runAction(touchAction(0.01,s1))
      elseif eventType == ccui.TouchEventType.canceled then
        sender:runAction(touchAction(0.01,s1))
      end
      end
      imageView:addTouchEventListener(touchEvtHd)
    end
end

function UICommon.strlen(str) --计算中文两个字 英文一个字符
    local bytes = { string.byte(str, 1, #str) }
    local length, begin = 0, false
    for _, byte in ipairs(bytes) do
        if byte < 128 or byte >= 192 then
            begin = false
            length = length + 1
        elseif not begin then
            begin = true
            length = length + 1
        end
    end
    return length
end

-- 时间转时间戳
function UICommon.reallyTime(str,h,m,s)
    local Y = string.sub(str,1,4)
    local M = string.sub(str,5,6)
    local D = string.sub(str,7,8)
    return os.time({year=Y, month=M, day=D, hour=h, min=m, sec=s}) 
end

function UICommon.numberRound(val,min,max)
  if val <min then
    return max;
  end
  if val >max then
    return min;
  end
  return val
end

-- string转换table
function UICommon.strToTable(str)
    if str == nil or type(str) ~= "string" then
        return
    end
    
    return loadstring("return " .. str)()
end

-- 获取称号颜色值;返回值第一个是 文本颜色，第二个是描边颜色
function UICommon.getChenghaoColor( chenghao )
  chenghao = chenghao == nil and 0 or chenghao
  local default = cc.c3b(61,21,13)
  if chenghao == 1 then
    return cc.c3b(255,220,119)
  elseif chenghao == 2 then
    return cc.c3b(135,10,0)
  elseif chenghao == 3 then
    return cc.c3b(192,72,0)
  elseif chenghao == 4 then
    return cc.c3b(20,68,155)
  elseif chenghao == 5 then
    return cc.c3b(90,145,167)
  elseif chenghao == 10 then
      return cc.c3b(130,77,196)
  elseif chenghao == 11 then
      return cc.c3b(66,19,120)
  elseif chenghao == 12 then
    return cc.c3b(19,89,217),cc.c3b(255,219,185)
  elseif chenghao == 13 then
      return cc.c3b(227,241,255)
  elseif chenghao == 15 then
      return cc.c3b(232,86,128)
  elseif chenghao == 17 then
      return cc.c3b(255,230,157),cc.c3b(135,65,0)
  elseif chenghao == 18 then
      return cc.c3b(17,91,98)
  elseif chenghao == 20 then
      return cc.c3b(255,53,53),cc.c3b(247,217,190)
  elseif chenghao == 21 then
      return cc.c3b(9,127,45),cc.c3b(247,217,190)
  elseif chenghao == 22 then -- 皇帝
      return cc.c3b(255,220,130),cc.c3b(128,76,34)
  elseif chenghao == 23 then -- 崇德皇
      return cc.c3b(51,123,206) 
  elseif chenghao == 25 then -- 圣文皇
      return cc.c3b(232,86,128),cc.c3b(247,217,190)
  elseif chenghao == 27 then -- 孝武皇
      return cc.c3b(17,91,98),cc.c3b(247,217,190)
  end
  return default
end

-- 获取 称号聊天背景
function UICommon.getChenghaoChatBg( chenghao )
  if chenghao == 12 or chenghao == 17 or chenghao == 20 or chenghao == 23 or chenghao == 25 or chenghao == 27 then
      return 1
  elseif chenghao == 22 then
      return 2
  else
      return 0
  end
end

function UICommon.buttonClickEnabled(btn,isAble) --按钮是否置灰（不可点击）
    if btn==nil then
      return
    end
    btn:getVirtualRenderer():setState(isAble and 0 or 1)
    btn:setTouchEnabled(isAble)
end

function UICommon.getIsShowChengHao(chenghao) --是否显示称号标签
  local playerProxy = king:getProxy("game.player.PlayerProxy")
  local fashionConf=playerProxy:getConf("fashion","id",chenghao)
  if fashionConf==nil then
    -- print("no fashion conf !! chenghao :",chenghao)
    return false
  end
  -- print(fashionConf.type,"fashionConf.type___")
   return fashionConf.type~=0;
end


local PanelUI=require("gameui.PanelUI")
-- 登录/注册
function UICommon.getBanerView()
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".routeView")
  elseif  tonumber(Config.checkSkin) == 1 then
    return PanelUI:new("check.routeView")
  else
    return PanelUI:new("dengLuView")
  end
end  

-- 创角
function UICommon.getCreateRoleView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".sign")
  elseif  tonumber(Config.checkSkin) == 1 then
    return PanelUI:new("check.sign")
  else
    return PanelUI:new("sign")
  end
end

-- 主界面
function UICommon.getHomeView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".homeView")
  elseif  tonumber(Config.checkSkin) == 1 then
    return PanelUI:new("check.homeView")
  else
    return PanelUI:new("newHomeView")
  end
end

-- 门客
function UICommon.getServantView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".servantView")
  else
    return PanelUI:new("servant.newServantView")
  end
end

-- 背包
function UICommon.getBagView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".propsView")
     elseif  tonumber(Config.checkSkin) == 1 then
    return PanelUI:new("check.propsView")
  else
    return PanelUI:new("propsView")
  end
end

-- 成就
function UICommon.getAchievementView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".achieveView")
  else
    return PanelUI:new("achievement.archiveView")
  end  
end

-- 充值界面
function UICommon.getChargeView( ... )
    UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then    
    return PanelUI:new("check1."..Config.checkSkin..".chargeView")
  elseif  tonumber(Config.checkSkin) == 1 then
    return PanelUI:new("check.chargeView")
  else
    return PanelUI:new("charge.chargeView")
  end
end


function UICommon.getAchieveItem()
  return "check1."..Config.checkSkin..".itemAchieve"
end

function UICommon.getServantItem()
  return "check1."..Config.checkSkin..".itemServant"
end

-- 排行榜
function UICommon.getRankView( ... )  
end

-- 书院
function UICommon.getBookView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".bookView")
  else
    return PanelUI:new("book.newBookView")
  end
end

-- 寻访
function UICommon.getLookView( ... )
  return PanelUI:new("look.look")
end

-- 战场
function UICommon.getBossView( ... )
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return PanelUI:new("check1."..Config.checkSkin..".bossReadyView")
  else
    return PanelUI:new("boss.bossReadyViewNew")
  end
end

function UICommon.checkSkin()
  Config.checkSkin = Config.checkSkin and Config.checkSkin or 0
end

function UICommon.isNewerSkin()
  UICommon.checkSkin()
  return tonumber(Config.checkSkin) > 1
end

function UICommon.getChargeVIPItem()
  UICommon.checkSkin()
   if tonumber(Config.checkSkin) > 1 then
    return require("check1."..Config.checkSkin..".chargeVipItem").create()
  elseif  tonumber(Config.checkSkin) == 1 then
    return require("check/chargeVipItem").create()
  else
    return require("charge/chargeVipItem").create()
  end
end

-- 重复变灰
function UICommon.repeatTintToGray(send,item,eventType,key)
    -- item:setOpacity(255)
    if item == nil then return end
    local action1 = cc.FadeTo:create(1,150)
    local action2 = cc.FadeTo:create(1,30)
    local seq = cc.Sequence:create( action1, action2)
    local action = cc.RepeatForever:create(seq)
    item:runAction(action)
end 

-- 停止变灰并恢复
function UICommon.stopTintAction(send,item,eventType,key)
    if item == nil then return end
    transition.stopTarget(item)
    item:setOpacity(0)
end



function UICommon.getChargeItem()
  UICommon.checkSkin()
  if tonumber(Config.checkSkin) > 1 then
    return require("check1."..Config.checkSkin..".chargeItem").create().box
  elseif  tonumber(Config.checkSkin) == 1 then
    return require("check/chargeItem").create().box
  else
    return require("charge/chargeItem").create().box
  end
end
function UICommon.isDynamicSkinWithDt(img,skinId,dt,dressType,nodress)
    dt = 0
  local dressOff=cc.UserDefault:getInstance():getBoolForKey("dressOff"..king.serverinfo.uid)
  if dressOff then
    return
  end
  local dressProxy=king:getProxy('game.dress.DressProxy');
  local function removeActor()
    if img.actor~=nil then
        img.actor:setVisible(false)
        img.actor:runAction(cc.Sequence:create(cc.DelayTime:create(0.01),cc.RemoveSelf:create()));
        img.actor=nil;
        img.actorResAtlas=nil;
    end
  end
  if dressType==2 then
    if dt==1 then
      local animationPah=UICommon.getWifeDynamicSkinImgPath(skinId)
      if nodress==true then
        animationPah=UICommon.getWifeDynamicNoDressSkinImgPath(skinId)
      end
      if img.actorResAtlas == animationPah.atlas then
        return
      end
      removeActor()
      local actor = sp.SkeletonAnimation:create(animationPah.json, animationPah.atlas, 1)
      actor:setAnimation(0, "animation", true)
      actor:setScale(1.4)

      local imgSize=img:getContentSize();
      actor:setPosition(50+imgSize.width*0.5 , -120)
      img.actor=actor
      img.actorResAtlas=animationPah.atlas;
      img:addChild(actor,100,100)
      if img:getDescription() == "ImageView" then
        UICommon.loadExternalTexture(img,UICommon.getTouMingPng());
      else
        UICommon.loadExternalTextureNormal(img,UICommon.getTouMingPng());
      end
      img:setContentSize(imgSize)
      img:ignoreContentAdaptWithSize(false)
    end
  else
    if dt==1 then
      local animationPah=UICommon.getServantDynamicSkinImgPath(skinId)
      if img.actorResAtlas == animationPah.atlas then
        return
      end
      removeActor()
      local actor = sp.SkeletonAnimation:create(animationPah.json, animationPah.atlas, 1)
      actor:setAnimation(0, "animation", true)
      local imgSize=img:getContentSize();
      actor:setPosition(260, -120);
      img.actor=actor;
      img.actorResAtlas=animationPah.atlas;
      img:addChild(actor,100,100)
      if img:getDescription() == "ImageView" then
        UICommon.loadExternalTexture(img,UICommon.getTouMingPng());
      else
        UICommon.loadExternalTextureNormal(img,UICommon.getTouMingPng());
      end
      img:setContentSize(cc.size(460,494))
      img:ignoreContentAdaptWithSize(false)
    end
  end
end

function UICommon.isDynamicSkin(img,vo,dressType,nodress) --获取用户自身的皮肤
  local function removeActor()
    if img.actor~=nil then
        img.actor:setVisible(false)
        img.actor:runAction(cc.Sequence:create(cc.DelayTime:create(0.01),cc.RemoveSelf:create()));
        img.actor=nil;
        img.actorResAtlas=nil;
    end
  end
  local dressProxy=king:getProxy('game.dress.DressProxy')
  if dressType==2 then
    if vo.skinVO then --isShowSelf 是否要获取自己的皮肤信息
        local thisSkinInfo=dressProxy:getWifeDressByDid(vo.skinVO.id)
        if thisSkinInfo~=nil then
          local dt=thisSkinInfo.step>=3 and 1 or 0
          UICommon.isDynamicSkinWithDt(img,vo.skinVO.id,dt,dressType,nodress)
        else
          removeActor()
        end
    end
  elseif dressType==1 then
    if vo.skinVO then --isShowSelf 是否要获取自己的皮肤信息
        local thisSkinInfo=dressProxy:getServantDressByDid(vo.skinVO.id)
        if thisSkinInfo~=nil then
          local dt=thisSkinInfo.step>=3 and 1 or 0
          UICommon.isDynamicSkinWithDt(img,vo.skinVO.id,dt,dressType)
        else
          removeActor()
        end
    end
  end
end

function UICommon.getWifeDynamicSkinImgPath(skinId)
  local t={
    json="dynamicSkin/wife/jiarenweituoyi"..skinId..".json";
    atlas="dynamicSkin/wife/jiarenweituoyi"..skinId..".atlas";
  }
  return t
end

function UICommon.getWifeDynamicNoDressSkinImgPath(skinId)
  local t={
    json="dynamicSkin/wife/jiarentuoyi"..skinId..".json";
    atlas="dynamicSkin/wife/jiarentuoyi"..skinId..".atlas";
  }
  return t
end

function UICommon.getServantDynamicSkinImgPath(skinId)
  local t={
    json="dynamicSkin/servant/servant"..skinId..".json";
    atlas="dynamicSkin/servant/servant"..skinId..".atlas";
  }
  return t
end

function UICommon.getActivityDynamicImgPath(skinId)
  local t={
    json="dynamicSkin/activity/"..skinId..".json";
    atlas="dynamicSkin/activity/"..skinId..".atlas";
  }
  return t
end
--检查是否有妻子动画
function UICommon.checkWifeHaveDongHua( vo,tuo )
    local skinDir = nil
    if tuo then
        if vo.skinVO and vo.skinVO.spineTuo then
            curSpine = vo.skinVO.spineTuo
            skinDir = "wifeSkin"
        else
            curSpine = vo.spineTuo
            skinDir = "wife"
        end
    else
        if vo.skinVO and vo.skinVO.spine then
            curSpine = vo.skinVO.spine
            skinDir = "wifeSkin"
        else
            curSpine = vo.spine
            skinDir = "wife"
        end
    end
    if not curSpine then
        return false
    end

    if vo.skinVO and skinDir ~= "wifeSkin" then -- 当有皮肤时，却没有皮肤对应的动画，则显示图片
        return false
    end

    local json = "assetsRes/effect/spine/"..skinDir.."/"..curSpine..".json"
    local atlas = "assetsRes/effect/spine/"..skinDir.."/"..curSpine..".atlas"

    if not json or not atlas then
        return false
    end

    if not cc.FileUtils:getInstance():isFileExist(json) or not cc.FileUtils:getInstance():isFileExist(atlas) then
        return false
    end
    return true
end
-- 加载佳人动画
-- noSpine：关闭动画
function UICommon.setWifeDongHuaTEM(img,vo,scale,tuo,noSpine)
    scale = scale or 1
    local oldNode = img:getChildByName("jiaren")
    if oldNode then
        oldNode:removeSelf()
    end

    if noSpine then
        return UICommon.setWifeImageTEM(img,vo,scale,tuo)
    end

    local curSpine = nil
    local skinDir = nil
    if tuo then
        if vo.skinVO and vo.skinVO.spineTuo then
            curSpine = vo.skinVO.spineTuo
            skinDir = "wifeSkin"
        else
            curSpine = vo.spineTuo
            skinDir = "wife"
        end
    else
        if vo.skinVO and vo.skinVO.spine then
            curSpine = vo.skinVO.spine
            skinDir = "wifeSkin"
        else
            curSpine = vo.spine
            skinDir = "wife"
        end
    end

    if not curSpine then
        return UICommon.setWifeImageTEM(img,vo,scale,tuo)
    end

    if vo.skinVO and skinDir ~= "wifeSkin" then -- 当有皮肤时，却没有皮肤对应的动画，则显示图片
        return UICommon.setWifeImageTEM(img,vo,scale,tuo)
    end

    local json = "assetsRes/effect/spine/"..skinDir.."/"..curSpine..".json"
    local atlas = "assetsRes/effect/spine/"..skinDir.."/"..curSpine..".atlas"

    if not json or not atlas then
        return UICommon.setWifeImageTEM(img,vo,scale,tuo)
    end

    if not cc.FileUtils:getInstance():isFileExist(json) or not cc.FileUtils:getInstance():isFileExist(atlas) then
        return UICommon.setWifeImageTEM(img,vo,scale,tuo)
    end

    local wId = vo.wid or vo.id
    local pos = nil
    local posCh = {
        [2]={x=0,y=-60},
        [61]={x=0,y=-60},
        [36]={x=0,y=-80},
    }
    if posCh[wId] then
        pos = posCh[wId]
    end

    local function createrSpine(json_,atlas_,scale_)
        return sp.SkeletonAnimation:create(json_, atlas_, scale_)
    end
    local status,actor = pcall(createrSpine,json, atlas, scale)
    if status == false then
        Config.CUR_ERROR = UICommon.newTableToStr(vo) .. ",viewPool:" .. UICommon.newTableToStr(king.viewPool)
        return UICommon.setWifeImageTEM(img,vo,scale,tuo)
    end
    actor:setName("jiaren")
    actor:setAnimation(0, "standby", true)
    if pos then
        actor:setPosition(img:getContentSize().width/2 + (pos.x  * scale),(30 + pos.y) * scale)
    else
        actor:setPosition(img:getContentSize().width/2,30 * scale)
    end
    img:addChild(actor)
    return actor
end
-- 加载佳人图片
function UICommon.setWifeImageTEM(img,vo,scale,tuo)
    scale = scale or 1
    local wId = vo.wid or vo.id

    local pos = nil
    local curImg = nil
    if tuo then
        if vo.skinVO then
            local skId = vo.skinVO.id
            curImg = UICommon.getWifenodressDressImgUrl(skId)
        else
            local posND = {
                [35]={x=0,y=-60},
                [61]={x=0,y=-60},
            }
            if posND[wId] then
                pos = posND[wId]
            end
            curImg = "assetsRes/res/beauty/nodress/"..wId..".png"
        end
    else
        if vo.skinVO then
            local skId = vo.skinVO.id
            local posSK = {
                [3]={x=0,y=-80},
                [61]={x=0,y=-80},
            }
            if posSK[skId] then
                pos = posSK[skId]
            end
            curImg = UICommon.getWifebackdropDressImgUrl(skId)
        else
            local posDR = {
                [35]={x=0,y=-60},
                [61]={x=0,y=-60},
                [36]={x=0,y=-90},
            }
            if posDR[wId] then
                pos = posDR[wId]
            end
            curImg = "assetsRes/res/beauty/dress/"..wId..".png"
        end
    end
    local image = ccui.ImageView:create()
    image:setName("jiaren")
    image:setAnchorPoint(0.5, 0)
    image:loadTexture(curImg)
    image:setScale(scale)
    if pos then
        image:setPosition(img:getContentSize().width/2 + (pos.x  * scale),pos.y * scale)
    else
        image:setPosition(img:getContentSize().width/2,0)
    end
    img:addChild(image)
    return img
end

-- 加载门客动画
-- noSpine：关闭动画
function UICommon.setMenKeDongHuaTEM(img,vo,scale,noSpine)
    scale = scale or 1
    local oldNode = img:getChildByName("menke")
    if oldNode then
        oldNode:removeSelf()
    end

    if noSpine then
        return UICommon.setMenKeImageTEM(img,vo,scale)
    end

    local curSpine = nil
    local skinDir = nil
    if vo.skinVO and vo.skinVO.spine then
        curSpine = vo.skinVO.spine
        skinDir = "menkeSkin"
    else
        curSpine = vo.spine
        skinDir = "menke"
    end

    if not curSpine then
        return UICommon.setMenKeImageTEM(img,vo,scale)
    end

    if vo.skinVO and skinDir ~= "menkeSkin" then -- 当有皮肤时，却没有皮肤对应的动画，则显示图片
        return UICommon.setMenKeImageTEM(img,vo,scale)
    end

    local json = "assetsRes/effect/spine/"..skinDir.."/"..curSpine..".json"
    local atlas = "assetsRes/effect/spine/"..skinDir.."/"..curSpine..".atlas"

    if not json or not atlas then
        return UICommon.setMenKeImageTEM(img,vo,scale)
    end

    if not cc.FileUtils:getInstance():isFileExist(json) or not cc.FileUtils:getInstance():isFileExist(atlas) then
        return UICommon.setMenKeImageTEM(img,vo,scale)
    end

    local function createrSpine(json_,atlas_,scale_)
        return sp.SkeletonAnimation:create(json_, atlas_, scale_)
    end
    local status,actor = pcall(createrSpine,json, atlas, scale)
    if status == false then
        return UICommon.setMenKeImageTEM(img,vo,scale)
    end
    actor:setName("menke")
    actor:setAnimation(0, "standby", true)
    actor:setPositionX(img:getContentSize().width/2)
    img:addChild(actor)
    return actor
end
function UICommon.setStoryNPCHua(img,val,scale)
    local npc3JsonPath = "assetsRes/res/animation/spine/NPC/"..val..".json"
    local npc3AtlasPath = "assetsRes/res/animation/spine/NPC/"..val..".atlas"
    local npc3Actor = sp.SkeletonAnimation:create(npc3JsonPath, npc3AtlasPath, scale or 1)
    npc3Actor:setAnimation(0,"standby",true)
    npc3Actor:setAnchorPoint(0.5,0)
    img:removeAllChildren();
    img:addChild(npc3Actor);
    return npc3Actor
end
function UICommon.setPrionerHua(img,val,scale)
    local npc3JsonPath = "assetsRes/res/animation/spine/cell/"..val..".json"
    local npc3AtlasPath = "assetsRes/res/animation/spine/cell/"..val..".atlas"
    local npc3Actor = sp.SkeletonAnimation:create(npc3JsonPath, npc3AtlasPath, scale or 1)
    npc3Actor:setAnimation(0,"standby",true)
    npc3Actor:setAnchorPoint(0.5,0)
    npc3Actor:setPositionX(img:getContentSize().width/2)
    img:removeAllChildren();
    img:addChild(npc3Actor);
    return npc3Actor
end

-- 加载门客图片
function UICommon.setMenKeImageTEM(img,vo,scale)
    scale = scale or 1
    local curImg = nil

    if vo.skinVO then
        curImg = UICommon.getServantfullDressImgUrl(vo.skinVO.id)
    else
        local hId = vo.heroid or vo.id
        curImg = "assetsRes/res/disciple/whole/"..hId..".png"   --全身
    end

    local image = ccui.ImageView:create()
    image:setName("menke")
    image:setAnchorPoint(0.5, 0)
    image:loadTexture(curImg)
    image:setScale(scale)
    image:setPositionX(img:getContentSize().width/2)
    img:addChild(image)
    return image
end

function UICommon.setWifeImg(img,vo,dressVO)
  if vo==nil then
    return
  end
  local function removeActor()
    if img.actor~=nil then
        img.actor:setVisible(false)
        img.actor:runAction(cc.Sequence:create(cc.DelayTime:create(0.01),cc.RemoveSelf:create()));
        img.actor=nil;
        img.actorResAtlas=nil;
    end
  end
  local wifeProxy=king:getProxy('game.wife.WifeProxy')
  local dressProxy=king:getProxy('game.dress.DressProxy')
  local wifeid=vo.wid or vo.id;
  
  local roleImgPath=UICommon.getWifeIconUrl(wifeid)
  local currentDressVO=dressVO~=nil and dressVO or wifeProxy:getCurrentDressedSkin(wifeid)
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    roleImgPath=UICommon.getWifefullDressImgUrl(currentDressVO.id)
  end

  local function setRoleImg()
    if img:getDescription() == "ImageView" then
        img:ignoreContentAdaptWithSize(true)
        UICommon.loadExternalTexture(img,roleImgPath);
    else
        UICommon.loadExternalTextureNormal(img,roleImgPath);
    end
  end
  
  if img.actor==nil then
    setRoleImg()
  end
  if dressVO~=nil then
    if dressVO.id==0 then
      removeActor()
      setRoleImg()
    else
      local _vo=clone(vo)
      _vo.skinVO=dressProxy:getWifeDressByDid(dressVO.id)
      UICommon.isDynamicSkin(img,_vo,2)
    end
  else
    if vo.skinVO==nil then
      removeActor()
      setRoleImg()
    else
      UICommon.isDynamicSkin(img,vo,2)
    end
  end
end

function UICommon.setWifeNodressImg(img,vo)
  if vo==nil then
    return
  end
  local wifeProxy=king:getProxy('game.wife.WifeProxy')
  local wifeid=vo.wid or vo.id;
  local roleImgPath=UICommon.getWifeIconUrl1(wifeid)
  local currentDressVO=wifeProxy:getCurrentDressedSkin(wifeid)
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    roleImgPath=UICommon.getWifenodressDressImgUrl(currentDressVO.id)
  end
  if img:getDescription() == "ImageView" then
      img:ignoreContentAdaptWithSize(true)
      UICommon.loadExternalTexture(img,roleImgPath);
  else
      UICommon.loadExternalTextureNormal(img,roleImgPath);
  end
  UICommon.isDynamicSkin(img,vo,2,true)
end

function UICommon.setWifebackdropImg(img,vo)
  if vo==nil then
    return
  end
  local wifeProxy=king:getProxy('game.wife.WifeProxy')
  local wifeid=vo.wid or vo.id;
  local roleImgPath=UICommon.getWifeBgIconUrl(wifeid)
  local currentDressVO=wifeProxy:getCurrentDressedSkin(wifeid)
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    roleImgPath=UICommon.getWifebackdropDressImgUrl(currentDressVO.id)
  end
  if img:getDescription() == "ImageView" then
      img:ignoreContentAdaptWithSize(true)
      UICommon.loadExternalTexture(img,roleImgPath);
  else
      UICommon.loadExternalTextureNormal(img,roleImgPath);
  end
end

function UICommon.setWifeHeadImg(img,vo,dressVO)
  if vo==nil then
    return
  end
  local wifeProxy=king:getProxy('game.wife.WifeProxy')
  local wifeid=vo.wid or vo.id;
  local roleImgPath=UICommon.getWifeHeadIconUrl(wifeid)
  local currentDressVO=dressVO~=nil and dressVO or wifeProxy:getCurrentDressedSkin(wifeid)
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    roleImgPath=UICommon.getWifeheadDressImgUrl(currentDressVO.id)
  end
  if img:getDescription() == "ImageView" then
      img:ignoreContentAdaptWithSize(true)
      UICommon.loadExternalTexture(img,roleImgPath);
  else
      UICommon.loadExternalTextureNormal(img,roleImgPath);
  end
end

-- 门客全身形象通用
function UICommon.setServantImg(img,vo,dressVO,canUpdateImg) --dressVO(不为空) 构造的VO 用来显示他人的。dressVO 为空显示自身
  local function removeActor()
    if img.actor~=nil then
        img.actor:setVisible(false)
        img.actor:runAction(cc.Sequence:create(cc.DelayTime:create(0.01),cc.RemoveSelf:create()));
        img.actor=nil;
        img.actorResAtlas=nil;
    end
  end
  if canUpdateImg then --canUpdateImg 为true 动态切换普通可更新
    removeActor();
  end
  if vo==nil then
    return
  end
  local servantProxy=king:getProxy('game.servant.ServantProxy')
  local dressProxy=king:getProxy('game.dress.DressProxy')
  local heroid=vo.heroid or vo.id;
  local roleImgPath=UICommon.getServantFullIconUrl(heroid)
  local currentDressVO=dressVO~=nil and dressVO or servantProxy:getCurrentDressedSkin(heroid)
  
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    roleImgPath=UICommon.getServantfullDressImgUrl(currentDressVO.id)
  end
  local function setRoleImg()
    if img:getDescription() == "ImageView" then
        img:ignoreContentAdaptWithSize(true)
        UICommon.loadExternalTexture(img,roleImgPath);
    else
        UICommon.loadExternalTextureNormal(img,roleImgPath);
    end
  end
  if img.actor==nil then
    setRoleImg()
  end
  if dressVO~=nil then
    if dressVO.id==0 then
      removeActor()
      setRoleImg()
    else
      local _vo=clone(vo)
      _vo.skinVO=dressProxy:getServantDressByDid(dressVO.id)
      UICommon.isDynamicSkin(img,_vo,1)
    end
  else
    if vo.skinVO==nil then
      removeActor()
      setRoleImg()
    else
      UICommon.isDynamicSkin(img,vo,1)
    end
  end
end
-- 门客头像通用  --isRound圆形头框
function UICommon.setServantIcon(img,vo,dressVO,isRound)
  if vo==nil then
    return
  end
  local servantProxy=king:getProxy('game.servant.ServantProxy')
  local heroid=vo.heroid or vo.id;
  local roleIconPath
  if isRound == true then
    roleIconPath=UICommon.getServantHalfIconUrl2(heroid)--圆形头框
  else
    roleIconPath=UICommon.getServantHalfIconUrl(heroid)
  end
  local currentDressVO=dressVO~=nil and dressVO or servantProxy:getCurrentDressedSkin(heroid)
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    if isRound == true then
      roleIconPath=UICommon.getServantheadDressImgUrl2(currentDressVO.id)--圆形头框
    else
      roleIconPath=UICommon.getServantheadDressImgUrl(currentDressVO.id)
    end
  end
  if img==nil then
    return roleIconPath
  end
  if img:getDescription() == "ImageView" then
      img:ignoreContentAdaptWithSize(true)
      UICommon.loadExternalTexture(img,roleIconPath);
  else
      UICommon.loadExternalTextureNormal(img,roleIconPath);
  end
end


-- 新修改的卡牌门客头像通用  --isRound圆形头框
function UICommon.NewsetServantIcon(img,vo,dressVO,isRound)
  local scaleTag = 1 
  if vo==nil then
    return
  end
  local servantProxy=king:getProxy('game.servant.ServantProxy')
  local heroid=vo.heroid or vo.id;
  local roleIconPath
  local pos
  local currentDressVO=dressVO~=nil and dressVO or servantProxy:getCurrentDressedSkin(heroid)
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    -- 有皮肤 
    if isRound == true then
      roleIconPath=UICommon.getServantheadDressImgUrl2(currentDressVO.id)--圆形头框
    else
      roleIconPath=UICommon.getServantfullDressImgUrl(currentDressVO.id)
      scaleTag = UICommon.setServantSkinScale(currentDressVO.id)
      pos = UICommon.setServantSkinPosition(currentDressVO.id)
    end
  else
    -- 无皮肤 
    if isRound == true then
      roleIconPath=UICommon.getServantHalfIconUrl2(heroid)--圆形头框
    else
      roleIconPath=UICommon.getServantFullIconUrl(heroid)
      scaleTag = UICommon.setServantScale(heroid)
      pos = UICommon.setServantPosition(heroid)
    end
  end
  if img==nil then
    return roleIconPath
  end
  if img:getDescription() == "ImageView" then
      img:ignoreContentAdaptWithSize(true)
      UICommon.loadExternalTexture(img,roleIconPath);
  else
      UICommon.loadExternalTextureNormal(img,roleIconPath);
  end
  img:setPosition(pos.x,pos.y)
  img:setScale(scaleTag)
  
end

--设置卡牌门客位置
function UICommon.setServantPosition(id)
    local posList = {
        [1] = {x = 88,y = -40},        --以第一个英雄的位置为基准
        [2] = {x = 103,y = -40},[3] = {x = 105,y = -40},[6] = {x = 103,y = -40},[8] = {x = 93,y = -40}, [9] = {x = 88,y = -35},[10] = {x = 105,y = -40},[11] = {x = 100,y = -40},[12] = {x = 95,y = -40},
        [13] = {x = 84,y = -43},[14] = {x = 95,y = -55},[15] = {x = 110,y = -60},[16] = {x = 88,y = -50},[17] = {x = 120,y = -45},[18] = {x = 150,y = -50},
        [19] = {x = 108,y = -60},[20] = {x = 88,y = -30},[21] = {x = 100,y = -40},[22] = {x = 108,y = -50},[23] = {x = 108,y = -40},[24] = {x = 108,y = -30},[25] = {x = 100,y = -45},[26] = {x = 110,y = -60},
        [27] = {x = 98,y = -50},[28] = {x = 108,y = -60},[29] = {x = 103,y = -60},[32] = {x = 100,y = -45},[33] = {x = 118,y = -35},[34] = {x = 128,y = -40},
        [35] = {x = 98,y = -45},[36] = {x = 78,y = -40},[37] = {x = 88,y = -25},[39] = {x = 108,y = -20},[40] = {x = 98,y = -35},[42] = {x = 58,y = -40},
        [43] = {x = 108,y = -40},[44] = {x = 105,y = -30},[45] = {x = 95,y = -40},[47] = {x = 108,y = -40},[48] = {x = 108,y = -45},[49] = {x = 68,y = -45},
        [50] = {x = 100,y = -40},[51] = {x = 98,y = -30},[52] = {x = 98,y = -35},[53] = {x = 78,y = -40},[54] = {x = 83,y = -50},[55] = {x = 138,y = -40},
        [57] = {x = 105,y = -40},[59] = {x = 98,y = -50},[60] = {x = 98,y = -50},[62] = {x = 98,y = -40},[63] = {x = 80,y = -40},[65] = {x = 125,y = -45},[68] = {x = 78,y = -50},
        [90] = {x = 108,y = -40},[91] = {x = 98,y = -45},[92] = {x = 95,y = -40},[94] = {x = 108,y = -40},[95] = {x = 58,y = -40},[96] = {x = 108,y = -40},[98] = {x = 108,y = -40},[100] = {x = 105,y = -40},[101] = {x = 105,y = -45},
        [202] = {x = 88,y = -50},[203] = {x = 98,y = -40},[205] = {x = 100,y = -40},[206] = {x = 100,y = -40},[208] = {x = 38,y = -45},[209] = {x = 98,y = -43},[210] = {x = 108,y = -40},[211] = {x = 108,y = -40},
        [307] = {x = 102,y = -40},[306] = {x = 68,y = -40},[305] = {x = 98,y = -40},[302] = {x = 108,y = -40},[301] = {x = 98,y = -40},[304] = {x = 98,y = -40},[303] = {x = 98,y = -40},[213] = {x = 125,y = -40},[319] = {x = 100,y = -40},
        [326] = {x = 115,y = -40}, 
    }
    local pos = {x = 88,y = -40}
    if posList[id] then
        pos = posList[id]
    end
    return pos
end

--设置卡牌门客比例
function UICommon.setServantScale(id)
    local scaleList = {

    }
    local scale = 0.38
    if scaleList[id] then
        scale = scaleList[id]
    end
    return scale
end

--设置卡牌门客（皮肤）位置
function UICommon.setServantSkinPosition(id)
    local posList = {
        [16033] = {x = 94,y = -40}, [16034] = {x = 72,y = -40}, [16037] = {x = 110,y = -50},[50] = {x = 88,y = -35},[90] = {x = 65,y = -40},
        [100306] = {x = 115,y = -45},[100305] = {x = 98,y = -40},[100304] = {x = 78,y = -40},[100319] = {x = 110,y = -45},[100051] = {x = 105,y = -40},[100326] = {x = 170,y = -105},
    }
    local pos = {x = 88,y = -40}
    if posList[id] then
        pos = posList[id]
    end
    return pos
end

--设置卡牌门客（皮肤）比例
function UICommon.setServantSkinScale(id)
    local scaleList = {
        [100326] = 0.6
    }
    local scale = 0.38
    if scaleList[id] then
        scale = scaleList[id]
    end
    return scale
end

function UICommon.setServantBackgroundImg(img,vo,dressVO)
  if vo==nil then
    return
  end
  local servantProxy=king:getProxy('game.servant.ServantProxy')
  local heroid=vo.heroid or vo.id;
  local bgImgPath=UICommon.getDefaultServantBgUrl();
  local currentDressVO=dressVO~=nil and dressVO or servantProxy:getCurrentDressedSkin(heroid)
  
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    local path=UICommon.getServantBgUrl(currentDressVO)
    if cc.FileUtils:getInstance():isFileExist(path) then
      bgImgPath=path
    end
  end
  UICommon.loadExternalTexture(img,bgImgPath);
  img:ignoreContentAdaptWithSize(true)
end

function UICommon.getDefaultServantBgUrl()
  return 'assetsRes/res/beijing/beijing238.png'
end
function UICommon.getServantBgUrl(servantDressVO)
    local skinId=servantDressVO.id;
    local step=servantDressVO.step;
    if step==1 then
      return "assetsRes/res/dress/scenceBg/servant/1/skinBg1.jpg"
    end
    return "assetsRes/res/dress/scenceBg/servant/"..step.."/skinBg"..skinId..".jpg"
end
---佳人皮肤背景
function UICommon.setWifeBackgroundImg(img,vo,dressVO)
  if vo==nil then
    return
  end
  local wifeProxy=king:getProxy('game.wife.WifeProxy')
  local wifeid=vo.wid or vo.id;
  local bgImgPath=UICommon.getDefaultWifeBgUrl();
  local currentDressVO=dressVO~=nil and dressVO or wifeProxy:getCurrentDressedSkin(wifeid)
  
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    local path=UICommon.getWifeBgUrl(currentDressVO)
    if cc.FileUtils:getInstance():isFileExist(path) then
      bgImgPath=path
    end
  end
  UICommon.loadExternalTexture(img,bgImgPath);
  img:ignoreContentAdaptWithSize(true)

end
---佳人房间背景
function UICommon.setWifeRoomBackgroundImg(img,vo)
  if vo==nil then
    return
  end
  local wifeProxy=king:getProxy('game.wife.WifeProxy')
  local wifeid=vo.wid or vo.id;
  local bgImgPath=UICommon.getDefaultWifeRoomBgUrl();
  local currentDressVO=wifeProxy:getCurrentDressedSkin(wifeid)
  
  if currentDressVO~=nil and currentDressVO.id~=nil and currentDressVO.id~=0 then
    local path=UICommon.getWifeRoomBgUrl(currentDressVO)
    if cc.FileUtils:getInstance():isFileExist(path) then
      bgImgPath=path
    end
  end
  -- print(bgImgPath,"bgImgPath__")
  UICommon.loadExternalTexture(img,bgImgPath);
  img:ignoreContentAdaptWithSize(true)
end

function UICommon.getDefaultWifeRoomBgUrl()
  return 'assetsRes/res/beijing/beijing177.jpg'
end

function UICommon.getDefaultWifeBgUrl()
  return 'assetsRes/res/dress/ui/bj2.jpg'
end

function UICommon.getWifeFrontViewBgUrl(wifeDressVO)
    local skinId=wifeDressVO.id;
    local step=wifeDressVO.step;
    local path="assetsRes/res/dress/scenceBg/wife/"..step.."/skinBg"..skinId.."_front.png"
    -- print(path)
  return path
end

function UICommon.getWifeBgUrl(wifeDressVO)
    local skinId=wifeDressVO.id;
    local step=wifeDressVO.step;
    if step==1 then
      return "assetsRes/res/dress/scenceBg/wife/1/skinBg1.jpg"
    end
    return "assetsRes/res/dress/scenceBg/wife/"..step.."/skinBg"..skinId..".jpg"
end

function UICommon.getWifeRoomBgUrl(wifeDressVO)
    local skinId=wifeDressVO.id;
    local step=wifeDressVO.step;
    if step==1 then
      return "assetsRes/res/dress/scenceBg/wifeRoom/1/skinBg1.jpg"
    end
    return "assetsRes/res/dress/scenceBg/wifeRoom/"..step.."/skinBg"..skinId..".jpg"
end
--红颜卧室 step：品质
function UICommon.getBetroomBgUrl( id )
    return "assetsRes/res/dress/wifeRoom/bg/skinBg"..id..".jpg"
end
function UICommon.setSkinQuality(qualityImg,step)
  UICommon.loadExternalTexture(qualityImg,UICommon.getDressQualityImgUrl(step));
  local qualityAni=qualityImg:getChildByName('xiandinganniu')
  if qualityAni~=nil then
    qualityAni:setVisible(step>=4)
  end
end

function UICommon.getTouMingPng()
  return 'assetsRes/res/dress/ui/touMing.png'
end

-- 获取vip标签
function UICommon.getVIPIcon(vip)
  local path = "assetsRes/res/role/t_v0.png"
   if vip == 9 then
      path = "assetsRes/res/role/t_v9.png"
  elseif vip == 10 then
      path = "assetsRes/res/role/t_v10.png"
  elseif vip == 0 then
      path = "assetsRes/res/role/t_v0.png"
  end
  return path
end

local vertSource = "\n"..
    "attribute vec4 a_position; \n" ..
    "attribute vec2 a_texCoord; \n" ..
    "attribute vec4 a_color; \n" ..
    "#ifdef GL_ES \n" .. 
    "varying lowp vec4 v_fragmentColor;\n" ..
    "varying mediump vec2 v_texCoord;\n" ..
    "#else \n" ..
    "varying vec4 v_fragmentColor;\n" ..
    "varying vec2 v_texCoord;\n" ..
    "#endif\n" ..
    "void main()\n" ..
    "{\n" .. 
    " gl_Position = CC_PMatrix * a_position;\n"..
    " v_fragmentColor = a_color;\n"..
    " v_texCoord = a_texCoord;\n" ..
"}\n"


local fragSource =  "\n" ..
"#ifdef GL_ES \n" ..
"precision mediump float; \n" ..
"#endif \n" ..
"varying vec4 v_fragmentColor; \n" ..
"varying vec2 v_texCoord; \n" ..
"uniform vec2 resolution; \n" ..
"uniform float blurRadius;\n" ..
"uniform float sampleNum; \n" ..
"vec4 blur(vec2);\n" ..
"\n" ..

"void main(void)\n" ..
"{\n" ..
"    vec4 col = blur(v_texCoord); //* v_fragmentColor.rgb;\n" ..
"    gl_FragColor = vec4(col) * v_fragmentColor;\n" ..
"}\n" ..
"\n" ..

"vec4 blur(vec2 p)\n" ..
"{\n" ..
"    if (blurRadius > 0.0 && sampleNum > 1.0)\n" ..
"    {\n" ..
"        vec4 col = vec4(0);\n" ..
"        vec2 unit = 1.0 / resolution.xy;\n" ..
" \n" ..       
"        float r = blurRadius;\n" ..
"        float sampleStep = r / sampleNum;\n" ..
"\n" ..        
"        float count = 0.0;\n" ..
"\n" ..        
"        for(float x = -r; x < r; x += sampleStep)\n" ..
"        {\n" ..
"            for(float y = -r; y < r; y += sampleStep)\n" ..
"            {\n" ..
"                float weight = (r - abs(x)) * (r - abs(y));\n" ..
"                col += texture2D(CC_Texture0, p + vec2(x * unit.x, y * unit.y)) * weight;\n" ..
"                count += weight;\n" ..
"            }\n" ..
"        }\n" ..
"\n" ..        
"        return col / count;\n" ..
"    }\n" ..
"\n" .. 
"    return texture2D(CC_Texture0, p);\n" ..
"}\n"

--图片模糊效果 spr图片 Radius虚化等级
function UICommon:setShader(spr,Radius)
    local maskOpacity = 0.1
    local pProgram = cc.GLProgram:createWithByteArrays(vertSource,fragSource)
    local glprogramstate = cc.GLProgramState:getOrCreateWithGLProgram(pProgram)

    local size = spr:getTexture():getContentSizeInPixels()
    spr:setGLProgramState(glprogramstate)
    glprogramstate:setUniformVec2("resolution", cc.p(size.width, size.height));
    glprogramstate:setUniformFloat("blurRadius", Radius);
    glprogramstate:setUniformFloat("sampleNum", 1.5)
    glprogramstate:setUniformVec2("pix_size", cc.p(0,0));
end

function UICommon.drawEditBoxReplace(text)
    text:setVisible(false)
    local editTxt = ccui.EditBox:create(cc.size(text:getContentSize().width, text:getContentSize().height), "assetsRes/res/beijing/beijing130.png") --"good/basemenu/mainChatBgSmall.png"
    editTxt:setInputMode(cc.EDITBOX_INPUT_MODE_SINGLELINE)
     editTxt:setReturnType(cc.KEYBOARD_RETURNTYPE_DONE)
    editTxt:setPosition(text:getPositionX(), text:getPositionY())
    editTxt:setAnchorPoint(text:getAnchorPoint())
    editTxt:setFontColor(cc.c3b(0, 0, 0))
    editTxt:setFontSize(text:getFontSize())
    editTxt:setMaxLength(text:getMaxLength())
    editTxt:setFontName(UICommon.getTTFName())
    editTxt:setPlaceHolder(text:getPlaceHolder())
    editTxt:setPlaceholderFontColor(cc.c3b(0, 0, 0))
    return editTxt
end

function UICommon:isExistFile_luaOrLuac(fileName) --判断.lua 和.luac文件是否存在
  local fileName_lua=fileName..'.lua'
  local fileName_luac=fileName..'.luac'
  return cc.FileUtils:getInstance():isFileExist(fileName_lua) or cc.FileUtils:getInstance():isFileExist(fileName_luac) 
end

-- Label文本自动换行
function UICommon.setLinefeed( strText, nLineWidth )    --文本，行宽
  --读取每个字符做中文英文判断，并且记录大小
  local nStep = 1
  local index = 1
  local ltabTextSize = {}
  local tmp
  while not (nStep > #strText) do
    local c = string.sub(strText, nStep, nStep)
    local b = string.byte(c)
    tmp = b > 128 and 3 or 1
    ltabTextSize[index] = tmp
    nStep = nStep + tmp
    index = index + 1
  end
  
  --将字符按照限定行宽进行分组
  local nLineCount = 1
  local nBeginPos = 1
  local lptrCurText = nil
  local ltabText = {}
  local nCurSize = 0
  for i = 1, index - 1 do
    nCurSize = nCurSize + ltabTextSize[i]
    if nCurSize > nLineWidth then
      nCurSize = nCurSize - ltabTextSize[i]
      ltabText[nLineCount] = string.sub( strText, nBeginPos, nBeginPos + nCurSize - 1 )
      nBeginPos = nBeginPos + nCurSize
      nCurSize = ltabTextSize[i]
      nLineCount = nLineCount + 1
    end
  end
  lptrCurText = table.concat(ltabText, "\n")
  return lptrCurText
end
----设置两个文本之间的距离-----
function UICommon.resetPosByText(key,val,sp)
    local sp = sp or 20
    local key_sx = key:getScaleX()
    local key_sy = key:getScaleY()
    local key_anc = key:getAnchorPoint()
    local key_size = key:getContentSize()
    local key_x = key:getPositionX()
    local key_y = key:getPositionY()

    local re_x = key_x + key_size.width * (1 - key_anc.x) * key_sx + sp * key_sx
    local re_y = key_y + key_size.height * (1 - key_anc.y) * key_sy

    val:setAnchorPoint(0,1)
    val:setPosition(re_x, re_y)
end

-- 表长度
function UICommon.tableLen(t)
    local count = 0
    if not t then
        return count
    end
    for k,v in pairs(t) do
        count = count + 1
    end
    return count
end

-- 纯数字检测
function UICommon.checkNum(str)
    if not str or #str <= 0 then
        return false
    end
    for i=1,#str do
        local curStr = string.sub(str, i, i)
        if not tonumber(curStr) then
            return false
        end
    end
    return true
end

-- 空检测
function UICommon.checkNone(str)
    str = str or ""
    local arr=string.split(str," ")
    local isNone=true
    for i,v in ipairs(arr) do
        if v ~= "" then
            return false
        end
    end
    return true
end

-- 排行榜轮循动画播放 start
function UICommon.rmPushAnimePool(mSelf,mPool,item,idx)
    item.rmIdx = idx
    local star = UITools.getChild(item,"eff")
    local light = UITools.getChild(item,"eff2")
    if star then
        star:setVisible(false)
    end
    if light then
        light:setVisible(false)
    end
    if not idx or idx > 3 or not star or not light then
        return
    end
    mPool.rmAnimePools = mPool.rmAnimePools or {}
    mPool.rmAnimePools[idx] = item
    if not mPool.rmPlayState then
        UICommon.rmStartAnimePool(mSelf,mPool)
        mPool.rmPlayState = 1
    end
end
function UICommon.rmStartAnimePool(mSelf,mPool)
    mSelf.stu:runAction(cc.Sequence:create(
        cc.DelayTime:create(2.3),
        cc.CallFunc:create(function()
            UICommon.rmStartAnimePool(mSelf,mPool)
        end)
    ))

    if not mPool.rmAnimePools then
        return
    end

    mPool.rmPlayIdx = mPool.rmPlayIdx and (mPool.rmPlayIdx+1) or 1
    mPool.rmPlayIdx = mPool.rmPlayIdx > 3 and 1 or mPool.rmPlayIdx

    local animeItem = mPool.rmAnimePools[mPool.rmPlayIdx]
    if not animeItem or not animeItem.rmIdx or animeItem.rmIdx > 3 then
        return
    end

    local star = UITools.getChild(animeItem,"eff")
    local light = UITools.getChild(animeItem,"eff2")

    star:setVisible(true)
    light:setVisible(true)

    star:stopAllActions()
    light:stopAllActions()

    star:setOpacity(255)
    light:setOpacity(255)

    UITools.getChild(star,"phb_bangdanxiaoguo"):getAnimation():playWithIndex(0, -1, 0)
    UITools.getChild(light,"phb_bangdanxiaoguo"):getAnimation():playWithIndex(1, -1, 0)

    local act1 = cc.DelayTime:create(1.5)
    local act2 = cc.FadeOut:create(0.8)
    star:runAction(cc.Sequence:create(act1,act2))
    light:runAction(cc.Sequence:create(act1,act2))
end
function UICommon.rmClearAnimePool(mPool)
    mPool.rmPlayIdx = nil
    mPool.rmPlayState = nil
    mPool.rmAnimePools = nil
end
-- 排行榜轮循动画播放 end

function UICommon.ctrlNodeAnimateChildPause(armatureNode,isPause) --停止皮肤特效层的动画；
  local function each( node )
        local childs = node:getChildren()
        if #childs>0 then
            for i,v in ipairs(childs) do
                if v:getName()=='skeletonNode' then
                    for si,sv in ipairs(v:getChildren()) do
                      sv:clearTracks();
                    end
                end
                if #v:getChildren()>0 then
                    if v.getAnimation~=nil then
                        v:getAnimation():gotoAndPause(0);
                    else
                        each(v)
                    end
                else
                    each(v)
                end
            end
        end
    end
    if isPause then
        each(armatureNode)
    end
end

function UICommon.getRichLabelFormatContent(strText,fontSize,charSpace,maxWidth,fontPath)
    local charArr = UICommon.getRichLabelFormatContentToArr(strText)
    UICommon.getRichLabelFormatContentByArr(charArr,fontSize,charSpace,maxWidth,fontPath)
end

function UICommon.getRichLabelFormatContentToArr(strText)
    local charArr = {}
    local temCharArr = string.split(strText, " ")
    for i,v in ipairs(temCharArr) do
        if i>1 then
            table.insert(charArr," ")
            table.insert(charArr,v)
        else
            table.insert(charArr,v)
        end
    end
    return charArr
end

function UICommon.getRichLabelFormatContentByArr(charArr,fontSize,charSpace,maxWidth,fontPath)
    local RichLabel=require "game.friend.richlabel.RichLabel"
    local label = RichLabel.new {
        fontName = fontPath or UICommon.getTTFName(),
        fontSize = fontSize or 24,
        fontColor = cc.c3b(61,21,13),
        lineSpace = 0,
        charSpace = charSpace or 0,
        maxWidth = maxWidth or 1000,
    }
    local nCurSize = 0
    local temRowStr = ""
    for i,v in ipairs(charArr) do
        label:setString(v);
        local label_width = label:getSize().width
        if (nCurSize + label_width) >= (maxWidth ) then
            temRowStr = temRowStr.."\n"
            nCurSize = 0
        end
        nCurSize = nCurSize + label:getSize().width
        temRowStr =  temRowStr .. v ;
    end
    return temRowStr
end

function UICommon.loadArmatureM(path,name)
    ccs.ArmatureDataManager:getInstance():addArmatureFileInfo(path)
    local armature = ccs.Armature:create()
    armature:init(name)
    return armature

    -- local pName = UICommon.getPnameByPathM(path)
    -- if not pName then
    --     return nil
    -- end
    
    -- local armature = ccs.Armature:create()
    -- armature:init(pName)
    -- return armature
end

function UICommon.getPnameByPathM(path)
    local len = string.len(path)
    local a,b = UICommon.stringFindLastM(path,"[.]")    
    local a1,b1 = UICommon.stringFindLastM(path,"/")
    if b == nil then
        return nil
    end
    if b1 == nil then  
        b1 = 0         
    end
    return string.sub(path, b1+1, b-1)       
end

function UICommon.stringFindLastM(str,substr)    
    local a,b,a1,b1 = 0,0,nil,nil
    while(a ~= nil) do
        a,b = string.find(str,substr,b+1)
        a1 = a or a1
        b1 = b or b1
    end
    return a1,b1
end

function UICommon.createText2(string,fontSize,fontName)
    local text = ccui.Text:create()
    text:setFontSize(fontSize)
    text:setString(string)
    text:setColor(cc.c3b(255,255,255))
    if fontName then
        text:setFontName(fontName)
    else
        text:setFontName("assetsRes/xtzt.ttf")
    end
    return text
end

                
function UICommon.aiXinNode(per,scale) 
    if per > 1 then
        per = 1
    end
    local aixinItem = require("common.aiXinNode").create().root
    local aixinNode = UITools.getChild(aixinItem,"aiXin")
    aixinItem:setName("aixin_ani")
    local btn = ccui.Button:create()
    local bg = ccui.ImageView:create("assetsRes/res/wife/newWife/xin.png")
    btn:addChild(bg,1)
    local moban = UICommon.aiXinTemplate()
    btn:addChild(moban,2)
    local kuang = ccui.ImageView:create("assetsRes/res/wife/newWife/kuang.png")
    btn:addChild(kuang,3)
    local cbtn = UICommon.createrBtn(cc.size(300,300),cc.p(0,0),0)
    btn:addChild(cbtn,4)

    if per < 1 then
        local bolang = UICommon.addbolang()
        bolang:setPositionY(-(168 / 2) + 168 * per)  
        moban:addChild(bolang,2)
    end

    local shui = UICommon.addshui(per)
    moban:addChild(shui,1)

    if per == 1 then
        local shuiman = UICommon.addshuiman()
        btn:addChild(shuiman,4)
    end
    
----爱心飘字
    local txt = UITools.getChild(aixinItem,"intimacy")
    txt:hide()
    function aixinItem:piaoEffect()
        txt:show()
        transition.fadeOut(txt,{removeSelf=true,delay=1.2,time=0.3})
        transition.moveBy(txt,{y=25,time=1.5})
    end

----爱心点击
    function aixinItem:clickEffect(clickHd)
        UICommon.changeBtnStateImage(cbtn,btn,clickHd)
    end

-----爱心文本
    local txtNode = UITools.getChild(aixinItem,"txtNode")
    local loveNum = UITools.getChild(aixinItem,"txtNode","loveNum")
    local loveAiMu = UITools.getChild(aixinItem,"txtNode","loveAiMu")
    local loveKuangRe = UITools.getChild(aixinItem,"txtNode","loveKuangRe")
    txtNode:hide()
    function aixinItem:txtNode(love,tuo,Y)
        txtNode:show()
        if per < 1 then
            loveNum:show()
            loveNum:setString(love.."/"..tuo)
            loveAiMu:show()
            loveAiMu:setString(lang("tuo.aimu"))
            loveKuangRe:hide()
        elseif per == 1 then
            loveNum:hide()
            loveAiMu:hide()
            loveKuangRe:show()
            loveKuangRe:setString(lang("tuo.kuangre"))
        end
        txtNode:setPositionY(Y or 0)
    end
    aixinNode:addChild(btn)
    aixinNode:setScale(scale or 1)
    return aixinItem
end

function UICommon.aiXinTemplate()   -----爱心通用模板
    local clipNode = cc.ClippingNode:create()
    local mask = cc.Sprite:create("assetsRes/res/wife/newWife/xin.png")
    clipNode:setInverted(false)
    clipNode:setAlphaThreshold(0)
    clipNode:setStencil(mask)
    return clipNode
end

function UICommon.addbolang()     --爱心波浪
    local jsonPath = 'assetsRes/effect/bolang/an_nvbowen.json'
    local atlasPath = 'assetsRes/effect/bolang/an_nvbowen.atlas'
    local bolang = sp.SkeletonAnimation:create(jsonPath, atlasPath,1)
    bolang:setAnimation(0,"an_nvbowen",true)
    return bolang
end
function UICommon.addshui(per)      --爱心水
    local jsonPath = 'assetsRes/effect/water/an_nvshui.json'
    local atlasPath = 'assetsRes/effect/water/an_nvshui.atlas'
    local shui = sp.SkeletonAnimation:create(jsonPath, atlasPath,1)
    shui:setAnimation(0,"an_nvshui",true)

    local clipNode = cc.ClippingNode:create()
    local layOut = cc.LayerColor:create(cc.c4b(0,0,0,255))
    layOut:setAnchorPoint(0.5,0)
    layOut:setContentSize(200,168 * per)
    layOut:move(-100,-(168 / 2))
    clipNode:setInverted(false)
    clipNode:setStencil(layOut)
    clipNode:addChild(shui)
    return clipNode
end

function UICommon.addshuiman()   --爱心水满状态
    local jsonPath = 'assetsRes/effect/shuiman/an_nvshuiman.json'
    local atlasPath = 'assetsRes/effect/shuiman/an_nvshuiman.atlas'
    local shui = sp.SkeletonAnimation:create(jsonPath, atlasPath,1)
    shui:setAnimation(0,"an_nvshuiman",true)
    return shui
end

------容器，数量，灰星，星星图片，星星间距, 从左往右再从右往左
function UICommon.createStar(layout,nums,isLeft,starImage,interval,sequence)
    layout:removeAllChildren()
    local isGray=false
    if isLeft and nums==0 then 
        nums=1
        isGray=true
    end
    -- local pxs={16,10,2}
    local px=0
    -- px= pxs[nums]~=nil and pxs[nums] or px
    for i=1,nums do
        local star=starImage:clone()
        if sequence then 
            px=px-interval
        else
            px=px+interval
        end
        star:setPositionX(px)
        star:setPositionY(9)
        layout:addChild(star)
        if isGray then
            local getVirtualRenderer=star:getVirtualRenderer()
            getVirtualRenderer:setState(1)
        end
    end
end

-- 获取文本实际高度 
function UICommon.testHeight(item)
    local shrinkLabel = nil
    local fontName = item:getFontName()
    local fontSize = item:getFontSize()
    local textColor = item:getTextColor()
    local effectColor = item:getEffectColor()
    local outlineSize = item:getOutlineSize()
    local shadowColor = item:getShadowColor()
    local shadowOffset = item:getShadowOffset()
    local horizontalAlignment = item:getTextHorizontalAlignment()
    local verticalAlignment = item:getTextVerticalAlignment()
    -- trace("===s===",fontName,fontSize,textColor,outlineSize,shadowColor,shadowOffset,horizontalAlignment,verticalAlignment)
    local size = item:getContentSize()
    local str = item:getString()
    local point = item:getAnchorPoint()
    if not cc.FileUtils:getInstance():isFileExist(fontName) then
        shrinkLabel = cc.Label:createWithSystemFont("",fontName,fontSize,cc.size(size.width,0),horizontalAlignment,verticalAlignment)
    else
        shrinkLabel = cc.Label:createWithTTF("",fontName,fontSize,cc.size(size.width,0),horizontalAlignment,verticalAlignment)
    end
    if shrinkLabel == nil then return end
    shrinkLabel:setAnchorPoint(point)
    shrinkLabel:setTextColor(textColor)
    if outlineSize ~= 0 then
        shrinkLabel:enableOutline(effectColor,outlineSize)
    end
    if shadowOffset.width ~= 0 or shadowOffset.height ~= 0 then
        shrinkLabel:enableShadow(shadowColor,shadowOffset)
    end
    shrinkLabel:setString(str)
    local size = shrinkLabel:getContentSize()
    return size.height
end

--转化为时间戳
-- function UICommon.changeDate(strDate)
--     local _, _, y, m, d, _hour, _min, _sec = string.find(strDate, "(%d+)/(%d+)/(%d+)%s*(%d+):(%d+):(%d+)");
--     local timestamp = os.time({year=y, month = m, day = d, hour = _hour, min = _min, sec = _sec});
--     return timestamp
-- end

function UICommon.setCascadeOpacityEnabled( node, is_true )  
    if node then
        if node.setCascadeOpacityEnabled then
            node:setCascadeOpacityEnabled( is_true)
        end
        if node.setCascadeColorEnabled then
            node:setCascadeColorEnabled( is_true)
        end
        local children = node:getChildren()
        for _, child in ipairs(children or {}) do
            UICommon.setCascadeOpacityEnabled( child, is_true)
        end
    end
end

--节点左右侧顺序进入
function UICommon.NodeLRMoveIn(nodes,during,offsetX,timeSpan,ease,handler)
    during=during or 0.5;  
    offsetX=offsetX or 0;
    timeSpan=timeSpan or 0;
    ease=ease or -1;

    local num=#nodes;
    for k,v in pairs(nodes) do
        local x,y=v:getPosition();
        local pos=cc.p(x,y);
        v:setPosition(pos.x+offsetX,pos.y);
        local action;
        if timeSpan~=0 then
            local delay=cc.DelayTime:create(k*timeSpan);
            local moveTo=cc.MoveTo:create(during,pos);
            action=cc.Sequence:create(delay,moveTo);
        else
            action=cc.MoveTo:create(during,pos);
        end

        if ease>=0 then
            if ease==0 then
                action=cc.EaseBackOut:create(action);
            else
                action=cc.EaseOut:create(action,ease);
            end
        end
        if k==num and handler then
            local func=cc.CallFunc:create(handler);
            action=cc.Sequence:create(action,func);
        end
        v:runAction(action);
    end
end

--左右移动
function UICommon.NodeLRMove(nodes,time,offsetX,timeSpan,ease,handler)
    time=time or 0.5;
    offsetX=offsetX or 0;
    timeSpan=timeSpan or 0;
    ease=ease or -1;

    local num=#nodes;
    for k,v in pairs(nodes) do
        local x,y=v:getPosition();
        local pos=cc.p(x+offsetX,y);
        local action;
        if timeSpan~=0 then
            local delay=cc.DelayTime:create(k*timeSpan);
            local moveTo=cc.MoveTo:create(time,pos);
            action=cc.Sequence:create(delay,moveTo);
        else
            action=cc.MoveTo:create(time,pos);
        end

        if ease>=0 then
            if ease==0 then
                action=cc.EaseBackOut:create(action);
            else
                action=cc.EaseOut:create(action,ease);
            end
        end

        if k==num and handler then
            local func=cc.CallFunc:create(handler);
            action=cc.Sequence:create(action,func);
        end
        v:runAction(action);
    end
end

function UICommon.mScheduleScriptFunc(stu,key,len,callback,overCall)
    if len <= 0 then
        if overCall then
            overCall()
        end
        return
    end
    local idx = 1
    local st = 0
    local isOver = false
    local perFrame = 1/60
    UICommon.mOpenScheduleFunc(stu,key,perFrame,function ( ... )
        if isOver then
            UICommon.mCloseScheduleFunc(stu,key)
            if overCall then
                overCall()
            end
            return
        end

        st = os.clock()
        for i=idx,len do
            --到达时限时，余下script不在当前帧运行
            if(math.abs(os.clock() - st) > perFrame*0.5) then
                idx = i
                return
            end
            if i == len then
                idx = len
                isOver = true
            end
            callback(i)
        end
    end)
end
function UICommon.mOpenScheduleFunc(stu,key,perFrame,callback)
    stu.mSchedulePool = stu.mSchedulePool or {}
    stu.mSchedulePool[key] = cc.Director:getInstance():getScheduler():scheduleScriptFunc(function ( ... )
        callback()
    end, perFrame, false)
end
function UICommon.mCloseScheduleFunc(stu,key)
    if stu.mSchedulePool == nil then
        return
    end
    if stu.mSchedulePool[key] then
        cc.Director:getInstance():getScheduler():unscheduleScriptEntry(stu.mSchedulePool[key])
        stu.mSchedulePool[key] = nil
    end
end
function UICommon.mCloseAllScheduleFunc(stu)
    if stu.mSchedulePool == nil then
        return
    end
    for k,v in pairs(stu.mSchedulePool) do
        UICommon.mCloseScheduleFunc(stu,k)
    end
end
function UICommon.setRareAnimalDongHuaTEM(img,id,scale,noSpine)
    id = id or 0
    scale = scale or 1
    local oldNode = img:getChildByName("zhenshou")
    if oldNode then
        oldNode:removeSelf()
    end

    if noSpine then
        return UICommon.setRareAnimalImageTEM(img,id,scale)
    end

    local json = "assetsRes/effect/zhenshou/zs"..id..".json"
    local atlas = "assetsRes/effect/zhenshou/zs"..id..".atlas"

    if not cc.FileUtils:getInstance():isFileExist(json) or not cc.FileUtils:getInstance():isFileExist(atlas) then
        return UICommon.setRareAnimalImageTEM(img,id,scale)
    end

    local pos = nil
    local posPool = {
        [6001]={x=0,y=-80},
        [6102]={x=0,y=-50},
        [6201]={x=30,y=-50},
        [6202]={x=-30,y=-70},
        [6204]={x=0,y=-50},
        [6205]={x=30,y=-30},
        [6206]={x=20,y=-100},
        [6207]={x=-10,y=-50},
        [6208]={x=0,y=-50},
    }
    if posPool[id] then
        pos = posPool[id]
    end

    local sc = 1
    local scPool = {
        [6102]=0.8,
        [6201]=0.85,
        [6204]=0.85,
        [6205]=0.95,
        [6206]=0.95,
    }
    if scPool[id] then
        sc = scPool[id]
    end
    scale = scale * sc

    local function createrSpine(json_,atlas_,scale_)
        return sp.SkeletonAnimation:create(json_, atlas_, scale_)
    end
    local status,actor = pcall(createrSpine,json, atlas, scale)
    if status == false then
        Config.CUR_ERROR = "#RareAnimal=====,id:"..id..",viewPool:"..UICommon.newTableToStr(king.viewPool)
        return UICommon.setRareAnimalImageTEM(img,id,scale)
    end
    actor:setName("zhenshou")
    actor:setAnimation(0, "standby", true)
    if pos then
        actor:setPosition(img:getContentSize().width/2 + ((pos.x or 0)  * scale),(pos.y or 0) * scale)
    else
        actor:setPosition(img:getContentSize().width/2,0)
    end
    img:addChild(actor)
    return actor
end
function UICommon.setRareAnimalImageTEM(img,id,scale)
    id = id or 0
    scale = scale or 1

    local curImg = UICommon.getRareAnimalImgUrl(id)

    if not cc.FileUtils:getInstance():isFileExist(curImg) then
        return
    end

    local pos = nil
    local posPool = {
        [6002]={x=40,y=100},
        [6101]={x=0,y=80},
        [6202]={x=0,y=-80},
    }
    if posPool[id] then
        pos = posPool[id]
    end

    local sc = 1
    local scPool = {
        [6102]=0.8,
        [6201]=0.85,
        [6202]=0.85,
    }
    if scPool[id] then
        sc = scPool[id]
    end
    scale = scale * sc

    local image = ccui.ImageView:create()
    image:setName("zhenshou")
    image:setAnchorPoint(0.5, 0)
    image:loadTexture(curImg)
    image:setScale(scale)
    if pos then
        image:setPosition(img:getContentSize().width/2 + (pos.x  * scale),(-350 + pos.y) * scale)
    else
        image:setPosition(img:getContentSize().width/2,-350 * scale)
    end
    img:addChild(image)
    return img
end
function UICommon.getRareAnimalImgUrl(id)
    return "assetsRes/res/zhanma/zsImg/"..(id or 0)..".png"
end

return UICommon